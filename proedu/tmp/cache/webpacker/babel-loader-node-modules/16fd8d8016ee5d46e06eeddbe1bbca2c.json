{"ast":null,"code":"/*!\n * \n * Super simple wysiwyg editor v0.8.18\n * https://summernote.org\n * \n * \n * Copyright 2013- Alan Hong. and other contributors\n * summernote may be freely distributed under the MIT license.\n * \n * Date: 2020-05-20T16:47Z\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"jquery\"));else if (typeof define === 'function' && define.amd) define([\"jquery\"], factory);else {\n    var a = typeof exports === 'object' ? factory(require(\"jquery\")) : factory(root[\"jQuery\"]);\n\n    for (var i in a) {\n      (typeof exports === 'object' ? exports : root)[i] = a[i];\n    }\n  }\n})(window, function (__WEBPACK_EXTERNAL_MODULE__0__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 53);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      0:\n      /***/\n      function _(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n        /***/\n      },\n\n      /***/\n      1:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n        /* harmony import */\n\n\n        var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n\n          return _typeof(obj);\n        }\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Renderer = /*#__PURE__*/function () {\n          function Renderer(markup, children, options, callback) {\n            _classCallCheck(this, Renderer);\n\n            this.markup = markup;\n            this.children = children;\n            this.options = options;\n            this.callback = callback;\n          }\n\n          _createClass(Renderer, [{\n            key: \"render\",\n            value: function render($parent) {\n              var $node = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.markup);\n\n              if (this.options && this.options.contents) {\n                $node.html(this.options.contents);\n              }\n\n              if (this.options && this.options.className) {\n                $node.addClass(this.options.className);\n              }\n\n              if (this.options && this.options.data) {\n                jquery__WEBPACK_IMPORTED_MODULE_0___default.a.each(this.options.data, function (k, v) {\n                  $node.attr('data-' + k, v);\n                });\n              }\n\n              if (this.options && this.options.click) {\n                $node.on('click', this.options.click);\n              }\n\n              if (this.children) {\n                var $container = $node.find('.note-children-container');\n                this.children.forEach(function (child) {\n                  child.render($container.length ? $container : $node);\n                });\n              }\n\n              if (this.callback) {\n                this.callback($node, this.options);\n              }\n\n              if (this.options && this.options.callback) {\n                this.options.callback($node);\n              }\n\n              if ($parent) {\n                $parent.append($node);\n              }\n\n              return $node;\n            }\n          }]);\n\n          return Renderer;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = {\n          create: function create(markup, callback) {\n            return function () {\n              var options = _typeof(arguments[1]) === 'object' ? arguments[1] : arguments[0];\n              var children = Array.isArray(arguments[0]) ? arguments[0] : [];\n\n              if (options && options.children) {\n                children = options.children;\n              }\n\n              return new Renderer(markup, children, options, callback);\n            };\n          }\n        };\n        /***/\n      },\n\n      /***/\n      2:\n      /***/\n      function _(module, exports) {\n        /* WEBPACK VAR INJECTION */\n        (function (__webpack_amd_options__) {\n          /* globals __webpack_amd_options__ */\n          module.exports = __webpack_amd_options__;\n          /* WEBPACK VAR INJECTION */\n        }).call(this, {});\n        /***/\n      },\n\n      /***/\n      3:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\"; // EXTERNAL MODULE: external {\"root\":\"jQuery\",\"commonjs2\":\"jquery\",\"commonjs\":\"jquery\",\"amd\":\"jquery\"}\n\n        var external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_ = __webpack_require__(0);\n\n        var external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default = /*#__PURE__*/__webpack_require__.n(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_); // CONCATENATED MODULE: ./src/js/base/summernote-en-US.js\n\n\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote || {\n          lang: {}\n        };\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.lang, {\n          'en-US': {\n            font: {\n              bold: 'Bold',\n              italic: 'Italic',\n              underline: 'Underline',\n              clear: 'Remove Font Style',\n              height: 'Line Height',\n              name: 'Font Family',\n              strikethrough: 'Strikethrough',\n              subscript: 'Subscript',\n              superscript: 'Superscript',\n              size: 'Font Size',\n              sizeunit: 'Font Size Unit'\n            },\n            image: {\n              image: 'Picture',\n              insert: 'Insert Image',\n              resizeFull: 'Resize full',\n              resizeHalf: 'Resize half',\n              resizeQuarter: 'Resize quarter',\n              resizeNone: 'Original size',\n              floatLeft: 'Float Left',\n              floatRight: 'Float Right',\n              floatNone: 'Remove float',\n              shapeRounded: 'Shape: Rounded',\n              shapeCircle: 'Shape: Circle',\n              shapeThumbnail: 'Shape: Thumbnail',\n              shapeNone: 'Shape: None',\n              dragImageHere: 'Drag image or text here',\n              dropImage: 'Drop image or Text',\n              selectFromFiles: 'Select from files',\n              maximumFileSize: 'Maximum file size',\n              maximumFileSizeError: 'Maximum file size exceeded.',\n              url: 'Image URL',\n              remove: 'Remove Image',\n              original: 'Original'\n            },\n            video: {\n              video: 'Video',\n              videoLink: 'Video Link',\n              insert: 'Insert Video',\n              url: 'Video URL',\n              providers: '(YouTube, Vimeo, Vine, Instagram, DailyMotion or Youku)'\n            },\n            link: {\n              link: 'Link',\n              insert: 'Insert Link',\n              unlink: 'Unlink',\n              edit: 'Edit',\n              textToDisplay: 'Text to display',\n              url: 'To what URL should this link go?',\n              openInNewWindow: 'Open in new window',\n              useProtocol: 'Use default protocol'\n            },\n            table: {\n              table: 'Table',\n              addRowAbove: 'Add row above',\n              addRowBelow: 'Add row below',\n              addColLeft: 'Add column left',\n              addColRight: 'Add column right',\n              delRow: 'Delete row',\n              delCol: 'Delete column',\n              delTable: 'Delete table'\n            },\n            hr: {\n              insert: 'Insert Horizontal Rule'\n            },\n            style: {\n              style: 'Style',\n              p: 'Normal',\n              blockquote: 'Quote',\n              pre: 'Code',\n              h1: 'Header 1',\n              h2: 'Header 2',\n              h3: 'Header 3',\n              h4: 'Header 4',\n              h5: 'Header 5',\n              h6: 'Header 6'\n            },\n            lists: {\n              unordered: 'Unordered list',\n              ordered: 'Ordered list'\n            },\n            options: {\n              help: 'Help',\n              fullscreen: 'Full Screen',\n              codeview: 'Code View'\n            },\n            paragraph: {\n              paragraph: 'Paragraph',\n              outdent: 'Outdent',\n              indent: 'Indent',\n              left: 'Align left',\n              center: 'Align center',\n              right: 'Align right',\n              justify: 'Justify full'\n            },\n            color: {\n              recent: 'Recent Color',\n              more: 'More Color',\n              background: 'Background Color',\n              foreground: 'Text Color',\n              transparent: 'Transparent',\n              setTransparent: 'Set transparent',\n              reset: 'Reset',\n              resetToDefault: 'Reset to default',\n              cpSelect: 'Select'\n            },\n            shortcut: {\n              shortcuts: 'Keyboard shortcuts',\n              close: 'Close',\n              textFormatting: 'Text formatting',\n              action: 'Action',\n              paragraphFormatting: 'Paragraph formatting',\n              documentStyle: 'Document Style',\n              extraKeys: 'Extra keys'\n            },\n            help: {\n              'escape': 'Escape',\n              'insertParagraph': 'Insert Paragraph',\n              'undo': 'Undo the last command',\n              'redo': 'Redo the last command',\n              'tab': 'Tab',\n              'untab': 'Untab',\n              'bold': 'Set a bold style',\n              'italic': 'Set a italic style',\n              'underline': 'Set a underline style',\n              'strikethrough': 'Set a strikethrough style',\n              'removeFormat': 'Clean a style',\n              'justifyLeft': 'Set left align',\n              'justifyCenter': 'Set center align',\n              'justifyRight': 'Set right align',\n              'justifyFull': 'Set full align',\n              'insertUnorderedList': 'Toggle unordered list',\n              'insertOrderedList': 'Toggle ordered list',\n              'outdent': 'Outdent on current paragraph',\n              'indent': 'Indent on current paragraph',\n              'formatPara': 'Change current block\\'s format as a paragraph(P tag)',\n              'formatH1': 'Change current block\\'s format as H1',\n              'formatH2': 'Change current block\\'s format as H2',\n              'formatH3': 'Change current block\\'s format as H3',\n              'formatH4': 'Change current block\\'s format as H4',\n              'formatH5': 'Change current block\\'s format as H5',\n              'formatH6': 'Change current block\\'s format as H6',\n              'insertHorizontalRule': 'Insert horizontal rule',\n              'linkDialog.show': 'Show Link Dialog'\n            },\n            history: {\n              undo: 'Undo',\n              redo: 'Redo'\n            },\n            specialChar: {\n              specialChar: 'SPECIAL CHARACTERS',\n              select: 'Select Special characters'\n            },\n            output: {\n              noSelection: 'No Selection Made!'\n            }\n          }\n        }); // CONCATENATED MODULE: ./src/js/base/core/env.js\n\n        var isSupportAmd = typeof define === 'function' && __webpack_require__(2); // eslint-disable-line\n\n        /**\n         * returns whether font is installed or not.\n         *\n         * @param {String} fontName\n         * @return {Boolean}\n         */\n\n\n        var genericFontFamilies = ['sans-serif', 'serif', 'monospace', 'cursive', 'fantasy'];\n\n        function validFontName(fontName) {\n          return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.inArray(fontName.toLowerCase(), genericFontFamilies) === -1 ? \"'\".concat(fontName, \"'\") : fontName;\n        }\n\n        function env_isFontInstalled(fontName) {\n          var testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\n          var testText = 'mmmmmmmmmmwwwww';\n          var testSize = '200px';\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          context.font = testSize + \" '\" + testFontName + \"'\";\n          var originalWidth = context.measureText(testText).width;\n          context.font = testSize + ' ' + validFontName(fontName) + ', \"' + testFontName + '\"';\n          var width = context.measureText(testText).width;\n          return originalWidth !== width;\n        }\n\n        var userAgent = navigator.userAgent;\n        var isMSIE = /MSIE|Trident/i.test(userAgent);\n        var browserVersion;\n\n        if (isMSIE) {\n          var matches = /MSIE (\\d+[.]\\d+)/.exec(userAgent);\n\n          if (matches) {\n            browserVersion = parseFloat(matches[1]);\n          }\n\n          matches = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(userAgent);\n\n          if (matches) {\n            browserVersion = parseFloat(matches[1]);\n          }\n        }\n\n        var isEdge = /Edge\\/\\d+/.test(userAgent);\n        var isSupportTouch = 'ontouchstart' in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0; // [workaround] IE doesn't have input events for contentEditable\n        // - see: https://goo.gl/4bfIvA\n\n        var inputEventName = isMSIE ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\n        /**\n         * @class core.env\n         *\n         * Object which check platform and agent\n         *\n         * @singleton\n         * @alternateClassName env\n         */\n\n        /* harmony default export */\n\n        var env = {\n          isMac: navigator.appVersion.indexOf('Mac') > -1,\n          isMSIE: isMSIE,\n          isEdge: isEdge,\n          isFF: !isEdge && /firefox/i.test(userAgent),\n          isPhantom: /PhantomJS/i.test(userAgent),\n          isWebkit: !isEdge && /webkit/i.test(userAgent),\n          isChrome: !isEdge && /chrome/i.test(userAgent),\n          isSafari: !isEdge && /safari/i.test(userAgent) && !/chrome/i.test(userAgent),\n          browserVersion: browserVersion,\n          jqueryVersion: parseFloat(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.fn.jquery),\n          isSupportAmd: isSupportAmd,\n          isSupportTouch: isSupportTouch,\n          isFontInstalled: env_isFontInstalled,\n          isW3CRangeSupport: !!document.createRange,\n          inputEventName: inputEventName,\n          genericFontFamilies: genericFontFamilies,\n          validFontName: validFontName\n        }; // CONCATENATED MODULE: ./src/js/base/core/func.js\n\n        /**\n         * @class core.func\n         *\n         * func utils (for high-order func's arg)\n         *\n         * @singleton\n         * @alternateClassName func\n         */\n\n        function eq(itemA) {\n          return function (itemB) {\n            return itemA === itemB;\n          };\n        }\n\n        function eq2(itemA, itemB) {\n          return itemA === itemB;\n        }\n\n        function peq2(propName) {\n          return function (itemA, itemB) {\n            return itemA[propName] === itemB[propName];\n          };\n        }\n\n        function ok() {\n          return true;\n        }\n\n        function fail() {\n          return false;\n        }\n\n        function not(f) {\n          return function () {\n            return !f.apply(f, arguments);\n          };\n        }\n\n        function and(fA, fB) {\n          return function (item) {\n            return fA(item) && fB(item);\n          };\n        }\n\n        function func_self(a) {\n          return a;\n        }\n\n        function func_invoke(obj, method) {\n          return function () {\n            return obj[method].apply(obj, arguments);\n          };\n        }\n\n        var idCounter = 0;\n        /**\n         * reset globally-unique id\n         *\n         */\n\n        function resetUniqueId() {\n          idCounter = 0;\n        }\n        /**\n         * generate a globally-unique id\n         *\n         * @param {String} [prefix]\n         */\n\n\n        function uniqueId(prefix) {\n          var id = ++idCounter + '';\n          return prefix ? prefix + id : id;\n        }\n        /**\n         * returns bnd (bounds) from rect\n         *\n         * - IE Compatibility Issue: http://goo.gl/sRLOAo\n         * - Scroll Issue: http://goo.gl/sNjUc\n         *\n         * @param {Rect} rect\n         * @return {Object} bounds\n         * @return {Number} bounds.top\n         * @return {Number} bounds.left\n         * @return {Number} bounds.width\n         * @return {Number} bounds.height\n         */\n\n\n        function rect2bnd(rect) {\n          var $document = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document);\n          return {\n            top: rect.top + $document.scrollTop(),\n            left: rect.left + $document.scrollLeft(),\n            width: rect.right - rect.left,\n            height: rect.bottom - rect.top\n          };\n        }\n        /**\n         * returns a copy of the object where the keys have become the values and the values the keys.\n         * @param {Object} obj\n         * @return {Object}\n         */\n\n\n        function invertObject(obj) {\n          var inverted = {};\n\n          for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n              inverted[obj[key]] = key;\n            }\n          }\n\n          return inverted;\n        }\n        /**\n         * @param {String} namespace\n         * @param {String} [prefix]\n         * @return {String}\n         */\n\n\n        function namespaceToCamel(namespace, prefix) {\n          prefix = prefix || '';\n          return prefix + namespace.split('.').map(function (name) {\n            return name.substring(0, 1).toUpperCase() + name.substring(1);\n          }).join('');\n        }\n        /**\n         * Returns a function, that, as long as it continues to be invoked, will not\n         * be triggered. The function will be called after it stops being called for\n         * N milliseconds. If `immediate` is passed, trigger the function on the\n         * leading edge, instead of the trailing.\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Boolean} immediate\n         * @return {Function}\n         */\n\n\n        function debounce(func, wait, immediate) {\n          var timeout;\n          return function () {\n            var context = this;\n            var args = arguments;\n\n            var later = function later() {\n              timeout = null;\n\n              if (!immediate) {\n                func.apply(context, args);\n              }\n            };\n\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n            if (callNow) {\n              func.apply(context, args);\n            }\n          };\n        }\n        /**\n         *\n         * @param {String} url\n         * @return {Boolean}\n         */\n\n\n        function isValidUrl(url) {\n          var expression = /[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\n          return expression.test(url);\n        }\n        /* harmony default export */\n\n\n        var func = {\n          eq: eq,\n          eq2: eq2,\n          peq2: peq2,\n          ok: ok,\n          fail: fail,\n          self: func_self,\n          not: not,\n          and: and,\n          invoke: func_invoke,\n          resetUniqueId: resetUniqueId,\n          uniqueId: uniqueId,\n          rect2bnd: rect2bnd,\n          invertObject: invertObject,\n          namespaceToCamel: namespaceToCamel,\n          debounce: debounce,\n          isValidUrl: isValidUrl\n        }; // CONCATENATED MODULE: ./src/js/base/core/lists.js\n\n        /**\n         * returns the first item of an array.\n         *\n         * @param {Array} array\n         */\n\n        function lists_head(array) {\n          return array[0];\n        }\n        /**\n         * returns the last item of an array.\n         *\n         * @param {Array} array\n         */\n\n\n        function lists_last(array) {\n          return array[array.length - 1];\n        }\n        /**\n         * returns everything but the last entry of the array.\n         *\n         * @param {Array} array\n         */\n\n\n        function initial(array) {\n          return array.slice(0, array.length - 1);\n        }\n        /**\n         * returns the rest of the items in an array.\n         *\n         * @param {Array} array\n         */\n\n\n        function tail(array) {\n          return array.slice(1);\n        }\n        /**\n         * returns item of array\n         */\n\n\n        function find(array, pred) {\n          for (var idx = 0, len = array.length; idx < len; idx++) {\n            var item = array[idx];\n\n            if (pred(item)) {\n              return item;\n            }\n          }\n        }\n        /**\n         * returns true if all of the values in the array pass the predicate truth test.\n         */\n\n\n        function lists_all(array, pred) {\n          for (var idx = 0, len = array.length; idx < len; idx++) {\n            if (!pred(array[idx])) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n        /**\n         * returns true if the value is present in the list.\n         */\n\n\n        function contains(array, item) {\n          if (array && array.length && item) {\n            if (array.indexOf) {\n              return array.indexOf(item) !== -1;\n            } else if (array.contains) {\n              // `DOMTokenList` doesn't implement `.indexOf`, but it implements `.contains`\n              return array.contains(item);\n            }\n          }\n\n          return false;\n        }\n        /**\n         * get sum from a list\n         *\n         * @param {Array} array - array\n         * @param {Function} fn - iterator\n         */\n\n\n        function sum(array, fn) {\n          fn = fn || func.self;\n          return array.reduce(function (memo, v) {\n            return memo + fn(v);\n          }, 0);\n        }\n        /**\n         * returns a copy of the collection with array type.\n         * @param {Collection} collection - collection eg) node.childNodes, ...\n         */\n\n\n        function from(collection) {\n          var result = [];\n          var length = collection.length;\n          var idx = -1;\n\n          while (++idx < length) {\n            result[idx] = collection[idx];\n          }\n\n          return result;\n        }\n        /**\n         * returns whether list is empty or not\n         */\n\n\n        function lists_isEmpty(array) {\n          return !array || !array.length;\n        }\n        /**\n         * cluster elements by predicate function.\n         *\n         * @param {Array} array - array\n         * @param {Function} fn - predicate function for cluster rule\n         * @param {Array[]}\n         */\n\n\n        function clusterBy(array, fn) {\n          if (!array.length) {\n            return [];\n          }\n\n          var aTail = tail(array);\n          return aTail.reduce(function (memo, v) {\n            var aLast = lists_last(memo);\n\n            if (fn(lists_last(aLast), v)) {\n              aLast[aLast.length] = v;\n            } else {\n              memo[memo.length] = [v];\n            }\n\n            return memo;\n          }, [[lists_head(array)]]);\n        }\n        /**\n         * returns a copy of the array with all false values removed\n         *\n         * @param {Array} array - array\n         * @param {Function} fn - predicate function for cluster rule\n         */\n\n\n        function compact(array) {\n          var aResult = [];\n\n          for (var idx = 0, len = array.length; idx < len; idx++) {\n            if (array[idx]) {\n              aResult.push(array[idx]);\n            }\n          }\n\n          return aResult;\n        }\n        /**\n         * produces a duplicate-free version of the array\n         *\n         * @param {Array} array\n         */\n\n\n        function unique(array) {\n          var results = [];\n\n          for (var idx = 0, len = array.length; idx < len; idx++) {\n            if (!contains(results, array[idx])) {\n              results.push(array[idx]);\n            }\n          }\n\n          return results;\n        }\n        /**\n         * returns next item.\n         * @param {Array} array\n         */\n\n\n        function lists_next(array, item) {\n          if (array && array.length && item) {\n            var idx = array.indexOf(item);\n            return idx === -1 ? null : array[idx + 1];\n          }\n\n          return null;\n        }\n        /**\n         * returns prev item.\n         * @param {Array} array\n         */\n\n\n        function prev(array, item) {\n          if (array && array.length && item) {\n            var idx = array.indexOf(item);\n            return idx === -1 ? null : array[idx - 1];\n          }\n\n          return null;\n        }\n        /**\n         * @class core.list\n         *\n         * list utils\n         *\n         * @singleton\n         * @alternateClassName list\n         */\n\n        /* harmony default export */\n\n\n        var lists = {\n          head: lists_head,\n          last: lists_last,\n          initial: initial,\n          tail: tail,\n          prev: prev,\n          next: lists_next,\n          find: find,\n          contains: contains,\n          all: lists_all,\n          sum: sum,\n          from: from,\n          isEmpty: lists_isEmpty,\n          clusterBy: clusterBy,\n          compact: compact,\n          unique: unique\n        }; // CONCATENATED MODULE: ./src/js/base/core/dom.js\n\n        var NBSP_CHAR = String.fromCharCode(160);\n        var ZERO_WIDTH_NBSP_CHAR = \"\\uFEFF\";\n        /**\n         * @method isEditable\n         *\n         * returns whether node is `note-editable` or not.\n         *\n         * @param {Node} node\n         * @return {Boolean}\n         */\n\n        function isEditable(node) {\n          return node && external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(node).hasClass('note-editable');\n        }\n        /**\n         * @method isControlSizing\n         *\n         * returns whether node is `note-control-sizing` or not.\n         *\n         * @param {Node} node\n         * @return {Boolean}\n         */\n\n\n        function isControlSizing(node) {\n          return node && external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(node).hasClass('note-control-sizing');\n        }\n        /**\n         * @method makePredByNodeName\n         *\n         * returns predicate which judge whether nodeName is same\n         *\n         * @param {String} nodeName\n         * @return {Function}\n         */\n\n\n        function makePredByNodeName(nodeName) {\n          nodeName = nodeName.toUpperCase();\n          return function (node) {\n            return node && node.nodeName.toUpperCase() === nodeName;\n          };\n        }\n        /**\n         * @method isText\n         *\n         *\n         *\n         * @param {Node} node\n         * @return {Boolean} true if node's type is text(3)\n         */\n\n\n        function isText(node) {\n          return node && node.nodeType === 3;\n        }\n        /**\n         * @method isElement\n         *\n         *\n         *\n         * @param {Node} node\n         * @return {Boolean} true if node's type is element(1)\n         */\n\n\n        function isElement(node) {\n          return node && node.nodeType === 1;\n        }\n        /**\n         * ex) br, col, embed, hr, img, input, ...\n         * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n         */\n\n\n        function isVoid(node) {\n          return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(node.nodeName.toUpperCase());\n        }\n\n        function isPara(node) {\n          if (isEditable(node)) {\n            return false;\n          } // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\n\n\n          return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\n        }\n\n        function isHeading(node) {\n          return node && /^H[1-7]/.test(node.nodeName.toUpperCase());\n        }\n\n        var isPre = makePredByNodeName('PRE');\n        var isLi = makePredByNodeName('LI');\n\n        function isPurePara(node) {\n          return isPara(node) && !isLi(node);\n        }\n\n        var isTable = makePredByNodeName('TABLE');\n        var isData = makePredByNodeName('DATA');\n\n        function dom_isInline(node) {\n          return !isBodyContainer(node) && !isList(node) && !isHr(node) && !isPara(node) && !isTable(node) && !isBlockquote(node) && !isData(node);\n        }\n\n        function isList(node) {\n          return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\n        }\n\n        var isHr = makePredByNodeName('HR');\n\n        function dom_isCell(node) {\n          return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\n        }\n\n        var isBlockquote = makePredByNodeName('BLOCKQUOTE');\n\n        function isBodyContainer(node) {\n          return dom_isCell(node) || isBlockquote(node) || isEditable(node);\n        }\n\n        var isAnchor = makePredByNodeName('A');\n\n        function isParaInline(node) {\n          return dom_isInline(node) && !!dom_ancestor(node, isPara);\n        }\n\n        function isBodyInline(node) {\n          return dom_isInline(node) && !dom_ancestor(node, isPara);\n        }\n\n        var isBody = makePredByNodeName('BODY');\n        /**\n         * returns whether nodeB is closest sibling of nodeA\n         *\n         * @param {Node} nodeA\n         * @param {Node} nodeB\n         * @return {Boolean}\n         */\n\n        function isClosestSibling(nodeA, nodeB) {\n          return nodeA.nextSibling === nodeB || nodeA.previousSibling === nodeB;\n        }\n        /**\n         * returns array of closest siblings with node\n         *\n         * @param {Node} node\n         * @param {function} [pred] - predicate function\n         * @return {Node[]}\n         */\n\n\n        function withClosestSiblings(node, pred) {\n          pred = pred || func.ok;\n          var siblings = [];\n\n          if (node.previousSibling && pred(node.previousSibling)) {\n            siblings.push(node.previousSibling);\n          }\n\n          siblings.push(node);\n\n          if (node.nextSibling && pred(node.nextSibling)) {\n            siblings.push(node.nextSibling);\n          }\n\n          return siblings;\n        }\n        /**\n         * blank HTML for cursor position\n         * - [workaround] old IE only works with &nbsp;\n         * - [workaround] IE11 and other browser works with bogus br\n         */\n\n\n        var blankHTML = env.isMSIE && env.browserVersion < 11 ? '&nbsp;' : '<br>';\n        /**\n         * @method nodeLength\n         *\n         * returns #text's text size or element's childNodes size\n         *\n         * @param {Node} node\n         */\n\n        function nodeLength(node) {\n          if (isText(node)) {\n            return node.nodeValue.length;\n          }\n\n          if (node) {\n            return node.childNodes.length;\n          }\n\n          return 0;\n        }\n        /**\n         * returns whether deepest child node is empty or not.\n         *\n         * @param {Node} node\n         * @return {Boolean}\n         */\n\n\n        function deepestChildIsEmpty(node) {\n          do {\n            if (node.firstElementChild === null || node.firstElementChild.innerHTML === '') break;\n          } while (node = node.firstElementChild);\n\n          return dom_isEmpty(node);\n        }\n        /**\n         * returns whether node is empty or not.\n         *\n         * @param {Node} node\n         * @return {Boolean}\n         */\n\n\n        function dom_isEmpty(node) {\n          var len = nodeLength(node);\n\n          if (len === 0) {\n            return true;\n          } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\n            // ex) <p><br></p>, <span><br></span>\n            return true;\n          } else if (lists.all(node.childNodes, isText) && node.innerHTML === '') {\n            // ex) <p></p>, <span></span>\n            return true;\n          }\n\n          return false;\n        }\n        /**\n         * padding blankHTML if node is empty (for cursor position)\n         */\n\n\n        function paddingBlankHTML(node) {\n          if (!isVoid(node) && !nodeLength(node)) {\n            node.innerHTML = blankHTML;\n          }\n        }\n        /**\n         * find nearest ancestor predicate hit\n         *\n         * @param {Node} node\n         * @param {Function} pred - predicate function\n         */\n\n\n        function dom_ancestor(node, pred) {\n          while (node) {\n            if (pred(node)) {\n              return node;\n            }\n\n            if (isEditable(node)) {\n              break;\n            }\n\n            node = node.parentNode;\n          }\n\n          return null;\n        }\n        /**\n         * find nearest ancestor only single child blood line and predicate hit\n         *\n         * @param {Node} node\n         * @param {Function} pred - predicate function\n         */\n\n\n        function singleChildAncestor(node, pred) {\n          node = node.parentNode;\n\n          while (node) {\n            if (nodeLength(node) !== 1) {\n              break;\n            }\n\n            if (pred(node)) {\n              return node;\n            }\n\n            if (isEditable(node)) {\n              break;\n            }\n\n            node = node.parentNode;\n          }\n\n          return null;\n        }\n        /**\n         * returns new array of ancestor nodes (until predicate hit).\n         *\n         * @param {Node} node\n         * @param {Function} [optional] pred - predicate function\n         */\n\n\n        function listAncestor(node, pred) {\n          pred = pred || func.fail;\n          var ancestors = [];\n          dom_ancestor(node, function (el) {\n            if (!isEditable(el)) {\n              ancestors.push(el);\n            }\n\n            return pred(el);\n          });\n          return ancestors;\n        }\n        /**\n         * find farthest ancestor predicate hit\n         */\n\n\n        function lastAncestor(node, pred) {\n          var ancestors = listAncestor(node);\n          return lists.last(ancestors.filter(pred));\n        }\n        /**\n         * returns common ancestor node between two nodes.\n         *\n         * @param {Node} nodeA\n         * @param {Node} nodeB\n         */\n\n\n        function dom_commonAncestor(nodeA, nodeB) {\n          var ancestors = listAncestor(nodeA);\n\n          for (var n = nodeB; n; n = n.parentNode) {\n            if (ancestors.indexOf(n) > -1) return n;\n          }\n\n          return null; // difference document area\n        }\n        /**\n         * listing all previous siblings (until predicate hit).\n         *\n         * @param {Node} node\n         * @param {Function} [optional] pred - predicate function\n         */\n\n\n        function listPrev(node, pred) {\n          pred = pred || func.fail;\n          var nodes = [];\n\n          while (node) {\n            if (pred(node)) {\n              break;\n            }\n\n            nodes.push(node);\n            node = node.previousSibling;\n          }\n\n          return nodes;\n        }\n        /**\n         * listing next siblings (until predicate hit).\n         *\n         * @param {Node} node\n         * @param {Function} [pred] - predicate function\n         */\n\n\n        function listNext(node, pred) {\n          pred = pred || func.fail;\n          var nodes = [];\n\n          while (node) {\n            if (pred(node)) {\n              break;\n            }\n\n            nodes.push(node);\n            node = node.nextSibling;\n          }\n\n          return nodes;\n        }\n        /**\n         * listing descendant nodes\n         *\n         * @param {Node} node\n         * @param {Function} [pred] - predicate function\n         */\n\n\n        function listDescendant(node, pred) {\n          var descendants = [];\n          pred = pred || func.ok; // start DFS(depth first search) with node\n\n          (function fnWalk(current) {\n            if (node !== current && pred(current)) {\n              descendants.push(current);\n            }\n\n            for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {\n              fnWalk(current.childNodes[idx]);\n            }\n          })(node);\n\n          return descendants;\n        }\n        /**\n         * wrap node with new tag.\n         *\n         * @param {Node} node\n         * @param {Node} tagName of wrapper\n         * @return {Node} - wrapper\n         */\n\n\n        function wrap(node, wrapperName) {\n          var parent = node.parentNode;\n          var wrapper = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<' + wrapperName + '>')[0];\n          parent.insertBefore(wrapper, node);\n          wrapper.appendChild(node);\n          return wrapper;\n        }\n        /**\n         * insert node after preceding\n         *\n         * @param {Node} node\n         * @param {Node} preceding - predicate function\n         */\n\n\n        function insertAfter(node, preceding) {\n          var next = preceding.nextSibling;\n          var parent = preceding.parentNode;\n\n          if (next) {\n            parent.insertBefore(node, next);\n          } else {\n            parent.appendChild(node);\n          }\n\n          return node;\n        }\n        /**\n         * append elements.\n         *\n         * @param {Node} node\n         * @param {Collection} aChild\n         */\n\n\n        function appendChildNodes(node, aChild) {\n          external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(aChild, function (idx, child) {\n            node.appendChild(child);\n          });\n          return node;\n        }\n        /**\n         * returns whether boundaryPoint is left edge or not.\n         *\n         * @param {BoundaryPoint} point\n         * @return {Boolean}\n         */\n\n\n        function isLeftEdgePoint(point) {\n          return point.offset === 0;\n        }\n        /**\n         * returns whether boundaryPoint is right edge or not.\n         *\n         * @param {BoundaryPoint} point\n         * @return {Boolean}\n         */\n\n\n        function isRightEdgePoint(point) {\n          return point.offset === nodeLength(point.node);\n        }\n        /**\n         * returns whether boundaryPoint is edge or not.\n         *\n         * @param {BoundaryPoint} point\n         * @return {Boolean}\n         */\n\n\n        function isEdgePoint(point) {\n          return isLeftEdgePoint(point) || isRightEdgePoint(point);\n        }\n        /**\n         * returns whether node is left edge of ancestor or not.\n         *\n         * @param {Node} node\n         * @param {Node} ancestor\n         * @return {Boolean}\n         */\n\n\n        function dom_isLeftEdgeOf(node, ancestor) {\n          while (node && node !== ancestor) {\n            if (dom_position(node) !== 0) {\n              return false;\n            }\n\n            node = node.parentNode;\n          }\n\n          return true;\n        }\n        /**\n         * returns whether node is right edge of ancestor or not.\n         *\n         * @param {Node} node\n         * @param {Node} ancestor\n         * @return {Boolean}\n         */\n\n\n        function isRightEdgeOf(node, ancestor) {\n          if (!ancestor) {\n            return false;\n          }\n\n          while (node && node !== ancestor) {\n            if (dom_position(node) !== nodeLength(node.parentNode) - 1) {\n              return false;\n            }\n\n            node = node.parentNode;\n          }\n\n          return true;\n        }\n        /**\n         * returns whether point is left edge of ancestor or not.\n         * @param {BoundaryPoint} point\n         * @param {Node} ancestor\n         * @return {Boolean}\n         */\n\n\n        function isLeftEdgePointOf(point, ancestor) {\n          return isLeftEdgePoint(point) && dom_isLeftEdgeOf(point.node, ancestor);\n        }\n        /**\n         * returns whether point is right edge of ancestor or not.\n         * @param {BoundaryPoint} point\n         * @param {Node} ancestor\n         * @return {Boolean}\n         */\n\n\n        function isRightEdgePointOf(point, ancestor) {\n          return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);\n        }\n        /**\n         * returns offset from parent.\n         *\n         * @param {Node} node\n         */\n\n\n        function dom_position(node) {\n          var offset = 0;\n\n          while (node = node.previousSibling) {\n            offset += 1;\n          }\n\n          return offset;\n        }\n\n        function hasChildren(node) {\n          return !!(node && node.childNodes && node.childNodes.length);\n        }\n        /**\n         * returns previous boundaryPoint\n         *\n         * @param {BoundaryPoint} point\n         * @param {Boolean} isSkipInnerOffset\n         * @return {BoundaryPoint}\n         */\n\n\n        function dom_prevPoint(point, isSkipInnerOffset) {\n          var node;\n          var offset;\n\n          if (point.offset === 0) {\n            if (isEditable(point.node)) {\n              return null;\n            }\n\n            node = point.node.parentNode;\n            offset = dom_position(point.node);\n          } else if (hasChildren(point.node)) {\n            node = point.node.childNodes[point.offset - 1];\n            offset = nodeLength(node);\n          } else {\n            node = point.node;\n            offset = isSkipInnerOffset ? 0 : point.offset - 1;\n          }\n\n          return {\n            node: node,\n            offset: offset\n          };\n        }\n        /**\n         * returns next boundaryPoint\n         *\n         * @param {BoundaryPoint} point\n         * @param {Boolean} isSkipInnerOffset\n         * @return {BoundaryPoint}\n         */\n\n\n        function dom_nextPoint(point, isSkipInnerOffset) {\n          var node, offset;\n\n          if (nodeLength(point.node) === point.offset) {\n            if (isEditable(point.node)) {\n              return null;\n            }\n\n            var nextTextNode = getNextTextNode(point.node);\n\n            if (nextTextNode) {\n              node = nextTextNode;\n              offset = 0;\n            } else {\n              node = point.node.parentNode;\n              offset = dom_position(point.node) + 1;\n            }\n          } else if (hasChildren(point.node)) {\n            node = point.node.childNodes[point.offset];\n            offset = 0;\n          } else {\n            node = point.node;\n            offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n          }\n\n          return {\n            node: node,\n            offset: offset\n          };\n        }\n        /**\n         * returns next boundaryPoint with empty node\n         *\n         * @param {BoundaryPoint} point\n         * @param {Boolean} isSkipInnerOffset\n         * @return {BoundaryPoint}\n         */\n\n\n        function nextPointWithEmptyNode(point, isSkipInnerOffset) {\n          var node, offset; // if node is empty string node, return current node's sibling.\n\n          if (dom_isEmpty(point.node)) {\n            node = point.node.nextSibling;\n            offset = 0;\n            return {\n              node: node,\n              offset: offset\n            };\n          }\n\n          if (nodeLength(point.node) === point.offset) {\n            if (isEditable(point.node)) {\n              return null;\n            }\n\n            var nextTextNode = getNextTextNode(point.node);\n\n            if (nextTextNode) {\n              node = nextTextNode;\n              offset = 0;\n            } else {\n              node = point.node.parentNode;\n              offset = dom_position(point.node) + 1;\n            } // if next node is editable, return current node's sibling node.\n\n\n            if (isEditable(node)) {\n              node = point.node.nextSibling;\n              offset = 0;\n            }\n          } else if (hasChildren(point.node)) {\n            node = point.node.childNodes[point.offset];\n            offset = 0;\n\n            if (dom_isEmpty(node)) {\n              return null;\n            }\n          } else {\n            node = point.node;\n            offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n\n            if (dom_isEmpty(node)) {\n              return null;\n            }\n          }\n\n          return {\n            node: node,\n            offset: offset\n          };\n        }\n        /*\n        * returns the next Text node index or 0 if not found.\n        */\n\n\n        function getNextTextNode(actual) {\n          if (!actual.nextSibling) return undefined;\n          if (actual.parent !== actual.nextSibling.parent) return undefined;\n          if (isText(actual.nextSibling)) return actual.nextSibling;\n          return getNextTextNode(actual.nextSibling);\n        }\n        /**\n         * returns whether pointA and pointB is same or not.\n         *\n         * @param {BoundaryPoint} pointA\n         * @param {BoundaryPoint} pointB\n         * @return {Boolean}\n         */\n\n\n        function isSamePoint(pointA, pointB) {\n          return pointA.node === pointB.node && pointA.offset === pointB.offset;\n        }\n        /**\n         * returns whether point is visible (can set cursor) or not.\n         *\n         * @param {BoundaryPoint} point\n         * @return {Boolean}\n         */\n\n\n        function isVisiblePoint(point) {\n          if (isText(point.node) || !hasChildren(point.node) || dom_isEmpty(point.node)) {\n            return true;\n          }\n\n          var leftNode = point.node.childNodes[point.offset - 1];\n          var rightNode = point.node.childNodes[point.offset];\n\n          if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\n            return true;\n          }\n\n          return false;\n        }\n        /**\n         * @method prevPointUtil\n         *\n         * @param {BoundaryPoint} point\n         * @param {Function} pred\n         * @return {BoundaryPoint}\n         */\n\n\n        function prevPointUntil(point, pred) {\n          while (point) {\n            if (pred(point)) {\n              return point;\n            }\n\n            point = dom_prevPoint(point);\n          }\n\n          return null;\n        }\n        /**\n         * @method nextPointUntil\n         *\n         * @param {BoundaryPoint} point\n         * @param {Function} pred\n         * @return {BoundaryPoint}\n         */\n\n\n        function nextPointUntil(point, pred) {\n          while (point) {\n            if (pred(point)) {\n              return point;\n            }\n\n            point = dom_nextPoint(point);\n          }\n\n          return null;\n        }\n        /**\n         * returns whether point has character or not.\n         *\n         * @param {Point} point\n         * @return {Boolean}\n         */\n\n\n        function isCharPoint(point) {\n          if (!isText(point.node)) {\n            return false;\n          }\n\n          var ch = point.node.nodeValue.charAt(point.offset - 1);\n          return ch && ch !== ' ' && ch !== NBSP_CHAR;\n        }\n        /**\n         * returns whether point has space or not.\n         *\n         * @param {Point} point\n         * @return {Boolean}\n         */\n\n\n        function isSpacePoint(point) {\n          if (!isText(point.node)) {\n            return false;\n          }\n\n          var ch = point.node.nodeValue.charAt(point.offset - 1);\n          return ch === ' ' || ch === NBSP_CHAR;\n        }\n        /**\n         * @method walkPoint\n         *\n         * @param {BoundaryPoint} startPoint\n         * @param {BoundaryPoint} endPoint\n         * @param {Function} handler\n         * @param {Boolean} isSkipInnerOffset\n         */\n\n\n        function walkPoint(startPoint, endPoint, handler, isSkipInnerOffset) {\n          var point = startPoint;\n\n          while (point) {\n            handler(point);\n\n            if (isSamePoint(point, endPoint)) {\n              break;\n            }\n\n            var isSkipOffset = isSkipInnerOffset && startPoint.node !== point.node && endPoint.node !== point.node;\n            point = nextPointWithEmptyNode(point, isSkipOffset);\n          }\n        }\n        /**\n         * @method makeOffsetPath\n         *\n         * return offsetPath(array of offset) from ancestor\n         *\n         * @param {Node} ancestor - ancestor node\n         * @param {Node} node\n         */\n\n\n        function makeOffsetPath(ancestor, node) {\n          var ancestors = listAncestor(node, func.eq(ancestor));\n          return ancestors.map(dom_position).reverse();\n        }\n        /**\n         * @method fromOffsetPath\n         *\n         * return element from offsetPath(array of offset)\n         *\n         * @param {Node} ancestor - ancestor node\n         * @param {array} offsets - offsetPath\n         */\n\n\n        function fromOffsetPath(ancestor, offsets) {\n          var current = ancestor;\n\n          for (var i = 0, len = offsets.length; i < len; i++) {\n            if (current.childNodes.length <= offsets[i]) {\n              current = current.childNodes[current.childNodes.length - 1];\n            } else {\n              current = current.childNodes[offsets[i]];\n            }\n          }\n\n          return current;\n        }\n        /**\n         * @method splitNode\n         *\n         * split element or #text\n         *\n         * @param {BoundaryPoint} point\n         * @param {Object} [options]\n         * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n         * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n         * @param {Boolean} [options.isDiscardEmptySplits] - default: false\n         * @return {Node} right node of boundaryPoint\n         */\n\n\n        function splitNode(point, options) {\n          var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\n          var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\n          var isDiscardEmptySplits = options && options.isDiscardEmptySplits;\n\n          if (isDiscardEmptySplits) {\n            isSkipPaddingBlankHTML = true;\n          } // edge case\n\n\n          if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\n            if (isLeftEdgePoint(point)) {\n              return point.node;\n            } else if (isRightEdgePoint(point)) {\n              return point.node.nextSibling;\n            }\n          } // split #text\n\n\n          if (isText(point.node)) {\n            return point.node.splitText(point.offset);\n          } else {\n            var childNode = point.node.childNodes[point.offset];\n            var clone = insertAfter(point.node.cloneNode(false), point.node);\n            appendChildNodes(clone, listNext(childNode));\n\n            if (!isSkipPaddingBlankHTML) {\n              paddingBlankHTML(point.node);\n              paddingBlankHTML(clone);\n            }\n\n            if (isDiscardEmptySplits) {\n              if (dom_isEmpty(point.node)) {\n                remove(point.node);\n              }\n\n              if (dom_isEmpty(clone)) {\n                remove(clone);\n                return point.node.nextSibling;\n              }\n            }\n\n            return clone;\n          }\n        }\n        /**\n         * @method splitTree\n         *\n         * split tree by point\n         *\n         * @param {Node} root - split root\n         * @param {BoundaryPoint} point\n         * @param {Object} [options]\n         * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n         * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n         * @return {Node} right node of boundaryPoint\n         */\n\n\n        function splitTree(root, point, options) {\n          // ex) [#text, <span>, <p>]\n          var ancestors = listAncestor(point.node, func.eq(root));\n\n          if (!ancestors.length) {\n            return null;\n          } else if (ancestors.length === 1) {\n            return splitNode(point, options);\n          }\n\n          return ancestors.reduce(function (node, parent) {\n            if (node === point.node) {\n              node = splitNode(point, options);\n            }\n\n            return splitNode({\n              node: parent,\n              offset: node ? dom_position(node) : nodeLength(parent)\n            }, options);\n          });\n        }\n        /**\n         * split point\n         *\n         * @param {Point} point\n         * @param {Boolean} isInline\n         * @return {Object}\n         */\n\n\n        function splitPoint(point, isInline) {\n          // find splitRoot, container\n          //  - inline: splitRoot is a child of paragraph\n          //  - block: splitRoot is a child of bodyContainer\n          var pred = isInline ? isPara : isBodyContainer;\n          var ancestors = listAncestor(point.node, pred);\n          var topAncestor = lists.last(ancestors) || point.node;\n          var splitRoot, container;\n\n          if (pred(topAncestor)) {\n            splitRoot = ancestors[ancestors.length - 2];\n            container = topAncestor;\n          } else {\n            splitRoot = topAncestor;\n            container = splitRoot.parentNode;\n          } // if splitRoot is exists, split with splitTree\n\n\n          var pivot = splitRoot && splitTree(splitRoot, point, {\n            isSkipPaddingBlankHTML: isInline,\n            isNotSplitEdgePoint: isInline\n          }); // if container is point.node, find pivot with point.offset\n\n          if (!pivot && container === point.node) {\n            pivot = point.node.childNodes[point.offset];\n          }\n\n          return {\n            rightNode: pivot,\n            container: container\n          };\n        }\n\n        function dom_create(nodeName) {\n          return document.createElement(nodeName);\n        }\n\n        function createText(text) {\n          return document.createTextNode(text);\n        }\n        /**\n         * @method remove\n         *\n         * remove node, (isRemoveChild: remove child or not)\n         *\n         * @param {Node} node\n         * @param {Boolean} isRemoveChild\n         */\n\n\n        function remove(node, isRemoveChild) {\n          if (!node || !node.parentNode) {\n            return;\n          }\n\n          if (node.removeNode) {\n            return node.removeNode(isRemoveChild);\n          }\n\n          var parent = node.parentNode;\n\n          if (!isRemoveChild) {\n            var nodes = [];\n\n            for (var i = 0, len = node.childNodes.length; i < len; i++) {\n              nodes.push(node.childNodes[i]);\n            }\n\n            for (var _i = 0, _len = nodes.length; _i < _len; _i++) {\n              parent.insertBefore(nodes[_i], node);\n            }\n          }\n\n          parent.removeChild(node);\n        }\n        /**\n         * @method removeWhile\n         *\n         * @param {Node} node\n         * @param {Function} pred\n         */\n\n\n        function removeWhile(node, pred) {\n          while (node) {\n            if (isEditable(node) || !pred(node)) {\n              break;\n            }\n\n            var parent = node.parentNode;\n            remove(node);\n            node = parent;\n          }\n        }\n        /**\n         * @method replace\n         *\n         * replace node with provided nodeName\n         *\n         * @param {Node} node\n         * @param {String} nodeName\n         * @return {Node} - new node\n         */\n\n\n        function dom_replace(node, nodeName) {\n          if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\n            return node;\n          }\n\n          var newNode = dom_create(nodeName);\n\n          if (node.style.cssText) {\n            newNode.style.cssText = node.style.cssText;\n          }\n\n          appendChildNodes(newNode, lists.from(node.childNodes));\n          insertAfter(newNode, node);\n          remove(node);\n          return newNode;\n        }\n\n        var isTextarea = makePredByNodeName('TEXTAREA');\n        /**\n         * @param {jQuery} $node\n         * @param {Boolean} [stripLinebreaks] - default: false\n         */\n\n        function dom_value($node, stripLinebreaks) {\n          var val = isTextarea($node[0]) ? $node.val() : $node.html();\n\n          if (stripLinebreaks) {\n            return val.replace(/[\\n\\r]/g, '');\n          }\n\n          return val;\n        }\n        /**\n         * @method html\n         *\n         * get the HTML contents of node\n         *\n         * @param {jQuery} $node\n         * @param {Boolean} [isNewlineOnBlock]\n         */\n\n\n        function dom_html($node, isNewlineOnBlock) {\n          var markup = dom_value($node);\n\n          if (isNewlineOnBlock) {\n            var regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\n            markup = markup.replace(regexTag, function (match, endSlash, name) {\n              name = name.toUpperCase();\n              var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) && !!endSlash;\n              var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\n              return match + (isEndOfInlineContainer || isBlockNode ? '\\n' : '');\n            });\n            markup = markup.trim();\n          }\n\n          return markup;\n        }\n\n        function posFromPlaceholder(placeholder) {\n          var $placeholder = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(placeholder);\n          var pos = $placeholder.offset();\n          var height = $placeholder.outerHeight(true); // include margin\n\n          return {\n            left: pos.left,\n            top: pos.top + height\n          };\n        }\n\n        function attachEvents($node, events) {\n          Object.keys(events).forEach(function (key) {\n            $node.on(key, events[key]);\n          });\n        }\n\n        function detachEvents($node, events) {\n          Object.keys(events).forEach(function (key) {\n            $node.off(key, events[key]);\n          });\n        }\n        /**\n         * @method isCustomStyleTag\n         *\n         * assert if a node contains a \"note-styletag\" class,\n         * which implies that's a custom-made style tag node\n         *\n         * @param {Node} an HTML DOM node\n         */\n\n\n        function isCustomStyleTag(node) {\n          return node && !isText(node) && lists.contains(node.classList, 'note-styletag');\n        }\n        /* harmony default export */\n\n\n        var dom = {\n          /** @property {String} NBSP_CHAR */\n          NBSP_CHAR: NBSP_CHAR,\n\n          /** @property {String} ZERO_WIDTH_NBSP_CHAR */\n          ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,\n\n          /** @property {String} blank */\n          blank: blankHTML,\n\n          /** @property {String} emptyPara */\n          emptyPara: \"<p>\".concat(blankHTML, \"</p>\"),\n          makePredByNodeName: makePredByNodeName,\n          isEditable: isEditable,\n          isControlSizing: isControlSizing,\n          isText: isText,\n          isElement: isElement,\n          isVoid: isVoid,\n          isPara: isPara,\n          isPurePara: isPurePara,\n          isHeading: isHeading,\n          isInline: dom_isInline,\n          isBlock: func.not(dom_isInline),\n          isBodyInline: isBodyInline,\n          isBody: isBody,\n          isParaInline: isParaInline,\n          isPre: isPre,\n          isList: isList,\n          isTable: isTable,\n          isData: isData,\n          isCell: dom_isCell,\n          isBlockquote: isBlockquote,\n          isBodyContainer: isBodyContainer,\n          isAnchor: isAnchor,\n          isDiv: makePredByNodeName('DIV'),\n          isLi: isLi,\n          isBR: makePredByNodeName('BR'),\n          isSpan: makePredByNodeName('SPAN'),\n          isB: makePredByNodeName('B'),\n          isU: makePredByNodeName('U'),\n          isS: makePredByNodeName('S'),\n          isI: makePredByNodeName('I'),\n          isImg: makePredByNodeName('IMG'),\n          isTextarea: isTextarea,\n          deepestChildIsEmpty: deepestChildIsEmpty,\n          isEmpty: dom_isEmpty,\n          isEmptyAnchor: func.and(isAnchor, dom_isEmpty),\n          isClosestSibling: isClosestSibling,\n          withClosestSiblings: withClosestSiblings,\n          nodeLength: nodeLength,\n          isLeftEdgePoint: isLeftEdgePoint,\n          isRightEdgePoint: isRightEdgePoint,\n          isEdgePoint: isEdgePoint,\n          isLeftEdgeOf: dom_isLeftEdgeOf,\n          isRightEdgeOf: isRightEdgeOf,\n          isLeftEdgePointOf: isLeftEdgePointOf,\n          isRightEdgePointOf: isRightEdgePointOf,\n          prevPoint: dom_prevPoint,\n          nextPoint: dom_nextPoint,\n          nextPointWithEmptyNode: nextPointWithEmptyNode,\n          isSamePoint: isSamePoint,\n          isVisiblePoint: isVisiblePoint,\n          prevPointUntil: prevPointUntil,\n          nextPointUntil: nextPointUntil,\n          isCharPoint: isCharPoint,\n          isSpacePoint: isSpacePoint,\n          walkPoint: walkPoint,\n          ancestor: dom_ancestor,\n          singleChildAncestor: singleChildAncestor,\n          listAncestor: listAncestor,\n          lastAncestor: lastAncestor,\n          listNext: listNext,\n          listPrev: listPrev,\n          listDescendant: listDescendant,\n          commonAncestor: dom_commonAncestor,\n          wrap: wrap,\n          insertAfter: insertAfter,\n          appendChildNodes: appendChildNodes,\n          position: dom_position,\n          hasChildren: hasChildren,\n          makeOffsetPath: makeOffsetPath,\n          fromOffsetPath: fromOffsetPath,\n          splitTree: splitTree,\n          splitPoint: splitPoint,\n          create: dom_create,\n          createText: createText,\n          remove: remove,\n          removeWhile: removeWhile,\n          replace: dom_replace,\n          html: dom_html,\n          value: dom_value,\n          posFromPlaceholder: posFromPlaceholder,\n          attachEvents: attachEvents,\n          detachEvents: detachEvents,\n          isCustomStyleTag: isCustomStyleTag\n        }; // CONCATENATED MODULE: ./src/js/base/Context.js\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function _createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) _defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Context_Context = /*#__PURE__*/function () {\n          /**\n           * @param {jQuery} $note\n           * @param {Object} options\n           */\n          function Context($note, options) {\n            _classCallCheck(this, Context);\n\n            this.$note = $note;\n            this.memos = {};\n            this.modules = {};\n            this.layoutInfo = {};\n            this.options = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(true, {}, options); // init ui with options\n\n            external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui_template(this.options);\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.initialize();\n          }\n          /**\n           * create layout and initialize modules and other resources\n           */\n\n\n          _createClass(Context, [{\n            key: \"initialize\",\n            value: function initialize() {\n              this.layoutInfo = this.ui.createLayout(this.$note);\n\n              this._initialize();\n\n              this.$note.hide();\n              return this;\n            }\n            /**\n             * destroy modules and other resources and remove layout\n             */\n\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this._destroy();\n\n              this.$note.removeData('summernote');\n              this.ui.removeLayout(this.$note, this.layoutInfo);\n            }\n            /**\n             * destory modules and other resources and initialize it again\n             */\n\n          }, {\n            key: \"reset\",\n            value: function reset() {\n              var disabled = this.isDisabled();\n              this.code(dom.emptyPara);\n\n              this._destroy();\n\n              this._initialize();\n\n              if (disabled) {\n                this.disable();\n              }\n            }\n          }, {\n            key: \"_initialize\",\n            value: function _initialize() {\n              var _this = this; // set own id\n\n\n              this.options.id = func.uniqueId(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.now()); // set default container for tooltips, popovers, and dialogs\n\n              this.options.container = this.options.container || this.layoutInfo.editor; // add optional buttons\n\n              var buttons = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend({}, this.options.buttons);\n              Object.keys(buttons).forEach(function (key) {\n                _this.memo('button.' + key, buttons[key]);\n              });\n              var modules = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend({}, this.options.modules, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.plugins || {}); // add and initialize modules\n\n              Object.keys(modules).forEach(function (key) {\n                _this.module(key, modules[key], true);\n              });\n              Object.keys(this.modules).forEach(function (key) {\n                _this.initializeModule(key);\n              });\n            }\n          }, {\n            key: \"_destroy\",\n            value: function _destroy() {\n              var _this2 = this; // destroy modules with reversed order\n\n\n              Object.keys(this.modules).reverse().forEach(function (key) {\n                _this2.removeModule(key);\n              });\n              Object.keys(this.memos).forEach(function (key) {\n                _this2.removeMemo(key);\n              }); // trigger custom onDestroy callback\n\n              this.triggerEvent('destroy', this);\n            }\n          }, {\n            key: \"code\",\n            value: function code(html) {\n              var isActivated = this.invoke('codeview.isActivated');\n\n              if (html === undefined) {\n                this.invoke('codeview.sync');\n                return isActivated ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\n              } else {\n                if (isActivated) {\n                  this.invoke('codeview.sync', html);\n                } else {\n                  this.layoutInfo.editable.html(html);\n                }\n\n                this.$note.val(html);\n                this.triggerEvent('change', html, this.layoutInfo.editable);\n              }\n            }\n          }, {\n            key: \"isDisabled\",\n            value: function isDisabled() {\n              return this.layoutInfo.editable.attr('contenteditable') === 'false';\n            }\n          }, {\n            key: \"enable\",\n            value: function enable() {\n              this.layoutInfo.editable.attr('contenteditable', true);\n              this.invoke('toolbar.activate', true);\n              this.triggerEvent('disable', false);\n              this.options.editing = true;\n            }\n          }, {\n            key: \"disable\",\n            value: function disable() {\n              // close codeview if codeview is opend\n              if (this.invoke('codeview.isActivated')) {\n                this.invoke('codeview.deactivate');\n              }\n\n              this.layoutInfo.editable.attr('contenteditable', false);\n              this.options.editing = false;\n              this.invoke('toolbar.deactivate', true);\n              this.triggerEvent('disable', true);\n            }\n          }, {\n            key: \"triggerEvent\",\n            value: function triggerEvent() {\n              var namespace = lists.head(arguments);\n              var args = lists.tail(lists.from(arguments));\n              var callback = this.options.callbacks[func.namespaceToCamel(namespace, 'on')];\n\n              if (callback) {\n                callback.apply(this.$note[0], args);\n              }\n\n              this.$note.trigger('summernote.' + namespace, args);\n            }\n          }, {\n            key: \"initializeModule\",\n            value: function initializeModule(key) {\n              var module = this.modules[key];\n              module.shouldInitialize = module.shouldInitialize || func.ok;\n\n              if (!module.shouldInitialize()) {\n                return;\n              } // initialize module\n\n\n              if (module.initialize) {\n                module.initialize();\n              } // attach events\n\n\n              if (module.events) {\n                dom.attachEvents(this.$note, module.events);\n              }\n            }\n          }, {\n            key: \"module\",\n            value: function module(key, ModuleClass, withoutIntialize) {\n              if (arguments.length === 1) {\n                return this.modules[key];\n              }\n\n              this.modules[key] = new ModuleClass(this);\n\n              if (!withoutIntialize) {\n                this.initializeModule(key);\n              }\n            }\n          }, {\n            key: \"removeModule\",\n            value: function removeModule(key) {\n              var module = this.modules[key];\n\n              if (module.shouldInitialize()) {\n                if (module.events) {\n                  dom.detachEvents(this.$note, module.events);\n                }\n\n                if (module.destroy) {\n                  module.destroy();\n                }\n              }\n\n              delete this.modules[key];\n            }\n          }, {\n            key: \"memo\",\n            value: function memo(key, obj) {\n              if (arguments.length === 1) {\n                return this.memos[key];\n              }\n\n              this.memos[key] = obj;\n            }\n          }, {\n            key: \"removeMemo\",\n            value: function removeMemo(key) {\n              if (this.memos[key] && this.memos[key].destroy) {\n                this.memos[key].destroy();\n              }\n\n              delete this.memos[key];\n            }\n            /**\n             * Some buttons need to change their visual style immediately once they get pressed\n             */\n\n          }, {\n            key: \"createInvokeHandlerAndUpdateState\",\n            value: function createInvokeHandlerAndUpdateState(namespace, value) {\n              var _this3 = this;\n\n              return function (event) {\n                _this3.createInvokeHandler(namespace, value)(event);\n\n                _this3.invoke('buttons.updateCurrentStyle');\n              };\n            }\n          }, {\n            key: \"createInvokeHandler\",\n            value: function createInvokeHandler(namespace, value) {\n              var _this4 = this;\n\n              return function (event) {\n                event.preventDefault();\n                var $target = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(event.target);\n\n                _this4.invoke(namespace, value || $target.closest('[data-value]').data('value'), $target);\n              };\n            }\n          }, {\n            key: \"invoke\",\n            value: function invoke() {\n              var namespace = lists.head(arguments);\n              var args = lists.tail(lists.from(arguments));\n              var splits = namespace.split('.');\n              var hasSeparator = splits.length > 1;\n              var moduleName = hasSeparator && lists.head(splits);\n              var methodName = hasSeparator ? lists.last(splits) : lists.head(splits);\n              var module = this.modules[moduleName || 'editor'];\n\n              if (!moduleName && this[methodName]) {\n                return this[methodName].apply(this, args);\n              } else if (module && module[methodName] && module.shouldInitialize()) {\n                return module[methodName].apply(module, args);\n              }\n            }\n          }]);\n\n          return Context;\n        }(); // CONCATENATED MODULE: ./src/js/summernote.js\n\n\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.fn.extend({\n          /**\n           * Summernote API\n           *\n           * @param {Object|String}\n           * @return {this}\n           */\n          summernote: function summernote() {\n            var type = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.type(lists.head(arguments));\n            var isExternalAPICalled = type === 'string';\n            var hasInitOptions = type === 'object';\n            var options = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend({}, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.options, hasInitOptions ? lists.head(arguments) : {}); // Update options\n\n            options.langInfo = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(true, {}, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.lang['en-US'], external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.lang[options.lang]);\n            options.icons = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(true, {}, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.options.icons, options.icons);\n            options.tooltip = options.tooltip === 'auto' ? !env.isSupportTouch : options.tooltip;\n            this.each(function (idx, note) {\n              var $note = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(note);\n\n              if (!$note.data('summernote')) {\n                var context = new Context_Context($note, options);\n                $note.data('summernote', context);\n                $note.data('summernote').triggerEvent('init', context.layoutInfo);\n              }\n            });\n            var $note = this.first();\n\n            if ($note.length) {\n              var context = $note.data('summernote');\n\n              if (isExternalAPICalled) {\n                return context.invoke.apply(context, lists.from(arguments));\n              } else if (options.focus) {\n                context.invoke('editor.focus');\n              }\n            }\n\n            return this;\n          }\n        }); // CONCATENATED MODULE: ./src/js/base/core/range.js\n\n        function range_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function range_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function range_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) range_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) range_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\n         *\n         * @param {TextRange} textRange\n         * @param {Boolean} isStart\n         * @return {BoundaryPoint}\n         *\n         * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\n         */\n\n\n        function textRangeToPoint(textRange, isStart) {\n          var container = textRange.parentElement();\n          var offset;\n          var tester = document.body.createTextRange();\n          var prevContainer;\n          var childNodes = lists.from(container.childNodes);\n\n          for (offset = 0; offset < childNodes.length; offset++) {\n            if (dom.isText(childNodes[offset])) {\n              continue;\n            }\n\n            tester.moveToElementText(childNodes[offset]);\n\n            if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\n              break;\n            }\n\n            prevContainer = childNodes[offset];\n          }\n\n          if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\n            var textRangeStart = document.body.createTextRange();\n            var curTextNode = null;\n            textRangeStart.moveToElementText(prevContainer || container);\n            textRangeStart.collapse(!prevContainer);\n            curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\n            var pointTester = textRange.duplicate();\n            pointTester.setEndPoint('StartToStart', textRangeStart);\n            var textCount = pointTester.text.replace(/[\\r\\n]/g, '').length;\n\n            while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\n              textCount -= curTextNode.nodeValue.length;\n              curTextNode = curTextNode.nextSibling;\n            } // [workaround] enforce IE to re-reference curTextNode, hack\n\n\n            var dummy = curTextNode.nodeValue; // eslint-disable-line\n\n            if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) && textCount === curTextNode.nodeValue.length) {\n              textCount -= curTextNode.nodeValue.length;\n              curTextNode = curTextNode.nextSibling;\n            }\n\n            container = curTextNode;\n            offset = textCount;\n          }\n\n          return {\n            cont: container,\n            offset: offset\n          };\n        }\n        /**\n         * return TextRange from boundary point (inspired by google closure-library)\n         * @param {BoundaryPoint} point\n         * @return {TextRange}\n         */\n\n\n        function pointToTextRange(point) {\n          var textRangeInfo = function textRangeInfo(container, offset) {\n            var node, isCollapseToStart;\n\n            if (dom.isText(container)) {\n              var prevTextNodes = dom.listPrev(container, func.not(dom.isText));\n              var prevContainer = lists.last(prevTextNodes).previousSibling;\n              node = prevContainer || container.parentNode;\n              offset += lists.sum(lists.tail(prevTextNodes), dom.nodeLength);\n              isCollapseToStart = !prevContainer;\n            } else {\n              node = container.childNodes[offset] || container;\n\n              if (dom.isText(node)) {\n                return textRangeInfo(node, 0);\n              }\n\n              offset = 0;\n              isCollapseToStart = false;\n            }\n\n            return {\n              node: node,\n              collapseToStart: isCollapseToStart,\n              offset: offset\n            };\n          };\n\n          var textRange = document.body.createTextRange();\n          var info = textRangeInfo(point.node, point.offset);\n          textRange.moveToElementText(info.node);\n          textRange.collapse(info.collapseToStart);\n          textRange.moveStart('character', info.offset);\n          return textRange;\n        }\n        /**\n           * Wrapped Range\n           *\n           * @constructor\n           * @param {Node} sc - start container\n           * @param {Number} so - start offset\n           * @param {Node} ec - end container\n           * @param {Number} eo - end offset\n           */\n\n\n        var range_WrappedRange = /*#__PURE__*/function () {\n          function WrappedRange(sc, so, ec, eo) {\n            range_classCallCheck(this, WrappedRange);\n            this.sc = sc;\n            this.so = so;\n            this.ec = ec;\n            this.eo = eo; // isOnEditable: judge whether range is on editable or not\n\n            this.isOnEditable = this.makeIsOn(dom.isEditable); // isOnList: judge whether range is on list node or not\n\n            this.isOnList = this.makeIsOn(dom.isList); // isOnAnchor: judge whether range is on anchor node or not\n\n            this.isOnAnchor = this.makeIsOn(dom.isAnchor); // isOnCell: judge whether range is on cell node or not\n\n            this.isOnCell = this.makeIsOn(dom.isCell); // isOnData: judge whether range is on data node or not\n\n            this.isOnData = this.makeIsOn(dom.isData);\n          } // nativeRange: get nativeRange from sc, so, ec, eo\n\n\n          range_createClass(WrappedRange, [{\n            key: \"nativeRange\",\n            value: function nativeRange() {\n              if (env.isW3CRangeSupport) {\n                var w3cRange = document.createRange();\n                w3cRange.setStart(this.sc, this.so);\n                w3cRange.setEnd(this.ec, this.eo);\n                return w3cRange;\n              } else {\n                var textRange = pointToTextRange({\n                  node: this.sc,\n                  offset: this.so\n                });\n                textRange.setEndPoint('EndToEnd', pointToTextRange({\n                  node: this.ec,\n                  offset: this.eo\n                }));\n                return textRange;\n              }\n            }\n          }, {\n            key: \"getPoints\",\n            value: function getPoints() {\n              return {\n                sc: this.sc,\n                so: this.so,\n                ec: this.ec,\n                eo: this.eo\n              };\n            }\n          }, {\n            key: \"getStartPoint\",\n            value: function getStartPoint() {\n              return {\n                node: this.sc,\n                offset: this.so\n              };\n            }\n          }, {\n            key: \"getEndPoint\",\n            value: function getEndPoint() {\n              return {\n                node: this.ec,\n                offset: this.eo\n              };\n            }\n            /**\n             * select update visible range\n             */\n\n          }, {\n            key: \"select\",\n            value: function select() {\n              var nativeRng = this.nativeRange();\n\n              if (env.isW3CRangeSupport) {\n                var selection = document.getSelection();\n\n                if (selection.rangeCount > 0) {\n                  selection.removeAllRanges();\n                }\n\n                selection.addRange(nativeRng);\n              } else {\n                nativeRng.select();\n              }\n\n              return this;\n            }\n            /**\n             * Moves the scrollbar to start container(sc) of current range\n             *\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"scrollIntoView\",\n            value: function scrollIntoView(container) {\n              var height = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(container).height();\n\n              if (container.scrollTop + height < this.sc.offsetTop) {\n                container.scrollTop += Math.abs(container.scrollTop + height - this.sc.offsetTop);\n              }\n\n              return this;\n            }\n            /**\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"normalize\",\n            value: function normalize() {\n              /**\n               * @param {BoundaryPoint} point\n               * @param {Boolean} isLeftToRight - true: prefer to choose right node\n               *                                - false: prefer to choose left node\n               * @return {BoundaryPoint}\n               */\n              var getVisiblePoint = function getVisiblePoint(point, isLeftToRight) {\n                if (!point) {\n                  return point;\n                } // Just use the given point [XXX:Adhoc]\n                //  - case 01. if the point is on the middle of the node\n                //  - case 02. if the point is on the right edge and prefer to choose left node\n                //  - case 03. if the point is on the left edge and prefer to choose right node\n                //  - case 04. if the point is on the right edge and prefer to choose right node but the node is void\n                //  - case 05. if the point is on the left edge and prefer to choose left node but the node is void\n                //  - case 06. if the point is on the block node and there is no children\n\n\n                if (dom.isVisiblePoint(point)) {\n                  if (!dom.isEdgePoint(point) || dom.isRightEdgePoint(point) && !isLeftToRight || dom.isLeftEdgePoint(point) && isLeftToRight || dom.isRightEdgePoint(point) && isLeftToRight && dom.isVoid(point.node.nextSibling) || dom.isLeftEdgePoint(point) && !isLeftToRight && dom.isVoid(point.node.previousSibling) || dom.isBlock(point.node) && dom.isEmpty(point.node)) {\n                    return point;\n                  }\n                } // point on block's edge\n\n\n                var block = dom.ancestor(point.node, dom.isBlock);\n                var hasRightNode = false;\n\n                if (!hasRightNode) {\n                  var prevPoint = dom.prevPoint(point) || {\n                    node: null\n                  };\n                  hasRightNode = (dom.isLeftEdgePointOf(point, block) || dom.isVoid(prevPoint.node)) && !isLeftToRight;\n                }\n\n                var hasLeftNode = false;\n\n                if (!hasLeftNode) {\n                  var _nextPoint = dom.nextPoint(point) || {\n                    node: null\n                  };\n\n                  hasLeftNode = (dom.isRightEdgePointOf(point, block) || dom.isVoid(_nextPoint.node)) && isLeftToRight;\n                }\n\n                if (hasRightNode || hasLeftNode) {\n                  // returns point already on visible point\n                  if (dom.isVisiblePoint(point)) {\n                    return point;\n                  } // reverse direction\n\n\n                  isLeftToRight = !isLeftToRight;\n                }\n\n                var nextPoint = isLeftToRight ? dom.nextPointUntil(dom.nextPoint(point), dom.isVisiblePoint) : dom.prevPointUntil(dom.prevPoint(point), dom.isVisiblePoint);\n                return nextPoint || point;\n              };\n\n              var endPoint = getVisiblePoint(this.getEndPoint(), false);\n              var startPoint = this.isCollapsed() ? endPoint : getVisiblePoint(this.getStartPoint(), true);\n              return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\n            }\n            /**\n             * returns matched nodes on range\n             *\n             * @param {Function} [pred] - predicate function\n             * @param {Object} [options]\n             * @param {Boolean} [options.includeAncestor]\n             * @param {Boolean} [options.fullyContains]\n             * @return {Node[]}\n             */\n\n          }, {\n            key: \"nodes\",\n            value: function nodes(pred, options) {\n              pred = pred || func.ok;\n              var includeAncestor = options && options.includeAncestor;\n              var fullyContains = options && options.fullyContains; // TODO compare points and sort\n\n              var startPoint = this.getStartPoint();\n              var endPoint = this.getEndPoint();\n              var nodes = [];\n              var leftEdgeNodes = [];\n              dom.walkPoint(startPoint, endPoint, function (point) {\n                if (dom.isEditable(point.node)) {\n                  return;\n                }\n\n                var node;\n\n                if (fullyContains) {\n                  if (dom.isLeftEdgePoint(point)) {\n                    leftEdgeNodes.push(point.node);\n                  }\n\n                  if (dom.isRightEdgePoint(point) && lists.contains(leftEdgeNodes, point.node)) {\n                    node = point.node;\n                  }\n                } else if (includeAncestor) {\n                  node = dom.ancestor(point.node, pred);\n                } else {\n                  node = point.node;\n                }\n\n                if (node && pred(node)) {\n                  nodes.push(node);\n                }\n              }, true);\n              return lists.unique(nodes);\n            }\n            /**\n             * returns commonAncestor of range\n             * @return {Element} - commonAncestor\n             */\n\n          }, {\n            key: \"commonAncestor\",\n            value: function commonAncestor() {\n              return dom.commonAncestor(this.sc, this.ec);\n            }\n            /**\n             * returns expanded range by pred\n             *\n             * @param {Function} pred - predicate function\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"expand\",\n            value: function expand(pred) {\n              var startAncestor = dom.ancestor(this.sc, pred);\n              var endAncestor = dom.ancestor(this.ec, pred);\n\n              if (!startAncestor && !endAncestor) {\n                return new WrappedRange(this.sc, this.so, this.ec, this.eo);\n              }\n\n              var boundaryPoints = this.getPoints();\n\n              if (startAncestor) {\n                boundaryPoints.sc = startAncestor;\n                boundaryPoints.so = 0;\n              }\n\n              if (endAncestor) {\n                boundaryPoints.ec = endAncestor;\n                boundaryPoints.eo = dom.nodeLength(endAncestor);\n              }\n\n              return new WrappedRange(boundaryPoints.sc, boundaryPoints.so, boundaryPoints.ec, boundaryPoints.eo);\n            }\n            /**\n             * @param {Boolean} isCollapseToStart\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"collapse\",\n            value: function collapse(isCollapseToStart) {\n              if (isCollapseToStart) {\n                return new WrappedRange(this.sc, this.so, this.sc, this.so);\n              } else {\n                return new WrappedRange(this.ec, this.eo, this.ec, this.eo);\n              }\n            }\n            /**\n             * splitText on range\n             */\n\n          }, {\n            key: \"splitText\",\n            value: function splitText() {\n              var isSameContainer = this.sc === this.ec;\n              var boundaryPoints = this.getPoints();\n\n              if (dom.isText(this.ec) && !dom.isEdgePoint(this.getEndPoint())) {\n                this.ec.splitText(this.eo);\n              }\n\n              if (dom.isText(this.sc) && !dom.isEdgePoint(this.getStartPoint())) {\n                boundaryPoints.sc = this.sc.splitText(this.so);\n                boundaryPoints.so = 0;\n\n                if (isSameContainer) {\n                  boundaryPoints.ec = boundaryPoints.sc;\n                  boundaryPoints.eo = this.eo - this.so;\n                }\n              }\n\n              return new WrappedRange(boundaryPoints.sc, boundaryPoints.so, boundaryPoints.ec, boundaryPoints.eo);\n            }\n            /**\n             * delete contents on range\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"deleteContents\",\n            value: function deleteContents() {\n              if (this.isCollapsed()) {\n                return this;\n              }\n\n              var rng = this.splitText();\n              var nodes = rng.nodes(null, {\n                fullyContains: true\n              }); // find new cursor point\n\n              var point = dom.prevPointUntil(rng.getStartPoint(), function (point) {\n                return !lists.contains(nodes, point.node);\n              });\n              var emptyParents = [];\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(nodes, function (idx, node) {\n                // find empty parents\n                var parent = node.parentNode;\n\n                if (point.node !== parent && dom.nodeLength(parent) === 1) {\n                  emptyParents.push(parent);\n                }\n\n                dom.remove(node, false);\n              }); // remove empty parents\n\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(emptyParents, function (idx, node) {\n                dom.remove(node, false);\n              });\n              return new WrappedRange(point.node, point.offset, point.node, point.offset).normalize();\n            }\n            /**\n             * makeIsOn: return isOn(pred) function\n             */\n\n          }, {\n            key: \"makeIsOn\",\n            value: function makeIsOn(pred) {\n              return function () {\n                var ancestor = dom.ancestor(this.sc, pred);\n                return !!ancestor && ancestor === dom.ancestor(this.ec, pred);\n              };\n            }\n            /**\n             * @param {Function} pred\n             * @return {Boolean}\n             */\n\n          }, {\n            key: \"isLeftEdgeOf\",\n            value: function isLeftEdgeOf(pred) {\n              if (!dom.isLeftEdgePoint(this.getStartPoint())) {\n                return false;\n              }\n\n              var node = dom.ancestor(this.sc, pred);\n              return node && dom.isLeftEdgeOf(this.sc, node);\n            }\n            /**\n             * returns whether range was collapsed or not\n             */\n\n          }, {\n            key: \"isCollapsed\",\n            value: function isCollapsed() {\n              return this.sc === this.ec && this.so === this.eo;\n            }\n            /**\n             * wrap inline nodes which children of body with paragraph\n             *\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"wrapBodyInlineWithPara\",\n            value: function wrapBodyInlineWithPara() {\n              if (dom.isBodyContainer(this.sc) && dom.isEmpty(this.sc)) {\n                this.sc.innerHTML = dom.emptyPara;\n                return new WrappedRange(this.sc.firstChild, 0, this.sc.firstChild, 0);\n              }\n              /**\n               * [workaround] firefox often create range on not visible point. so normalize here.\n               *  - firefox: |<p>text</p>|\n               *  - chrome: <p>|text|</p>\n               */\n\n\n              var rng = this.normalize();\n\n              if (dom.isParaInline(this.sc) || dom.isPara(this.sc)) {\n                return rng;\n              } // find inline top ancestor\n\n\n              var topAncestor;\n\n              if (dom.isInline(rng.sc)) {\n                var ancestors = dom.listAncestor(rng.sc, func.not(dom.isInline));\n                topAncestor = lists.last(ancestors);\n\n                if (!dom.isInline(topAncestor)) {\n                  topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];\n                }\n              } else {\n                topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];\n              }\n\n              if (topAncestor) {\n                // siblings not in paragraph\n                var inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\n                inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline)); // wrap with paragraph\n\n                if (inlineSiblings.length) {\n                  var para = dom.wrap(lists.head(inlineSiblings), 'p');\n                  dom.appendChildNodes(para, lists.tail(inlineSiblings));\n                }\n              }\n\n              return this.normalize();\n            }\n            /**\n             * insert node at current cursor\n             *\n             * @param {Node} node\n             * @return {Node}\n             */\n\n          }, {\n            key: \"insertNode\",\n            value: function insertNode(node) {\n              var rng = this;\n\n              if (dom.isText(node) || dom.isInline(node)) {\n                rng = this.wrapBodyInlineWithPara().deleteContents();\n              }\n\n              var info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\n\n              if (info.rightNode) {\n                info.rightNode.parentNode.insertBefore(node, info.rightNode);\n\n                if (dom.isEmpty(info.rightNode) && dom.isPara(node)) {\n                  info.rightNode.parentNode.removeChild(info.rightNode);\n                }\n              } else {\n                info.container.appendChild(node);\n              }\n\n              return node;\n            }\n            /**\n             * insert html at current cursor\n             */\n\n          }, {\n            key: \"pasteHTML\",\n            value: function pasteHTML(markup) {\n              markup = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.trim(markup);\n              var contentsContainer = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div></div>').html(markup)[0];\n              var childNodes = lists.from(contentsContainer.childNodes); // const rng = this.wrapBodyInlineWithPara().deleteContents();\n\n              var rng = this;\n              var reversed = false;\n\n              if (rng.so >= 0) {\n                childNodes = childNodes.reverse();\n                reversed = true;\n              }\n\n              childNodes = childNodes.map(function (childNode) {\n                return rng.insertNode(childNode);\n              });\n\n              if (reversed) {\n                childNodes = childNodes.reverse();\n              }\n\n              return childNodes;\n            }\n            /**\n             * returns text in range\n             *\n             * @return {String}\n             */\n\n          }, {\n            key: \"toString\",\n            value: function toString() {\n              var nativeRng = this.nativeRange();\n              return env.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\n            }\n            /**\n             * returns range for word before cursor\n             *\n             * @param {Boolean} [findAfter] - find after cursor, default: false\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"getWordRange\",\n            value: function getWordRange(findAfter) {\n              var endPoint = this.getEndPoint();\n\n              if (!dom.isCharPoint(endPoint)) {\n                return this;\n              }\n\n              var startPoint = dom.prevPointUntil(endPoint, function (point) {\n                return !dom.isCharPoint(point);\n              });\n\n              if (findAfter) {\n                endPoint = dom.nextPointUntil(endPoint, function (point) {\n                  return !dom.isCharPoint(point);\n                });\n              }\n\n              return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\n            }\n            /**\n             * returns range for words before cursor\n             *\n             * @param {Boolean} [findAfter] - find after cursor, default: false\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"getWordsRange\",\n            value: function getWordsRange(findAfter) {\n              var endPoint = this.getEndPoint();\n\n              var isNotTextPoint = function isNotTextPoint(point) {\n                return !dom.isCharPoint(point) && !dom.isSpacePoint(point);\n              };\n\n              if (isNotTextPoint(endPoint)) {\n                return this;\n              }\n\n              var startPoint = dom.prevPointUntil(endPoint, isNotTextPoint);\n\n              if (findAfter) {\n                endPoint = dom.nextPointUntil(endPoint, isNotTextPoint);\n              }\n\n              return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\n            }\n            /**\n             * returns range for words before cursor that match with a Regex\n             *\n             * example:\n             *  range: 'hi @Peter Pan'\n             *  regex: '/@[a-z ]+/i'\n             *  return range: '@Peter Pan'\n             *\n             * @param {RegExp} [regex]\n             * @return {WrappedRange|null}\n             */\n\n          }, {\n            key: \"getWordsMatchRange\",\n            value: function getWordsMatchRange(regex) {\n              var endPoint = this.getEndPoint();\n              var startPoint = dom.prevPointUntil(endPoint, function (point) {\n                if (!dom.isCharPoint(point) && !dom.isSpacePoint(point)) {\n                  return true;\n                }\n\n                var rng = new WrappedRange(point.node, point.offset, endPoint.node, endPoint.offset);\n                var result = regex.exec(rng.toString());\n                return result && result.index === 0;\n              });\n              var rng = new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\n              var text = rng.toString();\n              var result = regex.exec(text);\n\n              if (result && result[0].length === text.length) {\n                return rng;\n              } else {\n                return null;\n              }\n            }\n            /**\n             * create offsetPath bookmark\n             *\n             * @param {Node} editable\n             */\n\n          }, {\n            key: \"bookmark\",\n            value: function bookmark(editable) {\n              return {\n                s: {\n                  path: dom.makeOffsetPath(editable, this.sc),\n                  offset: this.so\n                },\n                e: {\n                  path: dom.makeOffsetPath(editable, this.ec),\n                  offset: this.eo\n                }\n              };\n            }\n            /**\n             * create offsetPath bookmark base on paragraph\n             *\n             * @param {Node[]} paras\n             */\n\n          }, {\n            key: \"paraBookmark\",\n            value: function paraBookmark(paras) {\n              return {\n                s: {\n                  path: lists.tail(dom.makeOffsetPath(lists.head(paras), this.sc)),\n                  offset: this.so\n                },\n                e: {\n                  path: lists.tail(dom.makeOffsetPath(lists.last(paras), this.ec)),\n                  offset: this.eo\n                }\n              };\n            }\n            /**\n             * getClientRects\n             * @return {Rect[]}\n             */\n\n          }, {\n            key: \"getClientRects\",\n            value: function getClientRects() {\n              var nativeRng = this.nativeRange();\n              return nativeRng.getClientRects();\n            }\n          }]);\n          return WrappedRange;\n        }();\n        /**\n         * Data structure\n         *  * BoundaryPoint: a point of dom tree\n         *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\n         *\n         * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\n         */\n\n        /* harmony default export */\n\n\n        var range = {\n          /**\n           * create Range Object From arguments or Browser Selection\n           *\n           * @param {Node} sc - start container\n           * @param {Number} so - start offset\n           * @param {Node} ec - end container\n           * @param {Number} eo - end offset\n           * @return {WrappedRange}\n           */\n          create: function create(sc, so, ec, eo) {\n            if (arguments.length === 4) {\n              return new range_WrappedRange(sc, so, ec, eo);\n            } else if (arguments.length === 2) {\n              // collapsed\n              ec = sc;\n              eo = so;\n              return new range_WrappedRange(sc, so, ec, eo);\n            } else {\n              var wrappedRange = this.createFromSelection();\n\n              if (!wrappedRange && arguments.length === 1) {\n                var bodyElement = arguments[0];\n\n                if (dom.isEditable(bodyElement)) {\n                  bodyElement = bodyElement.lastChild;\n                }\n\n                return this.createFromBodyElement(bodyElement, dom.emptyPara === arguments[0].innerHTML);\n              }\n\n              return wrappedRange;\n            }\n          },\n          createFromBodyElement: function createFromBodyElement(bodyElement) {\n            var isCollapseToStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var wrappedRange = this.createFromNode(bodyElement);\n            return wrappedRange.collapse(isCollapseToStart);\n          },\n          createFromSelection: function createFromSelection() {\n            var sc, so, ec, eo;\n\n            if (env.isW3CRangeSupport) {\n              var selection = document.getSelection();\n\n              if (!selection || selection.rangeCount === 0) {\n                return null;\n              } else if (dom.isBody(selection.anchorNode)) {\n                // Firefox: returns entire body as range on initialization.\n                // We won't never need it.\n                return null;\n              }\n\n              var nativeRng = selection.getRangeAt(0);\n              sc = nativeRng.startContainer;\n              so = nativeRng.startOffset;\n              ec = nativeRng.endContainer;\n              eo = nativeRng.endOffset;\n            } else {\n              // IE8: TextRange\n              var textRange = document.selection.createRange();\n              var textRangeEnd = textRange.duplicate();\n              textRangeEnd.collapse(false);\n              var textRangeStart = textRange;\n              textRangeStart.collapse(true);\n              var startPoint = textRangeToPoint(textRangeStart, true);\n              var endPoint = textRangeToPoint(textRangeEnd, false); // same visible point case: range was collapsed.\n\n              if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) && dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) && endPoint.node.nextSibling === startPoint.node) {\n                startPoint = endPoint;\n              }\n\n              sc = startPoint.cont;\n              so = startPoint.offset;\n              ec = endPoint.cont;\n              eo = endPoint.offset;\n            }\n\n            return new range_WrappedRange(sc, so, ec, eo);\n          },\n\n          /**\n           * @method\n           *\n           * create WrappedRange from node\n           *\n           * @param {Node} node\n           * @return {WrappedRange}\n           */\n          createFromNode: function createFromNode(node) {\n            var sc = node;\n            var so = 0;\n            var ec = node;\n            var eo = dom.nodeLength(ec); // browsers can't target a picture or void node\n\n            if (dom.isVoid(sc)) {\n              so = dom.listPrev(sc).length - 1;\n              sc = sc.parentNode;\n            }\n\n            if (dom.isBR(ec)) {\n              eo = dom.listPrev(ec).length - 1;\n              ec = ec.parentNode;\n            } else if (dom.isVoid(ec)) {\n              eo = dom.listPrev(ec).length;\n              ec = ec.parentNode;\n            }\n\n            return this.create(sc, so, ec, eo);\n          },\n\n          /**\n           * create WrappedRange from node after position\n           *\n           * @param {Node} node\n           * @return {WrappedRange}\n           */\n          createFromNodeBefore: function createFromNodeBefore(node) {\n            return this.createFromNode(node).collapse(true);\n          },\n\n          /**\n           * create WrappedRange from node after position\n           *\n           * @param {Node} node\n           * @return {WrappedRange}\n           */\n          createFromNodeAfter: function createFromNodeAfter(node) {\n            return this.createFromNode(node).collapse();\n          },\n\n          /**\n           * @method\n           *\n           * create WrappedRange from bookmark\n           *\n           * @param {Node} editable\n           * @param {Object} bookmark\n           * @return {WrappedRange}\n           */\n          createFromBookmark: function createFromBookmark(editable, bookmark) {\n            var sc = dom.fromOffsetPath(editable, bookmark.s.path);\n            var so = bookmark.s.offset;\n            var ec = dom.fromOffsetPath(editable, bookmark.e.path);\n            var eo = bookmark.e.offset;\n            return new range_WrappedRange(sc, so, ec, eo);\n          },\n\n          /**\n           * @method\n           *\n           * create WrappedRange from paraBookmark\n           *\n           * @param {Object} bookmark\n           * @param {Node[]} paras\n           * @return {WrappedRange}\n           */\n          createFromParaBookmark: function createFromParaBookmark(bookmark, paras) {\n            var so = bookmark.s.offset;\n            var eo = bookmark.e.offset;\n            var sc = dom.fromOffsetPath(lists.head(paras), bookmark.s.path);\n            var ec = dom.fromOffsetPath(lists.last(paras), bookmark.e.path);\n            return new range_WrappedRange(sc, so, ec, eo);\n          }\n        }; // CONCATENATED MODULE: ./src/js/base/core/key.js\n\n        var KEY_MAP = {\n          'BACKSPACE': 8,\n          'TAB': 9,\n          'ENTER': 13,\n          'ESCAPE': 27,\n          'SPACE': 32,\n          'DELETE': 46,\n          // Arrow\n          'LEFT': 37,\n          'UP': 38,\n          'RIGHT': 39,\n          'DOWN': 40,\n          // Number: 0-9\n          'NUM0': 48,\n          'NUM1': 49,\n          'NUM2': 50,\n          'NUM3': 51,\n          'NUM4': 52,\n          'NUM5': 53,\n          'NUM6': 54,\n          'NUM7': 55,\n          'NUM8': 56,\n          // Alphabet: a-z\n          'B': 66,\n          'E': 69,\n          'I': 73,\n          'J': 74,\n          'K': 75,\n          'L': 76,\n          'R': 82,\n          'S': 83,\n          'U': 85,\n          'V': 86,\n          'Y': 89,\n          'Z': 90,\n          'SLASH': 191,\n          'LEFTBRACKET': 219,\n          'BACKSLASH': 220,\n          'RIGHTBRACKET': 221,\n          // Navigation\n          'HOME': 36,\n          'END': 35,\n          'PAGEUP': 33,\n          'PAGEDOWN': 34\n        };\n        /**\n         * @class core.key\n         *\n         * Object for keycodes.\n         *\n         * @singleton\n         * @alternateClassName key\n         */\n\n        /* harmony default export */\n\n        var core_key = {\n          /**\n           * @method isEdit\n           *\n           * @param {Number} keyCode\n           * @return {Boolean}\n           */\n          isEdit: function isEdit(keyCode) {\n            return lists.contains([KEY_MAP.BACKSPACE, KEY_MAP.TAB, KEY_MAP.ENTER, KEY_MAP.SPACE, KEY_MAP.DELETE], keyCode);\n          },\n\n          /**\n           * @method isMove\n           *\n           * @param {Number} keyCode\n           * @return {Boolean}\n           */\n          isMove: function isMove(keyCode) {\n            return lists.contains([KEY_MAP.LEFT, KEY_MAP.UP, KEY_MAP.RIGHT, KEY_MAP.DOWN], keyCode);\n          },\n\n          /**\n           * @method isNavigation\n           *\n           * @param {Number} keyCode\n           * @return {Boolean}\n           */\n          isNavigation: function isNavigation(keyCode) {\n            return lists.contains([KEY_MAP.HOME, KEY_MAP.END, KEY_MAP.PAGEUP, KEY_MAP.PAGEDOWN], keyCode);\n          },\n\n          /**\n           * @property {Object} nameFromCode\n           * @property {String} nameFromCode.8 \"BACKSPACE\"\n           */\n          nameFromCode: func.invertObject(KEY_MAP),\n          code: KEY_MAP\n        }; // CONCATENATED MODULE: ./src/js/base/core/async.js\n\n        /**\n         * @method readFileAsDataURL\n         *\n         * read contents of file as representing URL\n         *\n         * @param {File} file\n         * @return {Promise} - then: dataUrl\n         */\n\n        function readFileAsDataURL(file) {\n          return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n            external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(new FileReader(), {\n              onload: function onload(e) {\n                var dataURL = e.target.result;\n                deferred.resolve(dataURL);\n              },\n              onerror: function onerror(err) {\n                deferred.reject(err);\n              }\n            }).readAsDataURL(file);\n          }).promise();\n        }\n        /**\n         * @method createImage\n         *\n         * create `<image>` from url string\n         *\n         * @param {String} url\n         * @return {Promise} - then: $image\n         */\n\n\n        function createImage(url) {\n          return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n            var $img = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<img>');\n            $img.one('load', function () {\n              $img.off('error abort');\n              deferred.resolve($img);\n            }).one('error abort', function () {\n              $img.off('load').detach();\n              deferred.reject($img);\n            }).css({\n              display: 'none'\n            }).appendTo(document.body).attr('src', url);\n          }).promise();\n        } // CONCATENATED MODULE: ./src/js/base/editing/History.js\n\n\n        function History_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function History_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function History_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) History_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) History_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var History_History = /*#__PURE__*/function () {\n          function History(context) {\n            History_classCallCheck(this, History);\n            this.stack = [];\n            this.stackOffset = -1;\n            this.context = context;\n            this.$editable = context.layoutInfo.editable;\n            this.editable = this.$editable[0];\n          }\n\n          History_createClass(History, [{\n            key: \"makeSnapshot\",\n            value: function makeSnapshot() {\n              var rng = range.create(this.editable);\n              var emptyBookmark = {\n                s: {\n                  path: [],\n                  offset: 0\n                },\n                e: {\n                  path: [],\n                  offset: 0\n                }\n              };\n              return {\n                contents: this.$editable.html(),\n                bookmark: rng && rng.isOnEditable() ? rng.bookmark(this.editable) : emptyBookmark\n              };\n            }\n          }, {\n            key: \"applySnapshot\",\n            value: function applySnapshot(snapshot) {\n              if (snapshot.contents !== null) {\n                this.$editable.html(snapshot.contents);\n              }\n\n              if (snapshot.bookmark !== null) {\n                range.createFromBookmark(this.editable, snapshot.bookmark).select();\n              }\n            }\n            /**\n            * @method rewind\n            * Rewinds the history stack back to the first snapshot taken.\n            * Leaves the stack intact, so that \"Redo\" can still be used.\n            */\n\n          }, {\n            key: \"rewind\",\n            value: function rewind() {\n              // Create snap shot if not yet recorded\n              if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n                this.recordUndo();\n              } // Return to the first available snapshot.\n\n\n              this.stackOffset = 0; // Apply that snapshot.\n\n              this.applySnapshot(this.stack[this.stackOffset]);\n            }\n            /**\n            *  @method commit\n            *  Resets history stack, but keeps current editor's content.\n            */\n\n          }, {\n            key: \"commit\",\n            value: function commit() {\n              // Clear the stack.\n              this.stack = []; // Restore stackOffset to its original value.\n\n              this.stackOffset = -1; // Record our first snapshot (of nothing).\n\n              this.recordUndo();\n            }\n            /**\n            * @method reset\n            * Resets the history stack completely; reverting to an empty editor.\n            */\n\n          }, {\n            key: \"reset\",\n            value: function reset() {\n              // Clear the stack.\n              this.stack = []; // Restore stackOffset to its original value.\n\n              this.stackOffset = -1; // Clear the editable area.\n\n              this.$editable.html(''); // Record our first snapshot (of nothing).\n\n              this.recordUndo();\n            }\n            /**\n             * undo\n             */\n\n          }, {\n            key: \"undo\",\n            value: function undo() {\n              // Create snap shot if not yet recorded\n              if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n                this.recordUndo();\n              }\n\n              if (this.stackOffset > 0) {\n                this.stackOffset--;\n                this.applySnapshot(this.stack[this.stackOffset]);\n              }\n            }\n            /**\n             * redo\n             */\n\n          }, {\n            key: \"redo\",\n            value: function redo() {\n              if (this.stack.length - 1 > this.stackOffset) {\n                this.stackOffset++;\n                this.applySnapshot(this.stack[this.stackOffset]);\n              }\n            }\n            /**\n             * recorded undo\n             */\n\n          }, {\n            key: \"recordUndo\",\n            value: function recordUndo() {\n              this.stackOffset++; // Wash out stack after stackOffset\n\n              if (this.stack.length > this.stackOffset) {\n                this.stack = this.stack.slice(0, this.stackOffset);\n              } // Create new snapshot and push it to the end\n\n\n              this.stack.push(this.makeSnapshot()); // If the stack size reachs to the limit, then slice it\n\n              if (this.stack.length > this.context.options.historyLimit) {\n                this.stack.shift();\n                this.stackOffset -= 1;\n              }\n            }\n          }]);\n          return History;\n        }(); // CONCATENATED MODULE: ./src/js/base/editing/Style.js\n\n\n        function Style_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Style_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Style_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Style_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Style_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Style_Style = /*#__PURE__*/function () {\n          function Style() {\n            Style_classCallCheck(this, Style);\n          }\n\n          Style_createClass(Style, [{\n            key: \"jQueryCSS\",\n\n            /**\n             * @method jQueryCSS\n             *\n             * [workaround] for old jQuery\n             * passing an array of style properties to .css()\n             * will result in an object of property-value pairs.\n             * (compability with version < 1.9)\n             *\n             * @private\n             * @param  {jQuery} $obj\n             * @param  {Array} propertyNames - An array of one or more CSS properties.\n             * @return {Object}\n             */\n            value: function jQueryCSS($obj, propertyNames) {\n              if (env.jqueryVersion < 1.9) {\n                var result = {};\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(propertyNames, function (idx, propertyName) {\n                  result[propertyName] = $obj.css(propertyName);\n                });\n                return result;\n              }\n\n              return $obj.css(propertyNames);\n            }\n            /**\n             * returns style object from node\n             *\n             * @param {jQuery} $node\n             * @return {Object}\n             */\n\n          }, {\n            key: \"fromNode\",\n            value: function fromNode($node) {\n              var properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\n              var styleInfo = this.jQueryCSS($node, properties) || {};\n              var fontSize = $node[0].style.fontSize || styleInfo['font-size'];\n              styleInfo['font-size'] = parseInt(fontSize, 10);\n              styleInfo['font-size-unit'] = fontSize.match(/[a-z%]+$/);\n              return styleInfo;\n            }\n            /**\n             * paragraph level style\n             *\n             * @param {WrappedRange} rng\n             * @param {Object} styleInfo\n             */\n\n          }, {\n            key: \"stylePara\",\n            value: function stylePara(rng, styleInfo) {\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(rng.nodes(dom.isPara, {\n                includeAncestor: true\n              }), function (idx, para) {\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(para).css(styleInfo);\n              });\n            }\n            /**\n             * insert and returns styleNodes on range.\n             *\n             * @param {WrappedRange} rng\n             * @param {Object} [options] - options for styleNodes\n             * @param {String} [options.nodeName] - default: `SPAN`\n             * @param {Boolean} [options.expandClosestSibling] - default: `false`\n             * @param {Boolean} [options.onlyPartialContains] - default: `false`\n             * @return {Node[]}\n             */\n\n          }, {\n            key: \"styleNodes\",\n            value: function styleNodes(rng, options) {\n              rng = rng.splitText();\n              var nodeName = options && options.nodeName || 'SPAN';\n              var expandClosestSibling = !!(options && options.expandClosestSibling);\n              var onlyPartialContains = !!(options && options.onlyPartialContains);\n\n              if (rng.isCollapsed()) {\n                return [rng.insertNode(dom.create(nodeName))];\n              }\n\n              var pred = dom.makePredByNodeName(nodeName);\n              var nodes = rng.nodes(dom.isText, {\n                fullyContains: true\n              }).map(function (text) {\n                return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\n              });\n\n              if (expandClosestSibling) {\n                if (onlyPartialContains) {\n                  var nodesInRange = rng.nodes(); // compose with partial contains predication\n\n                  pred = func.and(pred, function (node) {\n                    return lists.contains(nodesInRange, node);\n                  });\n                }\n\n                return nodes.map(function (node) {\n                  var siblings = dom.withClosestSiblings(node, pred);\n                  var head = lists.head(siblings);\n                  var tails = lists.tail(siblings);\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(tails, function (idx, elem) {\n                    dom.appendChildNodes(head, elem.childNodes);\n                    dom.remove(elem);\n                  });\n                  return lists.head(siblings);\n                });\n              } else {\n                return nodes;\n              }\n            }\n            /**\n             * get current style on cursor\n             *\n             * @param {WrappedRange} rng\n             * @return {Object} - object contains style properties.\n             */\n\n          }, {\n            key: \"current\",\n            value: function current(rng) {\n              var $cont = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(!dom.isElement(rng.sc) ? rng.sc.parentNode : rng.sc);\n              var styleInfo = this.fromNode($cont); // document.queryCommandState for toggle state\n              // [workaround] prevent Firefox nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"\n\n              try {\n                styleInfo = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(styleInfo, {\n                  'font-bold': document.queryCommandState('bold') ? 'bold' : 'normal',\n                  'font-italic': document.queryCommandState('italic') ? 'italic' : 'normal',\n                  'font-underline': document.queryCommandState('underline') ? 'underline' : 'normal',\n                  'font-subscript': document.queryCommandState('subscript') ? 'subscript' : 'normal',\n                  'font-superscript': document.queryCommandState('superscript') ? 'superscript' : 'normal',\n                  'font-strikethrough': document.queryCommandState('strikethrough') ? 'strikethrough' : 'normal',\n                  'font-family': document.queryCommandValue('fontname') || styleInfo['font-family']\n                });\n              } catch (e) {} // eslint-disable-next-line\n              // list-style-type to list-style(unordered, ordered)\n\n\n              if (!rng.isOnList()) {\n                styleInfo['list-style'] = 'none';\n              } else {\n                var orderedTypes = ['circle', 'disc', 'disc-leading-zero', 'square'];\n                var isUnordered = orderedTypes.indexOf(styleInfo['list-style-type']) > -1;\n                styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\n              }\n\n              var para = dom.ancestor(rng.sc, dom.isPara);\n\n              if (para && para.style['line-height']) {\n                styleInfo['line-height'] = para.style.lineHeight;\n              } else {\n                var lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\n                styleInfo['line-height'] = lineHeight.toFixed(1);\n              }\n\n              styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\n              styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\n              styleInfo.range = rng;\n              return styleInfo;\n            }\n          }]);\n          return Style;\n        }(); // CONCATENATED MODULE: ./src/js/base/editing/Bullet.js\n\n\n        function Bullet_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Bullet_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Bullet_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Bullet_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Bullet_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Bullet_Bullet = /*#__PURE__*/function () {\n          function Bullet() {\n            Bullet_classCallCheck(this, Bullet);\n          }\n\n          Bullet_createClass(Bullet, [{\n            key: \"insertOrderedList\",\n\n            /**\n             * toggle ordered list\n             */\n            value: function insertOrderedList(editable) {\n              this.toggleList('OL', editable);\n            }\n            /**\n             * toggle unordered list\n             */\n\n          }, {\n            key: \"insertUnorderedList\",\n            value: function insertUnorderedList(editable) {\n              this.toggleList('UL', editable);\n            }\n            /**\n             * indent\n             */\n\n          }, {\n            key: \"indent\",\n            value: function indent(editable) {\n              var _this = this;\n\n              var rng = range.create(editable).wrapBodyInlineWithPara();\n              var paras = rng.nodes(dom.isPara, {\n                includeAncestor: true\n              });\n              var clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(clustereds, function (idx, paras) {\n                var head = lists.head(paras);\n\n                if (dom.isLi(head)) {\n                  var previousList = _this.findList(head.previousSibling);\n\n                  if (previousList) {\n                    paras.map(function (para) {\n                      return previousList.appendChild(para);\n                    });\n                  } else {\n                    _this.wrapList(paras, head.parentNode.nodeName);\n\n                    paras.map(function (para) {\n                      return para.parentNode;\n                    }).map(function (para) {\n                      return _this.appendToPrevious(para);\n                    });\n                  }\n                } else {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(paras, function (idx, para) {\n                    external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(para).css('marginLeft', function (idx, val) {\n                      return (parseInt(val, 10) || 0) + 25;\n                    });\n                  });\n                }\n              });\n              rng.select();\n            }\n            /**\n             * outdent\n             */\n\n          }, {\n            key: \"outdent\",\n            value: function outdent(editable) {\n              var _this2 = this;\n\n              var rng = range.create(editable).wrapBodyInlineWithPara();\n              var paras = rng.nodes(dom.isPara, {\n                includeAncestor: true\n              });\n              var clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(clustereds, function (idx, paras) {\n                var head = lists.head(paras);\n\n                if (dom.isLi(head)) {\n                  _this2.releaseList([paras]);\n                } else {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(paras, function (idx, para) {\n                    external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(para).css('marginLeft', function (idx, val) {\n                      val = parseInt(val, 10) || 0;\n                      return val > 25 ? val - 25 : '';\n                    });\n                  });\n                }\n              });\n              rng.select();\n            }\n            /**\n             * toggle list\n             *\n             * @param {String} listName - OL or UL\n             */\n\n          }, {\n            key: \"toggleList\",\n            value: function toggleList(listName, editable) {\n              var _this3 = this;\n\n              var rng = range.create(editable).wrapBodyInlineWithPara();\n              var paras = rng.nodes(dom.isPara, {\n                includeAncestor: true\n              });\n              var bookmark = rng.paraBookmark(paras);\n              var clustereds = lists.clusterBy(paras, func.peq2('parentNode')); // paragraph to list\n\n              if (lists.find(paras, dom.isPurePara)) {\n                var wrappedParas = [];\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(clustereds, function (idx, paras) {\n                  wrappedParas = wrappedParas.concat(_this3.wrapList(paras, listName));\n                });\n                paras = wrappedParas; // list to paragraph or change list style\n              } else {\n                var diffLists = rng.nodes(dom.isList, {\n                  includeAncestor: true\n                }).filter(function (listNode) {\n                  return !external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.nodeName(listNode, listName);\n                });\n\n                if (diffLists.length) {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(diffLists, function (idx, listNode) {\n                    dom.replace(listNode, listName);\n                  });\n                } else {\n                  paras = this.releaseList(clustereds, true);\n                }\n              }\n\n              range.createFromParaBookmark(bookmark, paras).select();\n            }\n            /**\n             * @param {Node[]} paras\n             * @param {String} listName\n             * @return {Node[]}\n             */\n\n          }, {\n            key: \"wrapList\",\n            value: function wrapList(paras, listName) {\n              var head = lists.head(paras);\n              var last = lists.last(paras);\n              var prevList = dom.isList(head.previousSibling) && head.previousSibling;\n              var nextList = dom.isList(last.nextSibling) && last.nextSibling;\n              var listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last); // P to LI\n\n              paras = paras.map(function (para) {\n                return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\n              }); // append to list(<ul>, <ol>)\n\n              dom.appendChildNodes(listNode, paras);\n\n              if (nextList) {\n                dom.appendChildNodes(listNode, lists.from(nextList.childNodes));\n                dom.remove(nextList);\n              }\n\n              return paras;\n            }\n            /**\n             * @method releaseList\n             *\n             * @param {Array[]} clustereds\n             * @param {Boolean} isEscapseToBody\n             * @return {Node[]}\n             */\n\n          }, {\n            key: \"releaseList\",\n            value: function releaseList(clustereds, isEscapseToBody) {\n              var _this4 = this;\n\n              var releasedParas = [];\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(clustereds, function (idx, paras) {\n                var head = lists.head(paras);\n                var last = lists.last(paras);\n                var headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) : head.parentNode;\n                var parentItem = headList.parentNode;\n\n                if (headList.parentNode.nodeName === 'LI') {\n                  paras.map(function (para) {\n                    var newList = _this4.findNextSiblings(para);\n\n                    if (parentItem.nextSibling) {\n                      parentItem.parentNode.insertBefore(para, parentItem.nextSibling);\n                    } else {\n                      parentItem.parentNode.appendChild(para);\n                    }\n\n                    if (newList.length) {\n                      _this4.wrapList(newList, headList.nodeName);\n\n                      para.appendChild(newList[0].parentNode);\n                    }\n                  });\n\n                  if (headList.children.length === 0) {\n                    parentItem.removeChild(headList);\n                  }\n\n                  if (parentItem.childNodes.length === 0) {\n                    parentItem.parentNode.removeChild(parentItem);\n                  }\n                } else {\n                  var lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {\n                    node: last.parentNode,\n                    offset: dom.position(last) + 1\n                  }, {\n                    isSkipPaddingBlankHTML: true\n                  }) : null;\n                  var middleList = dom.splitTree(headList, {\n                    node: head.parentNode,\n                    offset: dom.position(head)\n                  }, {\n                    isSkipPaddingBlankHTML: true\n                  });\n                  paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi) : lists.from(middleList.childNodes).filter(dom.isLi); // LI to P\n\n                  if (isEscapseToBody || !dom.isList(headList.parentNode)) {\n                    paras = paras.map(function (para) {\n                      return dom.replace(para, 'P');\n                    });\n                  }\n\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(lists.from(paras).reverse(), function (idx, para) {\n                    dom.insertAfter(para, headList);\n                  }); // remove empty lists\n\n                  var rootLists = lists.compact([headList, middleList, lastList]);\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(rootLists, function (idx, rootList) {\n                    var listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\n                    external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(listNodes.reverse(), function (idx, listNode) {\n                      if (!dom.nodeLength(listNode)) {\n                        dom.remove(listNode, true);\n                      }\n                    });\n                  });\n                }\n\n                releasedParas = releasedParas.concat(paras);\n              });\n              return releasedParas;\n            }\n            /**\n             * @method appendToPrevious\n             *\n             * Appends list to previous list item, if\n             * none exist it wraps the list in a new list item.\n             *\n             * @param {HTMLNode} ListItem\n             * @return {HTMLNode}\n             */\n\n          }, {\n            key: \"appendToPrevious\",\n            value: function appendToPrevious(node) {\n              return node.previousSibling ? dom.appendChildNodes(node.previousSibling, [node]) : this.wrapList([node], 'LI');\n            }\n            /**\n             * @method findList\n             *\n             * Finds an existing list in list item\n             *\n             * @param {HTMLNode} ListItem\n             * @return {Array[]}\n             */\n\n          }, {\n            key: \"findList\",\n            value: function findList(node) {\n              return node ? lists.find(node.children, function (child) {\n                return ['OL', 'UL'].indexOf(child.nodeName) > -1;\n              }) : null;\n            }\n            /**\n             * @method findNextSiblings\n             *\n             * Finds all list item siblings that follow it\n             *\n             * @param {HTMLNode} ListItem\n             * @return {HTMLNode}\n             */\n\n          }, {\n            key: \"findNextSiblings\",\n            value: function findNextSiblings(node) {\n              var siblings = [];\n\n              while (node.nextSibling) {\n                siblings.push(node.nextSibling);\n                node = node.nextSibling;\n              }\n\n              return siblings;\n            }\n          }]);\n          return Bullet;\n        }(); // CONCATENATED MODULE: ./src/js/base/editing/Typing.js\n\n\n        function Typing_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Typing_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Typing_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Typing_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Typing_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * @class editing.Typing\n         *\n         * Typing\n         *\n         */\n\n\n        var Typing_Typing = /*#__PURE__*/function () {\n          function Typing(context) {\n            Typing_classCallCheck(this, Typing); // a Bullet instance to toggle lists off\n\n            this.bullet = new Bullet_Bullet();\n            this.options = context.options;\n          }\n          /**\n           * insert tab\n           *\n           * @param {WrappedRange} rng\n           * @param {Number} tabsize\n           */\n\n\n          Typing_createClass(Typing, [{\n            key: \"insertTab\",\n            value: function insertTab(rng, tabsize) {\n              var tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\n              rng = rng.deleteContents();\n              rng.insertNode(tab, true);\n              rng = range.create(tab, tabsize);\n              rng.select();\n            }\n            /**\n             * insert paragraph\n             *\n             * @param {jQuery} $editable\n             * @param {WrappedRange} rng Can be used in unit tests to \"mock\" the range\n             *\n             * blockquoteBreakingLevel\n             *   0 - No break, the new paragraph remains inside the quote\n             *   1 - Break the first blockquote in the ancestors list\n             *   2 - Break all blockquotes, so that the new paragraph is not quoted (this is the default)\n             */\n\n          }, {\n            key: \"insertParagraph\",\n            value: function insertParagraph(editable, rng) {\n              rng = rng || range.create(editable); // deleteContents on range.\n\n              rng = rng.deleteContents(); // Wrap range if it needs to be wrapped by paragraph\n\n              rng = rng.wrapBodyInlineWithPara(); // finding paragraph\n\n              var splitRoot = dom.ancestor(rng.sc, dom.isPara);\n              var nextPara; // on paragraph: split paragraph\n\n              if (splitRoot) {\n                // if it is an empty line with li\n                if (dom.isLi(splitRoot) && (dom.isEmpty(splitRoot) || dom.deepestChildIsEmpty(splitRoot))) {\n                  // toggle UL/OL and escape\n                  this.bullet.toggleList(splitRoot.parentNode.nodeName);\n                  return;\n                } else {\n                  var blockquote = null;\n\n                  if (this.options.blockquoteBreakingLevel === 1) {\n                    blockquote = dom.ancestor(splitRoot, dom.isBlockquote);\n                  } else if (this.options.blockquoteBreakingLevel === 2) {\n                    blockquote = dom.lastAncestor(splitRoot, dom.isBlockquote);\n                  }\n\n                  if (blockquote) {\n                    // We're inside a blockquote and options ask us to break it\n                    nextPara = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(dom.emptyPara)[0]; // If the split is right before a <br>, remove it so that there's no \"empty line\"\n                    // after the split in the new blockquote created\n\n                    if (dom.isRightEdgePoint(rng.getStartPoint()) && dom.isBR(rng.sc.nextSibling)) {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(rng.sc.nextSibling).remove();\n                    }\n\n                    var split = dom.splitTree(blockquote, rng.getStartPoint(), {\n                      isDiscardEmptySplits: true\n                    });\n\n                    if (split) {\n                      split.parentNode.insertBefore(nextPara, split);\n                    } else {\n                      dom.insertAfter(nextPara, blockquote); // There's no split if we were at the end of the blockquote\n                    }\n                  } else {\n                    nextPara = dom.splitTree(splitRoot, rng.getStartPoint()); // not a blockquote, just insert the paragraph\n\n                    var emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\n                    emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\n                    external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(emptyAnchors, function (idx, anchor) {\n                      dom.remove(anchor);\n                    }); // replace empty heading, pre or custom-made styleTag with P tag\n\n                    if ((dom.isHeading(nextPara) || dom.isPre(nextPara) || dom.isCustomStyleTag(nextPara)) && dom.isEmpty(nextPara)) {\n                      nextPara = dom.replace(nextPara, 'p');\n                    }\n                  }\n                } // no paragraph: insert empty paragraph\n\n              } else {\n                var next = rng.sc.childNodes[rng.so];\n                nextPara = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(dom.emptyPara)[0];\n\n                if (next) {\n                  rng.sc.insertBefore(nextPara, next);\n                } else {\n                  rng.sc.appendChild(nextPara);\n                }\n              }\n\n              range.create(nextPara, 0).normalize().select().scrollIntoView(editable);\n            }\n          }]);\n          return Typing;\n        }(); // CONCATENATED MODULE: ./src/js/base/editing/Table.js\n\n\n        function Table_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Table_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Table_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Table_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Table_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * @class Create a virtual table to create what actions to do in change.\n         * @param {object} startPoint Cell selected to apply change.\n         * @param {enum} where  Where change will be applied Row or Col. Use enum: TableResultAction.where\n         * @param {enum} action Action to be applied. Use enum: TableResultAction.requestAction\n         * @param {object} domTable Dom element of table to make changes.\n         */\n\n\n        var TableResultAction = function TableResultAction(startPoint, where, action, domTable) {\n          var _startPoint = {\n            'colPos': 0,\n            'rowPos': 0\n          };\n          var _virtualTable = [];\n          var _actionCellList = []; /// ///////////////////////////////////////////\n          // Private functions\n          /// ///////////////////////////////////////////\n\n          /**\n           * Set the startPoint of action.\n           */\n\n          function setStartPoint() {\n            if (!startPoint || !startPoint.tagName || startPoint.tagName.toLowerCase() !== 'td' && startPoint.tagName.toLowerCase() !== 'th') {\n              // Impossible to identify start Cell point\n              return;\n            }\n\n            _startPoint.colPos = startPoint.cellIndex;\n\n            if (!startPoint.parentElement || !startPoint.parentElement.tagName || startPoint.parentElement.tagName.toLowerCase() !== 'tr') {\n              // Impossible to identify start Row point\n              return;\n            }\n\n            _startPoint.rowPos = startPoint.parentElement.rowIndex;\n          }\n          /**\n           * Define virtual table position info object.\n           *\n           * @param {int} rowIndex Index position in line of virtual table.\n           * @param {int} cellIndex Index position in column of virtual table.\n           * @param {object} baseRow Row affected by this position.\n           * @param {object} baseCell Cell affected by this position.\n           * @param {bool} isSpan Inform if it is an span cell/row.\n           */\n\n\n          function setVirtualTablePosition(rowIndex, cellIndex, baseRow, baseCell, isRowSpan, isColSpan, isVirtualCell) {\n            var objPosition = {\n              'baseRow': baseRow,\n              'baseCell': baseCell,\n              'isRowSpan': isRowSpan,\n              'isColSpan': isColSpan,\n              'isVirtual': isVirtualCell\n            };\n\n            if (!_virtualTable[rowIndex]) {\n              _virtualTable[rowIndex] = [];\n            }\n\n            _virtualTable[rowIndex][cellIndex] = objPosition;\n          }\n          /**\n           * Create action cell object.\n           *\n           * @param {object} virtualTableCellObj Object of specific position on virtual table.\n           * @param {enum} resultAction Action to be applied in that item.\n           */\n\n\n          function getActionCell(virtualTableCellObj, resultAction, virtualRowPosition, virtualColPosition) {\n            return {\n              'baseCell': virtualTableCellObj.baseCell,\n              'action': resultAction,\n              'virtualTable': {\n                'rowIndex': virtualRowPosition,\n                'cellIndex': virtualColPosition\n              }\n            };\n          }\n          /**\n           * Recover free index of row to append Cell.\n           *\n           * @param {int} rowIndex Index of row to find free space.\n           * @param {int} cellIndex Index of cell to find free space in table.\n           */\n\n\n          function recoverCellIndex(rowIndex, cellIndex) {\n            if (!_virtualTable[rowIndex]) {\n              return cellIndex;\n            }\n\n            if (!_virtualTable[rowIndex][cellIndex]) {\n              return cellIndex;\n            }\n\n            var newCellIndex = cellIndex;\n\n            while (_virtualTable[rowIndex][newCellIndex]) {\n              newCellIndex++;\n\n              if (!_virtualTable[rowIndex][newCellIndex]) {\n                return newCellIndex;\n              }\n            }\n          }\n          /**\n           * Recover info about row and cell and add information to virtual table.\n           *\n           * @param {object} row Row to recover information.\n           * @param {object} cell Cell to recover information.\n           */\n\n\n          function addCellInfoToVirtual(row, cell) {\n            var cellIndex = recoverCellIndex(row.rowIndex, cell.cellIndex);\n            var cellHasColspan = cell.colSpan > 1;\n            var cellHasRowspan = cell.rowSpan > 1;\n            var isThisSelectedCell = row.rowIndex === _startPoint.rowPos && cell.cellIndex === _startPoint.colPos;\n            setVirtualTablePosition(row.rowIndex, cellIndex, row, cell, cellHasRowspan, cellHasColspan, false); // Add span rows to virtual Table.\n\n            var rowspanNumber = cell.attributes.rowSpan ? parseInt(cell.attributes.rowSpan.value, 10) : 0;\n\n            if (rowspanNumber > 1) {\n              for (var rp = 1; rp < rowspanNumber; rp++) {\n                var rowspanIndex = row.rowIndex + rp;\n                adjustStartPoint(rowspanIndex, cellIndex, cell, isThisSelectedCell);\n                setVirtualTablePosition(rowspanIndex, cellIndex, row, cell, true, cellHasColspan, true);\n              }\n            } // Add span cols to virtual table.\n\n\n            var colspanNumber = cell.attributes.colSpan ? parseInt(cell.attributes.colSpan.value, 10) : 0;\n\n            if (colspanNumber > 1) {\n              for (var cp = 1; cp < colspanNumber; cp++) {\n                var cellspanIndex = recoverCellIndex(row.rowIndex, cellIndex + cp);\n                adjustStartPoint(row.rowIndex, cellspanIndex, cell, isThisSelectedCell);\n                setVirtualTablePosition(row.rowIndex, cellspanIndex, row, cell, cellHasRowspan, true, true);\n              }\n            }\n          }\n          /**\n           * Process validation and adjust of start point if needed\n           *\n           * @param {int} rowIndex\n           * @param {int} cellIndex\n           * @param {object} cell\n           * @param {bool} isSelectedCell\n           */\n\n\n          function adjustStartPoint(rowIndex, cellIndex, cell, isSelectedCell) {\n            if (rowIndex === _startPoint.rowPos && _startPoint.colPos >= cell.cellIndex && cell.cellIndex <= cellIndex && !isSelectedCell) {\n              _startPoint.colPos++;\n            }\n          }\n          /**\n           * Create virtual table of cells with all cells, including span cells.\n           */\n\n\n          function createVirtualTable() {\n            var rows = domTable.rows;\n\n            for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n              var cells = rows[rowIndex].cells;\n\n              for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n                addCellInfoToVirtual(rows[rowIndex], cells[cellIndex]);\n              }\n            }\n          }\n          /**\n           * Get action to be applied on the cell.\n           *\n           * @param {object} cell virtual table cell to apply action\n           */\n\n\n          function getDeleteResultActionToCell(cell) {\n            switch (where) {\n              case TableResultAction.where.Column:\n                if (cell.isColSpan) {\n                  return TableResultAction.resultAction.SubtractSpanCount;\n                }\n\n                break;\n\n              case TableResultAction.where.Row:\n                if (!cell.isVirtual && cell.isRowSpan) {\n                  return TableResultAction.resultAction.AddCell;\n                } else if (cell.isRowSpan) {\n                  return TableResultAction.resultAction.SubtractSpanCount;\n                }\n\n                break;\n            }\n\n            return TableResultAction.resultAction.RemoveCell;\n          }\n          /**\n           * Get action to be applied on the cell.\n           *\n           * @param {object} cell virtual table cell to apply action\n           */\n\n\n          function getAddResultActionToCell(cell) {\n            switch (where) {\n              case TableResultAction.where.Column:\n                if (cell.isColSpan) {\n                  return TableResultAction.resultAction.SumSpanCount;\n                } else if (cell.isRowSpan && cell.isVirtual) {\n                  return TableResultAction.resultAction.Ignore;\n                }\n\n                break;\n\n              case TableResultAction.where.Row:\n                if (cell.isRowSpan) {\n                  return TableResultAction.resultAction.SumSpanCount;\n                } else if (cell.isColSpan && cell.isVirtual) {\n                  return TableResultAction.resultAction.Ignore;\n                }\n\n                break;\n            }\n\n            return TableResultAction.resultAction.AddCell;\n          }\n\n          function init() {\n            setStartPoint();\n            createVirtualTable();\n          } /// ///////////////////////////////////////////\n          // Public functions\n          /// ///////////////////////////////////////////\n\n          /**\n           * Recover array os what to do in table.\n           */\n\n\n          this.getActionList = function () {\n            var fixedRow = where === TableResultAction.where.Row ? _startPoint.rowPos : -1;\n            var fixedCol = where === TableResultAction.where.Column ? _startPoint.colPos : -1;\n            var actualPosition = 0;\n            var canContinue = true;\n\n            while (canContinue) {\n              var rowPosition = fixedRow >= 0 ? fixedRow : actualPosition;\n              var colPosition = fixedCol >= 0 ? fixedCol : actualPosition;\n              var row = _virtualTable[rowPosition];\n\n              if (!row) {\n                canContinue = false;\n                return _actionCellList;\n              }\n\n              var cell = row[colPosition];\n\n              if (!cell) {\n                canContinue = false;\n                return _actionCellList;\n              } // Define action to be applied in this cell\n\n\n              var resultAction = TableResultAction.resultAction.Ignore;\n\n              switch (action) {\n                case TableResultAction.requestAction.Add:\n                  resultAction = getAddResultActionToCell(cell);\n                  break;\n\n                case TableResultAction.requestAction.Delete:\n                  resultAction = getDeleteResultActionToCell(cell);\n                  break;\n              }\n\n              _actionCellList.push(getActionCell(cell, resultAction, rowPosition, colPosition));\n\n              actualPosition++;\n            }\n\n            return _actionCellList;\n          };\n\n          init();\n        };\n        /**\n        *\n        * Where action occours enum.\n        */\n\n\n        TableResultAction.where = {\n          'Row': 0,\n          'Column': 1\n        };\n        /**\n        *\n        * Requested action to apply enum.\n        */\n\n        TableResultAction.requestAction = {\n          'Add': 0,\n          'Delete': 1\n        };\n        /**\n        *\n        * Result action to be executed enum.\n        */\n\n        TableResultAction.resultAction = {\n          'Ignore': 0,\n          'SubtractSpanCount': 1,\n          'RemoveCell': 2,\n          'AddCell': 3,\n          'SumSpanCount': 4\n        };\n        /**\n         *\n         * @class editing.Table\n         *\n         * Table\n         *\n         */\n\n        var Table_Table = /*#__PURE__*/function () {\n          function Table() {\n            Table_classCallCheck(this, Table);\n          }\n\n          Table_createClass(Table, [{\n            key: \"tab\",\n\n            /**\n             * handle tab key\n             *\n             * @param {WrappedRange} rng\n             * @param {Boolean} isShift\n             */\n            value: function tab(rng, isShift) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              var table = dom.ancestor(cell, dom.isTable);\n              var cells = dom.listDescendant(table, dom.isCell);\n              var nextCell = lists[isShift ? 'prev' : 'next'](cells, cell);\n\n              if (nextCell) {\n                range.create(nextCell, 0).select();\n              }\n            }\n            /**\n             * Add a new row\n             *\n             * @param {WrappedRange} rng\n             * @param {String} position (top/bottom)\n             * @return {Node}\n             */\n\n          }, {\n            key: \"addRow\",\n            value: function addRow(rng, position) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              var currentTr = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell).closest('tr');\n              var trAttributes = this.recoverAttributes(currentTr);\n              var html = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<tr' + trAttributes + '></tr>');\n              var vTable = new TableResultAction(cell, TableResultAction.where.Row, TableResultAction.requestAction.Add, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(currentTr).closest('table')[0]);\n              var actions = vTable.getActionList();\n\n              for (var idCell = 0; idCell < actions.length; idCell++) {\n                var currentCell = actions[idCell];\n                var tdAttributes = this.recoverAttributes(currentCell.baseCell);\n\n                switch (currentCell.action) {\n                  case TableResultAction.resultAction.AddCell:\n                    html.append('<td' + tdAttributes + '>' + dom.blank + '</td>');\n                    break;\n\n                  case TableResultAction.resultAction.SumSpanCount:\n                    {\n                      if (position === 'top') {\n                        var baseCellTr = currentCell.baseCell.parent;\n                        var isTopFromRowSpan = (!baseCellTr ? 0 : currentCell.baseCell.closest('tr').rowIndex) <= currentTr[0].rowIndex;\n\n                        if (isTopFromRowSpan) {\n                          var newTd = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div></div>').append(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<td' + tdAttributes + '>' + dom.blank + '</td>').removeAttr('rowspan')).html();\n                          html.append(newTd);\n                          break;\n                        }\n                      }\n\n                      var rowspanNumber = parseInt(currentCell.baseCell.rowSpan, 10);\n                      rowspanNumber++;\n                      currentCell.baseCell.setAttribute('rowSpan', rowspanNumber);\n                    }\n                    break;\n                }\n              }\n\n              if (position === 'top') {\n                currentTr.before(html);\n              } else {\n                var cellHasRowspan = cell.rowSpan > 1;\n\n                if (cellHasRowspan) {\n                  var lastTrIndex = currentTr[0].rowIndex + (cell.rowSpan - 2);\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(currentTr).parent().find('tr')[lastTrIndex]).after(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(html));\n                  return;\n                }\n\n                currentTr.after(html);\n              }\n            }\n            /**\n             * Add a new col\n             *\n             * @param {WrappedRange} rng\n             * @param {String} position (left/right)\n             * @return {Node}\n             */\n\n          }, {\n            key: \"addCol\",\n            value: function addCol(rng, position) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              var row = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell).closest('tr');\n              var rowsGroup = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(row).siblings();\n              rowsGroup.push(row);\n              var vTable = new TableResultAction(cell, TableResultAction.where.Column, TableResultAction.requestAction.Add, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(row).closest('table')[0]);\n              var actions = vTable.getActionList();\n\n              for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n                var currentCell = actions[actionIndex];\n                var tdAttributes = this.recoverAttributes(currentCell.baseCell);\n\n                switch (currentCell.action) {\n                  case TableResultAction.resultAction.AddCell:\n                    if (position === 'right') {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(currentCell.baseCell).after('<td' + tdAttributes + '>' + dom.blank + '</td>');\n                    } else {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n                    }\n\n                    break;\n\n                  case TableResultAction.resultAction.SumSpanCount:\n                    if (position === 'right') {\n                      var colspanNumber = parseInt(currentCell.baseCell.colSpan, 10);\n                      colspanNumber++;\n                      currentCell.baseCell.setAttribute('colSpan', colspanNumber);\n                    } else {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n                    }\n\n                    break;\n                }\n              }\n            }\n            /*\n            * Copy attributes from element.\n            *\n            * @param {object} Element to recover attributes.\n            * @return {string} Copied string elements.\n            */\n\n          }, {\n            key: \"recoverAttributes\",\n            value: function recoverAttributes(el) {\n              var resultStr = '';\n\n              if (!el) {\n                return resultStr;\n              }\n\n              var attrList = el.attributes || [];\n\n              for (var i = 0; i < attrList.length; i++) {\n                if (attrList[i].name.toLowerCase() === 'id') {\n                  continue;\n                }\n\n                if (attrList[i].specified) {\n                  resultStr += ' ' + attrList[i].name + '=\\'' + attrList[i].value + '\\'';\n                }\n              }\n\n              return resultStr;\n            }\n            /**\n             * Delete current row\n             *\n             * @param {WrappedRange} rng\n             * @return {Node}\n             */\n\n          }, {\n            key: \"deleteRow\",\n            value: function deleteRow(rng) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              var row = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell).closest('tr');\n              var cellPos = row.children('td, th').index(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell));\n              var rowPos = row[0].rowIndex;\n              var vTable = new TableResultAction(cell, TableResultAction.where.Row, TableResultAction.requestAction.Delete, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(row).closest('table')[0]);\n              var actions = vTable.getActionList();\n\n              for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n                if (!actions[actionIndex]) {\n                  continue;\n                }\n\n                var baseCell = actions[actionIndex].baseCell;\n                var virtualPosition = actions[actionIndex].virtualTable;\n                var hasRowspan = baseCell.rowSpan && baseCell.rowSpan > 1;\n                var rowspanNumber = hasRowspan ? parseInt(baseCell.rowSpan, 10) : 0;\n\n                switch (actions[actionIndex].action) {\n                  case TableResultAction.resultAction.Ignore:\n                    continue;\n\n                  case TableResultAction.resultAction.AddCell:\n                    {\n                      var nextRow = row.next('tr')[0];\n\n                      if (!nextRow) {\n                        continue;\n                      }\n\n                      var cloneRow = row[0].cells[cellPos];\n\n                      if (hasRowspan) {\n                        if (rowspanNumber > 2) {\n                          rowspanNumber--;\n                          nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                          nextRow.cells[cellPos].setAttribute('rowSpan', rowspanNumber);\n                          nextRow.cells[cellPos].innerHTML = '';\n                        } else if (rowspanNumber === 2) {\n                          nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                          nextRow.cells[cellPos].removeAttribute('rowSpan');\n                          nextRow.cells[cellPos].innerHTML = '';\n                        }\n                      }\n                    }\n                    continue;\n\n                  case TableResultAction.resultAction.SubtractSpanCount:\n                    if (hasRowspan) {\n                      if (rowspanNumber > 2) {\n                        rowspanNumber--;\n                        baseCell.setAttribute('rowSpan', rowspanNumber);\n\n                        if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) {\n                          baseCell.innerHTML = '';\n                        }\n                      } else if (rowspanNumber === 2) {\n                        baseCell.removeAttribute('rowSpan');\n\n                        if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) {\n                          baseCell.innerHTML = '';\n                        }\n                      }\n                    }\n\n                    continue;\n\n                  case TableResultAction.resultAction.RemoveCell:\n                    // Do not need remove cell because row will be deleted.\n                    continue;\n                }\n              }\n\n              row.remove();\n            }\n            /**\n             * Delete current col\n             *\n             * @param {WrappedRange} rng\n             * @return {Node}\n             */\n\n          }, {\n            key: \"deleteCol\",\n            value: function deleteCol(rng) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              var row = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell).closest('tr');\n              var cellPos = row.children('td, th').index(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell));\n              var vTable = new TableResultAction(cell, TableResultAction.where.Column, TableResultAction.requestAction.Delete, external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(row).closest('table')[0]);\n              var actions = vTable.getActionList();\n\n              for (var actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n                if (!actions[actionIndex]) {\n                  continue;\n                }\n\n                switch (actions[actionIndex].action) {\n                  case TableResultAction.resultAction.Ignore:\n                    continue;\n\n                  case TableResultAction.resultAction.SubtractSpanCount:\n                    {\n                      var baseCell = actions[actionIndex].baseCell;\n                      var hasColspan = baseCell.colSpan && baseCell.colSpan > 1;\n\n                      if (hasColspan) {\n                        var colspanNumber = baseCell.colSpan ? parseInt(baseCell.colSpan, 10) : 0;\n\n                        if (colspanNumber > 2) {\n                          colspanNumber--;\n                          baseCell.setAttribute('colSpan', colspanNumber);\n\n                          if (baseCell.cellIndex === cellPos) {\n                            baseCell.innerHTML = '';\n                          }\n                        } else if (colspanNumber === 2) {\n                          baseCell.removeAttribute('colSpan');\n\n                          if (baseCell.cellIndex === cellPos) {\n                            baseCell.innerHTML = '';\n                          }\n                        }\n                      }\n                    }\n                    continue;\n\n                  case TableResultAction.resultAction.RemoveCell:\n                    dom.remove(actions[actionIndex].baseCell, true);\n                    continue;\n                }\n              }\n            }\n            /**\n             * create empty table element\n             *\n             * @param {Number} rowCount\n             * @param {Number} colCount\n             * @return {Node}\n             */\n\n          }, {\n            key: \"createTable\",\n            value: function createTable(colCount, rowCount, options) {\n              var tds = [];\n              var tdHTML;\n\n              for (var idxCol = 0; idxCol < colCount; idxCol++) {\n                tds.push('<td>' + dom.blank + '</td>');\n              }\n\n              tdHTML = tds.join('');\n              var trs = [];\n              var trHTML;\n\n              for (var idxRow = 0; idxRow < rowCount; idxRow++) {\n                trs.push('<tr>' + tdHTML + '</tr>');\n              }\n\n              trHTML = trs.join('');\n              var $table = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<table>' + trHTML + '</table>');\n\n              if (options && options.tableClassName) {\n                $table.addClass(options.tableClassName);\n              }\n\n              return $table[0];\n            }\n            /**\n             * Delete current table\n             *\n             * @param {WrappedRange} rng\n             * @return {Node}\n             */\n\n          }, {\n            key: \"deleteTable\",\n            value: function deleteTable(rng) {\n              var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(cell).closest('table').remove();\n            }\n          }]);\n          return Table;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Editor.js\n\n\n        function Editor_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Editor_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Editor_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Editor_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Editor_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var KEY_BOGUS = 'bogus';\n        /**\n         * @class Editor\n         */\n\n        var Editor_Editor = /*#__PURE__*/function () {\n          function Editor(context) {\n            var _this = this;\n\n            Editor_classCallCheck(this, Editor);\n            this.context = context;\n            this.$note = context.layoutInfo.note;\n            this.$editor = context.layoutInfo.editor;\n            this.$editable = context.layoutInfo.editable;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n            this.editable = this.$editable[0];\n            this.lastRange = null;\n            this.snapshot = null;\n            this.style = new Style_Style();\n            this.table = new Table_Table();\n            this.typing = new Typing_Typing(context);\n            this.bullet = new Bullet_Bullet();\n            this.history = new History_History(context);\n            this.context.memo('help.escape', this.lang.help.escape);\n            this.context.memo('help.undo', this.lang.help.undo);\n            this.context.memo('help.redo', this.lang.help.redo);\n            this.context.memo('help.tab', this.lang.help.tab);\n            this.context.memo('help.untab', this.lang.help.untab);\n            this.context.memo('help.insertParagraph', this.lang.help.insertParagraph);\n            this.context.memo('help.insertOrderedList', this.lang.help.insertOrderedList);\n            this.context.memo('help.insertUnorderedList', this.lang.help.insertUnorderedList);\n            this.context.memo('help.indent', this.lang.help.indent);\n            this.context.memo('help.outdent', this.lang.help.outdent);\n            this.context.memo('help.formatPara', this.lang.help.formatPara);\n            this.context.memo('help.insertHorizontalRule', this.lang.help.insertHorizontalRule);\n            this.context.memo('help.fontName', this.lang.help.fontName); // native commands(with execCommand), generate function for execCommand\n\n            var commands = ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'formatBlock', 'removeFormat', 'backColor'];\n\n            for (var idx = 0, len = commands.length; idx < len; idx++) {\n              this[commands[idx]] = function (sCmd) {\n                return function (value) {\n                  _this.beforeCommand();\n\n                  document.execCommand(sCmd, false, value);\n\n                  _this.afterCommand(true);\n                };\n              }(commands[idx]);\n\n              this.context.memo('help.' + commands[idx], this.lang.help[commands[idx]]);\n            }\n\n            this.fontName = this.wrapCommand(function (value) {\n              return _this.fontStyling('font-family', env.validFontName(value));\n            });\n            this.fontSize = this.wrapCommand(function (value) {\n              var unit = _this.currentStyle()['font-size-unit'];\n\n              return _this.fontStyling('font-size', value + unit);\n            });\n            this.fontSizeUnit = this.wrapCommand(function (value) {\n              var size = _this.currentStyle()['font-size'];\n\n              return _this.fontStyling('font-size', size + value);\n            });\n\n            for (var _idx = 1; _idx <= 6; _idx++) {\n              this['formatH' + _idx] = function (idx) {\n                return function () {\n                  _this.formatBlock('H' + idx);\n                };\n              }(_idx);\n\n              this.context.memo('help.formatH' + _idx, this.lang.help['formatH' + _idx]);\n            }\n\n            this.insertParagraph = this.wrapCommand(function () {\n              _this.typing.insertParagraph(_this.editable);\n            });\n            this.insertOrderedList = this.wrapCommand(function () {\n              _this.bullet.insertOrderedList(_this.editable);\n            });\n            this.insertUnorderedList = this.wrapCommand(function () {\n              _this.bullet.insertUnorderedList(_this.editable);\n            });\n            this.indent = this.wrapCommand(function () {\n              _this.bullet.indent(_this.editable);\n            });\n            this.outdent = this.wrapCommand(function () {\n              _this.bullet.outdent(_this.editable);\n            });\n            /**\n             * insertNode\n             * insert node\n             * @param {Node} node\n             */\n\n            this.insertNode = this.wrapCommand(function (node) {\n              if (_this.isLimited(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(node).text().length)) {\n                return;\n              }\n\n              var rng = _this.getLastRange();\n\n              rng.insertNode(node);\n\n              _this.setLastRange(range.createFromNodeAfter(node).select());\n            });\n            /**\n             * insert text\n             * @param {String} text\n             */\n\n            this.insertText = this.wrapCommand(function (text) {\n              if (_this.isLimited(text.length)) {\n                return;\n              }\n\n              var rng = _this.getLastRange();\n\n              var textNode = rng.insertNode(dom.createText(text));\n\n              _this.setLastRange(range.create(textNode, dom.nodeLength(textNode)).select());\n            });\n            /**\n             * paste HTML\n             * @param {String} markup\n             */\n\n            this.pasteHTML = this.wrapCommand(function (markup) {\n              if (_this.isLimited(markup.length)) {\n                return;\n              }\n\n              markup = _this.context.invoke('codeview.purify', markup);\n\n              var contents = _this.getLastRange().pasteHTML(markup);\n\n              _this.setLastRange(range.createFromNodeAfter(lists.last(contents)).select());\n            });\n            /**\n             * formatBlock\n             *\n             * @param {String} tagName\n             */\n\n            this.formatBlock = this.wrapCommand(function (tagName, $target) {\n              var onApplyCustomStyle = _this.options.callbacks.onApplyCustomStyle;\n\n              if (onApplyCustomStyle) {\n                onApplyCustomStyle.call(_this, $target, _this.context, _this.onFormatBlock);\n              } else {\n                _this.onFormatBlock(tagName, $target);\n              }\n            });\n            /**\n             * insert horizontal rule\n             */\n\n            this.insertHorizontalRule = this.wrapCommand(function () {\n              var hrNode = _this.getLastRange().insertNode(dom.create('HR'));\n\n              if (hrNode.nextSibling) {\n                _this.setLastRange(range.create(hrNode.nextSibling, 0).normalize().select());\n              }\n            });\n            /**\n             * lineHeight\n             * @param {String} value\n             */\n\n            this.lineHeight = this.wrapCommand(function (value) {\n              _this.style.stylePara(_this.getLastRange(), {\n                lineHeight: value\n              });\n            });\n            /**\n             * create link (command)\n             *\n             * @param {Object} linkInfo\n             */\n\n            this.createLink = this.wrapCommand(function (linkInfo) {\n              var linkUrl = linkInfo.url;\n              var linkText = linkInfo.text;\n              var isNewWindow = linkInfo.isNewWindow;\n              var checkProtocol = linkInfo.checkProtocol;\n\n              var rng = linkInfo.range || _this.getLastRange();\n\n              var additionalTextLength = linkText.length - rng.toString().length;\n\n              if (additionalTextLength > 0 && _this.isLimited(additionalTextLength)) {\n                return;\n              }\n\n              var isTextChanged = rng.toString() !== linkText; // handle spaced urls from input\n\n              if (typeof linkUrl === 'string') {\n                linkUrl = linkUrl.trim();\n              }\n\n              if (_this.options.onCreateLink) {\n                linkUrl = _this.options.onCreateLink(linkUrl);\n              } else if (checkProtocol) {\n                // if url doesn't have any protocol and not even a relative or a label, use http:// as default\n                linkUrl = /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(linkUrl) ? linkUrl : _this.options.defaultProtocol + linkUrl;\n              }\n\n              var anchors = [];\n\n              if (isTextChanged) {\n                rng = rng.deleteContents();\n                var anchor = rng.insertNode(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<A>' + linkText + '</A>')[0]);\n                anchors.push(anchor);\n              } else {\n                anchors = _this.style.styleNodes(rng, {\n                  nodeName: 'A',\n                  expandClosestSibling: true,\n                  onlyPartialContains: true\n                });\n              }\n\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(anchors, function (idx, anchor) {\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(anchor).attr('href', linkUrl);\n\n                if (isNewWindow) {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(anchor).attr('target', '_blank');\n                } else {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(anchor).removeAttr('target');\n                }\n              });\n\n              _this.setLastRange(_this.createRangeFromList(anchors).select());\n            });\n            /**\n             * setting color\n             *\n             * @param {Object} sObjColor  color code\n             * @param {String} sObjColor.foreColor foreground color\n             * @param {String} sObjColor.backColor background color\n             */\n\n            this.color = this.wrapCommand(function (colorInfo) {\n              var foreColor = colorInfo.foreColor;\n              var backColor = colorInfo.backColor;\n\n              if (foreColor) {\n                document.execCommand('foreColor', false, foreColor);\n              }\n\n              if (backColor) {\n                document.execCommand('backColor', false, backColor);\n              }\n            });\n            /**\n             * Set foreground color\n             *\n             * @param {String} colorCode foreground color code\n             */\n\n            this.foreColor = this.wrapCommand(function (colorInfo) {\n              document.execCommand('foreColor', false, colorInfo);\n            });\n            /**\n             * insert Table\n             *\n             * @param {String} dimension of table (ex : \"5x5\")\n             */\n\n            this.insertTable = this.wrapCommand(function (dim) {\n              var dimension = dim.split('x');\n\n              var rng = _this.getLastRange().deleteContents();\n\n              rng.insertNode(_this.table.createTable(dimension[0], dimension[1], _this.options));\n            });\n            /**\n             * remove media object and Figure Elements if media object is img with Figure.\n             */\n\n            this.removeMedia = this.wrapCommand(function () {\n              var $target = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(_this.restoreTarget()).parent();\n\n              if ($target.closest('figure').length) {\n                $target.closest('figure').remove();\n              } else {\n                $target = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(_this.restoreTarget()).detach();\n              }\n\n              _this.context.triggerEvent('media.delete', $target, _this.$editable);\n            });\n            /**\n             * float me\n             *\n             * @param {String} value\n             */\n\n            this.floatMe = this.wrapCommand(function (value) {\n              var $target = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(_this.restoreTarget());\n              $target.toggleClass('note-float-left', value === 'left');\n              $target.toggleClass('note-float-right', value === 'right');\n              $target.css('float', value === 'none' ? '' : value);\n            });\n            /**\n             * resize overlay element\n             * @param {String} value\n             */\n\n            this.resize = this.wrapCommand(function (value) {\n              var $target = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(_this.restoreTarget());\n              value = parseFloat(value);\n\n              if (value === 0) {\n                $target.css('width', '');\n              } else {\n                $target.css({\n                  width: value * 100 + '%',\n                  height: ''\n                });\n              }\n            });\n          }\n\n          Editor_createClass(Editor, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var _this2 = this; // bind custom events\n\n\n              this.$editable.on('keydown', function (event) {\n                if (event.keyCode === core_key.code.ENTER) {\n                  _this2.context.triggerEvent('enter', event);\n                }\n\n                _this2.context.triggerEvent('keydown', event); // keep a snapshot to limit text on input event\n\n\n                _this2.snapshot = _this2.history.makeSnapshot();\n                _this2.hasKeyShortCut = false;\n\n                if (!event.isDefaultPrevented()) {\n                  if (_this2.options.shortcuts) {\n                    _this2.hasKeyShortCut = _this2.handleKeyMap(event);\n                  } else {\n                    _this2.preventDefaultEditableShortCuts(event);\n                  }\n                }\n\n                if (_this2.isLimited(1, event)) {\n                  var lastRange = _this2.getLastRange();\n\n                  if (lastRange.eo - lastRange.so === 0) {\n                    return false;\n                  }\n                }\n\n                _this2.setLastRange(); // record undo in the key event except keyMap.\n\n\n                if (_this2.options.recordEveryKeystroke) {\n                  if (_this2.hasKeyShortCut === false) {\n                    _this2.history.recordUndo();\n                  }\n                }\n              }).on('keyup', function (event) {\n                _this2.setLastRange();\n\n                _this2.context.triggerEvent('keyup', event);\n              }).on('focus', function (event) {\n                _this2.setLastRange();\n\n                _this2.context.triggerEvent('focus', event);\n              }).on('blur', function (event) {\n                _this2.context.triggerEvent('blur', event);\n              }).on('mousedown', function (event) {\n                _this2.context.triggerEvent('mousedown', event);\n              }).on('mouseup', function (event) {\n                _this2.setLastRange();\n\n                _this2.history.recordUndo();\n\n                _this2.context.triggerEvent('mouseup', event);\n              }).on('scroll', function (event) {\n                _this2.context.triggerEvent('scroll', event);\n              }).on('paste', function (event) {\n                _this2.setLastRange();\n\n                _this2.context.triggerEvent('paste', event);\n              }).on('input', function () {\n                // To limit composition characters (e.g. Korean)\n                if (_this2.isLimited(0) && _this2.snapshot) {\n                  _this2.history.applySnapshot(_this2.snapshot);\n                }\n              });\n              this.$editable.attr('spellcheck', this.options.spellCheck);\n              this.$editable.attr('autocorrect', this.options.spellCheck);\n\n              if (this.options.disableGrammar) {\n                this.$editable.attr('data-gramm', false);\n              } // init content before set event\n\n\n              this.$editable.html(dom.html(this.$note) || dom.emptyPara);\n              this.$editable.on(env.inputEventName, func.debounce(function () {\n                _this2.context.triggerEvent('change', _this2.$editable.html(), _this2.$editable);\n              }, 10));\n              this.$editable.on('focusin', function (event) {\n                _this2.context.triggerEvent('focusin', event);\n              }).on('focusout', function (event) {\n                _this2.context.triggerEvent('focusout', event);\n              });\n\n              if (this.options.airMode) {\n                if (this.options.overrideContextMenu) {\n                  this.$editor.on('contextmenu', function (event) {\n                    _this2.context.triggerEvent('contextmenu', event);\n\n                    return false;\n                  });\n                }\n              } else {\n                if (this.options.width) {\n                  this.$editor.outerWidth(this.options.width);\n                }\n\n                if (this.options.height) {\n                  this.$editable.outerHeight(this.options.height);\n                }\n\n                if (this.options.maxHeight) {\n                  this.$editable.css('max-height', this.options.maxHeight);\n                }\n\n                if (this.options.minHeight) {\n                  this.$editable.css('min-height', this.options.minHeight);\n                }\n              }\n\n              this.history.recordUndo();\n              this.setLastRange();\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$editable.off();\n            }\n          }, {\n            key: \"handleKeyMap\",\n            value: function handleKeyMap(event) {\n              var keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n              var keys = [];\n\n              if (event.metaKey) {\n                keys.push('CMD');\n              }\n\n              if (event.ctrlKey && !event.altKey) {\n                keys.push('CTRL');\n              }\n\n              if (event.shiftKey) {\n                keys.push('SHIFT');\n              }\n\n              var keyName = core_key.nameFromCode[event.keyCode];\n\n              if (keyName) {\n                keys.push(keyName);\n              }\n\n              var eventName = keyMap[keys.join('+')];\n\n              if (keyName === 'TAB' && !this.options.tabDisable) {\n                this.afterCommand();\n              } else if (eventName) {\n                if (this.context.invoke(eventName) !== false) {\n                  event.preventDefault(); // if keyMap action was invoked\n\n                  return true;\n                }\n              } else if (core_key.isEdit(event.keyCode)) {\n                this.afterCommand();\n              }\n\n              return false;\n            }\n          }, {\n            key: \"preventDefaultEditableShortCuts\",\n            value: function preventDefaultEditableShortCuts(event) {\n              // B(Bold, 66) / I(Italic, 73) / U(Underline, 85)\n              if ((event.ctrlKey || event.metaKey) && lists.contains([66, 73, 85], event.keyCode)) {\n                event.preventDefault();\n              }\n            }\n          }, {\n            key: \"isLimited\",\n            value: function isLimited(pad, event) {\n              pad = pad || 0;\n\n              if (typeof event !== 'undefined') {\n                if (core_key.isMove(event.keyCode) || core_key.isNavigation(event.keyCode) || event.ctrlKey || event.metaKey || lists.contains([core_key.code.BACKSPACE, core_key.code.DELETE], event.keyCode)) {\n                  return false;\n                }\n              }\n\n              if (this.options.maxTextLength > 0) {\n                if (this.$editable.text().length + pad > this.options.maxTextLength) {\n                  return true;\n                }\n              }\n\n              return false;\n            }\n            /**\n             * create range\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"createRange\",\n            value: function createRange() {\n              this.focus();\n              this.setLastRange();\n              return this.getLastRange();\n            }\n            /**\n             * create a new range from the list of elements\n             *\n             * @param {list} dom element list\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"createRangeFromList\",\n            value: function createRangeFromList(lst) {\n              var startRange = range.createFromNodeBefore(lists.head(lst));\n              var startPoint = startRange.getStartPoint();\n              var endRange = range.createFromNodeAfter(lists.last(lst));\n              var endPoint = endRange.getEndPoint();\n              return range.create(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\n            }\n            /**\n             * set the last range\n             *\n             * if given rng is exist, set rng as the last range\n             * or create a new range at the end of the document\n             *\n             * @param {WrappedRange} rng\n             */\n\n          }, {\n            key: \"setLastRange\",\n            value: function setLastRange(rng) {\n              if (rng) {\n                this.lastRange = rng;\n              } else {\n                this.lastRange = range.create(this.editable);\n\n                if (external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.lastRange.sc).closest('.note-editable').length === 0) {\n                  this.lastRange = range.createFromBodyElement(this.editable);\n                }\n              }\n            }\n            /**\n             * get the last range\n             *\n             * if there is a saved last range, return it\n             * or create a new range and return it\n             *\n             * @return {WrappedRange}\n             */\n\n          }, {\n            key: \"getLastRange\",\n            value: function getLastRange() {\n              if (!this.lastRange) {\n                this.setLastRange();\n              }\n\n              return this.lastRange;\n            }\n            /**\n             * saveRange\n             *\n             * save current range\n             *\n             * @param {Boolean} [thenCollapse=false]\n             */\n\n          }, {\n            key: \"saveRange\",\n            value: function saveRange(thenCollapse) {\n              if (thenCollapse) {\n                this.getLastRange().collapse().select();\n              }\n            }\n            /**\n             * restoreRange\n             *\n             * restore lately range\n             */\n\n          }, {\n            key: \"restoreRange\",\n            value: function restoreRange() {\n              if (this.lastRange) {\n                this.lastRange.select();\n                this.focus();\n              }\n            }\n          }, {\n            key: \"saveTarget\",\n            value: function saveTarget(node) {\n              this.$editable.data('target', node);\n            }\n          }, {\n            key: \"clearTarget\",\n            value: function clearTarget() {\n              this.$editable.removeData('target');\n            }\n          }, {\n            key: \"restoreTarget\",\n            value: function restoreTarget() {\n              return this.$editable.data('target');\n            }\n            /**\n             * currentStyle\n             *\n             * current style\n             * @return {Object|Boolean} unfocus\n             */\n\n          }, {\n            key: \"currentStyle\",\n            value: function currentStyle() {\n              var rng = range.create();\n\n              if (rng) {\n                rng = rng.normalize();\n              }\n\n              return rng ? this.style.current(rng) : this.style.fromNode(this.$editable);\n            }\n            /**\n             * style from node\n             *\n             * @param {jQuery} $node\n             * @return {Object}\n             */\n\n          }, {\n            key: \"styleFromNode\",\n            value: function styleFromNode($node) {\n              return this.style.fromNode($node);\n            }\n            /**\n             * undo\n             */\n\n          }, {\n            key: \"undo\",\n            value: function undo() {\n              this.context.triggerEvent('before.command', this.$editable.html());\n              this.history.undo();\n              this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n            }\n            /*\n            * commit\n            */\n\n          }, {\n            key: \"commit\",\n            value: function commit() {\n              this.context.triggerEvent('before.command', this.$editable.html());\n              this.history.commit();\n              this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n            }\n            /**\n             * redo\n             */\n\n          }, {\n            key: \"redo\",\n            value: function redo() {\n              this.context.triggerEvent('before.command', this.$editable.html());\n              this.history.redo();\n              this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n            }\n            /**\n             * before command\n             */\n\n          }, {\n            key: \"beforeCommand\",\n            value: function beforeCommand() {\n              this.context.triggerEvent('before.command', this.$editable.html()); // Set styleWithCSS before run a command\n\n              document.execCommand('styleWithCSS', false, this.options.styleWithCSS); // keep focus on editable before command execution\n\n              this.focus();\n            }\n            /**\n             * after command\n             * @param {Boolean} isPreventTrigger\n             */\n\n          }, {\n            key: \"afterCommand\",\n            value: function afterCommand(isPreventTrigger) {\n              this.normalizeContent();\n              this.history.recordUndo();\n\n              if (!isPreventTrigger) {\n                this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n              }\n            }\n            /**\n             * handle tab key\n             */\n\n          }, {\n            key: \"tab\",\n            value: function tab() {\n              var rng = this.getLastRange();\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.table.tab(rng);\n              } else {\n                if (this.options.tabSize === 0) {\n                  return false;\n                }\n\n                if (!this.isLimited(this.options.tabSize)) {\n                  this.beforeCommand();\n                  this.typing.insertTab(rng, this.options.tabSize);\n                  this.afterCommand();\n                }\n              }\n            }\n            /**\n             * handle shift+tab key\n             */\n\n          }, {\n            key: \"untab\",\n            value: function untab() {\n              var rng = this.getLastRange();\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.table.tab(rng, true);\n              } else {\n                if (this.options.tabSize === 0) {\n                  return false;\n                }\n              }\n            }\n            /**\n             * run given function between beforeCommand and afterCommand\n             */\n\n          }, {\n            key: \"wrapCommand\",\n            value: function wrapCommand(fn) {\n              return function () {\n                this.beforeCommand();\n                fn.apply(this, arguments);\n                this.afterCommand();\n              };\n            }\n            /**\n             * insert image\n             *\n             * @param {String} src\n             * @param {String|Function} param\n             * @return {Promise}\n             */\n\n          }, {\n            key: \"insertImage\",\n            value: function insertImage(src, param) {\n              var _this3 = this;\n\n              return createImage(src, param).then(function ($image) {\n                _this3.beforeCommand();\n\n                if (typeof param === 'function') {\n                  param($image);\n                } else {\n                  if (typeof param === 'string') {\n                    $image.attr('data-filename', param);\n                  }\n\n                  $image.css('width', Math.min(_this3.$editable.width(), $image.width()));\n                }\n\n                $image.show();\n\n                _this3.getLastRange().insertNode($image[0]);\n\n                _this3.setLastRange(range.createFromNodeAfter($image[0]).select());\n\n                _this3.afterCommand();\n              }).fail(function (e) {\n                _this3.context.triggerEvent('image.upload.error', e);\n              });\n            }\n            /**\n             * insertImages\n             * @param {File[]} files\n             */\n\n          }, {\n            key: \"insertImagesAsDataURL\",\n            value: function insertImagesAsDataURL(files) {\n              var _this4 = this;\n\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(files, function (idx, file) {\n                var filename = file.name;\n\n                if (_this4.options.maximumImageFileSize && _this4.options.maximumImageFileSize < file.size) {\n                  _this4.context.triggerEvent('image.upload.error', _this4.lang.image.maximumFileSizeError);\n                } else {\n                  readFileAsDataURL(file).then(function (dataURL) {\n                    return _this4.insertImage(dataURL, filename);\n                  }).fail(function () {\n                    _this4.context.triggerEvent('image.upload.error');\n                  });\n                }\n              });\n            }\n            /**\n             * insertImagesOrCallback\n             * @param {File[]} files\n             */\n\n          }, {\n            key: \"insertImagesOrCallback\",\n            value: function insertImagesOrCallback(files) {\n              var callbacks = this.options.callbacks; // If onImageUpload set,\n\n              if (callbacks.onImageUpload) {\n                this.context.triggerEvent('image.upload', files); // else insert Image as dataURL\n              } else {\n                this.insertImagesAsDataURL(files);\n              }\n            }\n            /**\n             * return selected plain text\n             * @return {String} text\n             */\n\n          }, {\n            key: \"getSelectedText\",\n            value: function getSelectedText() {\n              var rng = this.getLastRange(); // if range on anchor, expand range with anchor\n\n              if (rng.isOnAnchor()) {\n                rng = range.createFromNode(dom.ancestor(rng.sc, dom.isAnchor));\n              }\n\n              return rng.toString();\n            }\n          }, {\n            key: \"onFormatBlock\",\n            value: function onFormatBlock(tagName, $target) {\n              // [workaround] for MSIE, IE need `<`\n              document.execCommand('FormatBlock', false, env.isMSIE ? '<' + tagName + '>' : tagName); // support custom class\n\n              if ($target && $target.length) {\n                // find the exact element has given tagName\n                if ($target[0].tagName.toUpperCase() !== tagName.toUpperCase()) {\n                  $target = $target.find(tagName);\n                }\n\n                if ($target && $target.length) {\n                  var className = $target[0].className || '';\n\n                  if (className) {\n                    var currentRange = this.createRange();\n                    var $parent = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()([currentRange.sc, currentRange.ec]).closest(tagName);\n                    $parent.addClass(className);\n                  }\n                }\n              }\n            }\n          }, {\n            key: \"formatPara\",\n            value: function formatPara() {\n              this.formatBlock('P');\n            }\n          }, {\n            key: \"fontStyling\",\n            value: function fontStyling(target, value) {\n              var rng = this.getLastRange();\n\n              if (rng !== '') {\n                var spans = this.style.styleNodes(rng);\n                this.$editor.find('.note-status-output').html('');\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(spans).css(target, value); // [workaround] added styled bogus span for style\n                //  - also bogus character needed for cursor position\n\n                if (rng.isCollapsed()) {\n                  var firstSpan = lists.head(spans);\n\n                  if (firstSpan && !dom.nodeLength(firstSpan)) {\n                    firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;\n                    range.createFromNode(firstSpan.firstChild).select();\n                    this.setLastRange();\n                    this.$editable.data(KEY_BOGUS, firstSpan);\n                  }\n                } else {\n                  this.setLastRange(this.createRangeFromList(spans).select());\n                }\n              } else {\n                var noteStatusOutput = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.now();\n                this.$editor.find('.note-status-output').html('<div id=\"note-status-output-' + noteStatusOutput + '\" class=\"alert alert-info\">' + this.lang.output.noSelection + '</div>');\n                setTimeout(function () {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('#note-status-output-' + noteStatusOutput).remove();\n                }, 5000);\n              }\n            }\n            /**\n             * unlink\n             *\n             * @type command\n             */\n\n          }, {\n            key: \"unlink\",\n            value: function unlink() {\n              var rng = this.getLastRange();\n\n              if (rng.isOnAnchor()) {\n                var anchor = dom.ancestor(rng.sc, dom.isAnchor);\n                rng = range.createFromNode(anchor);\n                rng.select();\n                this.setLastRange();\n                this.beforeCommand();\n                document.execCommand('unlink');\n                this.afterCommand();\n              }\n            }\n            /**\n             * returns link info\n             *\n             * @return {Object}\n             * @return {WrappedRange} return.range\n             * @return {String} return.text\n             * @return {Boolean} [return.isNewWindow=true]\n             * @return {String} [return.url=\"\"]\n             */\n\n          }, {\n            key: \"getLinkInfo\",\n            value: function getLinkInfo() {\n              var rng = this.getLastRange().expand(dom.isAnchor); // Get the first anchor on range(for edit).\n\n              var $anchor = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(lists.head(rng.nodes(dom.isAnchor)));\n              var linkInfo = {\n                range: rng,\n                text: rng.toString(),\n                url: $anchor.length ? $anchor.attr('href') : ''\n              }; // When anchor exists,\n\n              if ($anchor.length) {\n                // Set isNewWindow by checking its target.\n                linkInfo.isNewWindow = $anchor.attr('target') === '_blank';\n              }\n\n              return linkInfo;\n            }\n          }, {\n            key: \"addRow\",\n            value: function addRow(position) {\n              var rng = this.getLastRange(this.$editable);\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.beforeCommand();\n                this.table.addRow(rng, position);\n                this.afterCommand();\n              }\n            }\n          }, {\n            key: \"addCol\",\n            value: function addCol(position) {\n              var rng = this.getLastRange(this.$editable);\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.beforeCommand();\n                this.table.addCol(rng, position);\n                this.afterCommand();\n              }\n            }\n          }, {\n            key: \"deleteRow\",\n            value: function deleteRow() {\n              var rng = this.getLastRange(this.$editable);\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.beforeCommand();\n                this.table.deleteRow(rng);\n                this.afterCommand();\n              }\n            }\n          }, {\n            key: \"deleteCol\",\n            value: function deleteCol() {\n              var rng = this.getLastRange(this.$editable);\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.beforeCommand();\n                this.table.deleteCol(rng);\n                this.afterCommand();\n              }\n            }\n          }, {\n            key: \"deleteTable\",\n            value: function deleteTable() {\n              var rng = this.getLastRange(this.$editable);\n\n              if (rng.isCollapsed() && rng.isOnCell()) {\n                this.beforeCommand();\n                this.table.deleteTable(rng);\n                this.afterCommand();\n              }\n            }\n            /**\n             * @param {Position} pos\n             * @param {jQuery} $target - target element\n             * @param {Boolean} [bKeepRatio] - keep ratio\n             */\n\n          }, {\n            key: \"resizeTo\",\n            value: function resizeTo(pos, $target, bKeepRatio) {\n              var imageSize;\n\n              if (bKeepRatio) {\n                var newRatio = pos.y / pos.x;\n                var ratio = $target.data('ratio');\n                imageSize = {\n                  width: ratio > newRatio ? pos.x : pos.y / ratio,\n                  height: ratio > newRatio ? pos.x * ratio : pos.y\n                };\n              } else {\n                imageSize = {\n                  width: pos.x,\n                  height: pos.y\n                };\n              }\n\n              $target.css(imageSize);\n            }\n            /**\n             * returns whether editable area has focus or not.\n             */\n\n          }, {\n            key: \"hasFocus\",\n            value: function hasFocus() {\n              return this.$editable.is(':focus');\n            }\n            /**\n             * set focus\n             */\n\n          }, {\n            key: \"focus\",\n            value: function focus() {\n              // [workaround] Screen will move when page is scolled in IE.\n              //  - do focus when not focused\n              if (!this.hasFocus()) {\n                this.$editable.focus();\n              }\n            }\n            /**\n             * returns whether contents is empty or not.\n             * @return {Boolean}\n             */\n\n          }, {\n            key: \"isEmpty\",\n            value: function isEmpty() {\n              return dom.isEmpty(this.$editable[0]) || dom.emptyPara === this.$editable.html();\n            }\n            /**\n             * Removes all contents and restores the editable instance to an _emptyPara_.\n             */\n\n          }, {\n            key: \"empty\",\n            value: function empty() {\n              this.context.invoke('code', dom.emptyPara);\n            }\n            /**\n             * normalize content\n             */\n\n          }, {\n            key: \"normalizeContent\",\n            value: function normalizeContent() {\n              this.$editable[0].normalize();\n            }\n          }]);\n          return Editor;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Clipboard.js\n\n\n        function Clipboard_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Clipboard_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Clipboard_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Clipboard_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Clipboard_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Clipboard_Clipboard = /*#__PURE__*/function () {\n          function Clipboard(context) {\n            Clipboard_classCallCheck(this, Clipboard);\n            this.context = context;\n            this.$editable = context.layoutInfo.editable;\n          }\n\n          Clipboard_createClass(Clipboard, [{\n            key: \"initialize\",\n            value: function initialize() {\n              this.$editable.on('paste', this.pasteByEvent.bind(this));\n            }\n            /**\n             * paste by clipboard event\n             *\n             * @param {Event} event\n             */\n\n          }, {\n            key: \"pasteByEvent\",\n            value: function pasteByEvent(event) {\n              var _this = this;\n\n              var clipboardData = event.originalEvent.clipboardData;\n\n              if (clipboardData && clipboardData.items && clipboardData.items.length) {\n                var item = clipboardData.items.length > 1 ? clipboardData.items[1] : lists.head(clipboardData.items);\n\n                if (item.kind === 'file' && item.type.indexOf('image/') !== -1) {\n                  // paste img file\n                  this.context.invoke('editor.insertImagesOrCallback', [item.getAsFile()]);\n                  event.preventDefault();\n                } else if (item.kind === 'string') {\n                  // paste text with maxTextLength check\n                  if (this.context.invoke('editor.isLimited', clipboardData.getData('Text').length)) {\n                    event.preventDefault();\n                  }\n                }\n              } else if (window.clipboardData) {\n                // for IE\n                var text = window.clipboardData.getData('text');\n\n                if (this.context.invoke('editor.isLimited', text.length)) {\n                  event.preventDefault();\n                }\n              } // Call editor.afterCommand after proceeding default event handler\n\n\n              setTimeout(function () {\n                _this.context.invoke('editor.afterCommand');\n              }, 10);\n            }\n          }]);\n          return Clipboard;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Dropzone.js\n\n\n        function Dropzone_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Dropzone_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Dropzone_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Dropzone_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Dropzone_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Dropzone_Dropzone = /*#__PURE__*/function () {\n          function Dropzone(context) {\n            Dropzone_classCallCheck(this, Dropzone);\n            this.context = context;\n            this.$eventListener = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document);\n            this.$editor = context.layoutInfo.editor;\n            this.$editable = context.layoutInfo.editable;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n            this.documentEventHandlers = {};\n            this.$dropzone = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(['<div class=\"note-dropzone\">', '<div class=\"note-dropzone-message\"></div>', '</div>'].join('')).prependTo(this.$editor);\n          }\n          /**\n           * attach Drag and Drop Events\n           */\n\n\n          Dropzone_createClass(Dropzone, [{\n            key: \"initialize\",\n            value: function initialize() {\n              if (this.options.disableDragAndDrop) {\n                // prevent default drop event\n                this.documentEventHandlers.onDrop = function (e) {\n                  e.preventDefault();\n                }; // do not consider outside of dropzone\n\n\n                this.$eventListener = this.$dropzone;\n                this.$eventListener.on('drop', this.documentEventHandlers.onDrop);\n              } else {\n                this.attachDragAndDropEvent();\n              }\n            }\n            /**\n             * attach Drag and Drop Events\n             */\n\n          }, {\n            key: \"attachDragAndDropEvent\",\n            value: function attachDragAndDropEvent() {\n              var _this = this;\n\n              var collection = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()();\n              var $dropzoneMessage = this.$dropzone.find('.note-dropzone-message');\n\n              this.documentEventHandlers.onDragenter = function (e) {\n                var isCodeview = _this.context.invoke('codeview.isActivated');\n\n                var hasEditorSize = _this.$editor.width() > 0 && _this.$editor.height() > 0;\n\n                if (!isCodeview && !collection.length && hasEditorSize) {\n                  _this.$editor.addClass('dragover');\n\n                  _this.$dropzone.width(_this.$editor.width());\n\n                  _this.$dropzone.height(_this.$editor.height());\n\n                  $dropzoneMessage.text(_this.lang.image.dragImageHere);\n                }\n\n                collection = collection.add(e.target);\n              };\n\n              this.documentEventHandlers.onDragleave = function (e) {\n                collection = collection.not(e.target); // If nodeName is BODY, then just make it over (fix for IE)\n\n                if (!collection.length || e.target.nodeName === 'BODY') {\n                  collection = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()();\n\n                  _this.$editor.removeClass('dragover');\n                }\n              };\n\n              this.documentEventHandlers.onDrop = function () {\n                collection = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()();\n\n                _this.$editor.removeClass('dragover');\n              }; // show dropzone on dragenter when dragging a object to document\n              // -but only if the editor is visible, i.e. has a positive width and height\n\n\n              this.$eventListener.on('dragenter', this.documentEventHandlers.onDragenter).on('dragleave', this.documentEventHandlers.onDragleave).on('drop', this.documentEventHandlers.onDrop); // change dropzone's message on hover.\n\n              this.$dropzone.on('dragenter', function () {\n                _this.$dropzone.addClass('hover');\n\n                $dropzoneMessage.text(_this.lang.image.dropImage);\n              }).on('dragleave', function () {\n                _this.$dropzone.removeClass('hover');\n\n                $dropzoneMessage.text(_this.lang.image.dragImageHere);\n              }); // attach dropImage\n\n              this.$dropzone.on('drop', function (event) {\n                var dataTransfer = event.originalEvent.dataTransfer; // stop the browser from opening the dropped content\n\n                event.preventDefault();\n\n                if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n                  _this.$editable.focus();\n\n                  _this.context.invoke('editor.insertImagesOrCallback', dataTransfer.files);\n                } else {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(dataTransfer.types, function (idx, type) {\n                    // skip moz-specific types\n                    if (type.toLowerCase().indexOf('_moz_') > -1) {\n                      return;\n                    }\n\n                    var content = dataTransfer.getData(type);\n\n                    if (type.toLowerCase().indexOf('text') > -1) {\n                      _this.context.invoke('editor.pasteHTML', content);\n                    } else {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(content).each(function (idx, item) {\n                        _this.context.invoke('editor.insertNode', item);\n                      });\n                    }\n                  });\n                }\n              }).on('dragover', false); // prevent default dragover event\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              var _this2 = this;\n\n              Object.keys(this.documentEventHandlers).forEach(function (key) {\n                _this2.$eventListener.off(key.substr(2).toLowerCase(), _this2.documentEventHandlers[key]);\n              });\n              this.documentEventHandlers = {};\n            }\n          }]);\n          return Dropzone;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Codeview.js\n\n\n        function _createForOfIteratorHelper(o) {\n          if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n            if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n              var i = 0;\n\n              var F = function F() {};\n\n              return {\n                s: F,\n                n: function n() {\n                  if (i >= o.length) return {\n                    done: true\n                  };\n                  return {\n                    done: false,\n                    value: o[i++]\n                  };\n                },\n                e: function e(_e) {\n                  throw _e;\n                },\n                f: F\n              };\n            }\n\n            throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }\n\n          var it,\n              normalCompletion = true,\n              didErr = false,\n              err;\n          return {\n            s: function s() {\n              it = o[Symbol.iterator]();\n            },\n            n: function n() {\n              var step = it.next();\n              normalCompletion = step.done;\n              return step;\n            },\n            e: function e(_e2) {\n              didErr = true;\n              err = _e2;\n            },\n            f: function f() {\n              try {\n                if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n              } finally {\n                if (didErr) throw err;\n              }\n            }\n          };\n        }\n\n        function _unsupportedIterableToArray(o, minLen) {\n          if (!o) return;\n          if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n          var n = Object.prototype.toString.call(o).slice(8, -1);\n          if (n === \"Object\" && o.constructor) n = o.constructor.name;\n          if (n === \"Map\" || n === \"Set\") return Array.from(n);\n          if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n        }\n\n        function _arrayLikeToArray(arr, len) {\n          if (len == null || len > arr.length) len = arr.length;\n\n          for (var i = 0, arr2 = new Array(len); i < len; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        }\n\n        function Codeview_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Codeview_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Codeview_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Codeview_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Codeview_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * @class Codeview\n         */\n\n\n        var Codeview_CodeView = /*#__PURE__*/function () {\n          function CodeView(context) {\n            Codeview_classCallCheck(this, CodeView);\n            this.context = context;\n            this.$editor = context.layoutInfo.editor;\n            this.$editable = context.layoutInfo.editable;\n            this.$codable = context.layoutInfo.codable;\n            this.options = context.options;\n            this.CodeMirrorConstructor = window.CodeMirror;\n\n            if (this.options.codemirror.CodeMirrorConstructor) {\n              this.CodeMirrorConstructor = this.options.codemirror.CodeMirrorConstructor;\n            }\n          }\n\n          Codeview_createClass(CodeView, [{\n            key: \"sync\",\n            value: function sync(html) {\n              var isCodeview = this.isActivated();\n              var CodeMirror = this.CodeMirrorConstructor;\n\n              if (isCodeview) {\n                if (html) {\n                  if (CodeMirror) {\n                    this.$codable.data('cmEditor').getDoc().setValue(html);\n                  } else {\n                    this.$codable.val(html);\n                  }\n                } else {\n                  if (CodeMirror) {\n                    this.$codable.data('cmEditor').save();\n                  }\n                }\n              }\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              var _this = this;\n\n              this.$codable.on('keyup', function (event) {\n                if (event.keyCode === core_key.code.ESCAPE) {\n                  _this.deactivate();\n                }\n              });\n            }\n            /**\n             * @return {Boolean}\n             */\n\n          }, {\n            key: \"isActivated\",\n            value: function isActivated() {\n              return this.$editor.hasClass('codeview');\n            }\n            /**\n             * toggle codeview\n             */\n\n          }, {\n            key: \"toggle\",\n            value: function toggle() {\n              if (this.isActivated()) {\n                this.deactivate();\n              } else {\n                this.activate();\n              }\n\n              this.context.triggerEvent('codeview.toggled');\n            }\n            /**\n             * purify input value\n             * @param value\n             * @returns {*}\n             */\n\n          }, {\n            key: \"purify\",\n            value: function purify(value) {\n              if (this.options.codeviewFilter) {\n                // filter code view regex\n                value = value.replace(this.options.codeviewFilterRegex, ''); // allow specific iframe tag\n\n                if (this.options.codeviewIframeFilter) {\n                  var whitelist = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\n                  value = value.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function (tag) {\n                    // remove if src attribute is duplicated\n                    if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(tag)) {\n                      return '';\n                    }\n\n                    var _iterator = _createForOfIteratorHelper(whitelist),\n                        _step;\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var src = _step.value; // pass if src is trusted\n\n                        if (new RegExp('src=\"(https?:)?\\/\\/' + src.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\\/(.+)\"').test(tag)) {\n                          return tag;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n\n                    return '';\n                  });\n                }\n              }\n\n              return value;\n            }\n            /**\n             * activate code view\n             */\n\n          }, {\n            key: \"activate\",\n            value: function activate() {\n              var _this2 = this;\n\n              var CodeMirror = this.CodeMirrorConstructor;\n              this.$codable.val(dom.html(this.$editable, this.options.prettifyHtml));\n              this.$codable.height(this.$editable.height());\n              this.context.invoke('toolbar.updateCodeview', true);\n              this.context.invoke('airPopover.updateCodeview', true);\n              this.$editor.addClass('codeview');\n              this.$codable.focus(); // activate CodeMirror as codable\n\n              if (CodeMirror) {\n                var cmEditor = CodeMirror.fromTextArea(this.$codable[0], this.options.codemirror); // CodeMirror TernServer\n\n                if (this.options.codemirror.tern) {\n                  var server = new CodeMirror.TernServer(this.options.codemirror.tern);\n                  cmEditor.ternServer = server;\n                  cmEditor.on('cursorActivity', function (cm) {\n                    server.updateArgHints(cm);\n                  });\n                }\n\n                cmEditor.on('blur', function (event) {\n                  _this2.context.triggerEvent('blur.codeview', cmEditor.getValue(), event);\n                });\n                cmEditor.on('change', function () {\n                  _this2.context.triggerEvent('change.codeview', cmEditor.getValue(), cmEditor);\n                }); // CodeMirror hasn't Padding.\n\n                cmEditor.setSize(null, this.$editable.outerHeight());\n                this.$codable.data('cmEditor', cmEditor);\n              } else {\n                this.$codable.on('blur', function (event) {\n                  _this2.context.triggerEvent('blur.codeview', _this2.$codable.val(), event);\n                });\n                this.$codable.on('input', function () {\n                  _this2.context.triggerEvent('change.codeview', _this2.$codable.val(), _this2.$codable);\n                });\n              }\n            }\n            /**\n             * deactivate code view\n             */\n\n          }, {\n            key: \"deactivate\",\n            value: function deactivate() {\n              var CodeMirror = this.CodeMirrorConstructor; // deactivate CodeMirror as codable\n\n              if (CodeMirror) {\n                var cmEditor = this.$codable.data('cmEditor');\n                this.$codable.val(cmEditor.getValue());\n                cmEditor.toTextArea();\n              }\n\n              var value = this.purify(dom.value(this.$codable, this.options.prettifyHtml) || dom.emptyPara);\n              var isChange = this.$editable.html() !== value;\n              this.$editable.html(value);\n              this.$editable.height(this.options.height ? this.$codable.height() : 'auto');\n              this.$editor.removeClass('codeview');\n\n              if (isChange) {\n                this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n              }\n\n              this.$editable.focus();\n              this.context.invoke('toolbar.updateCodeview', false);\n              this.context.invoke('airPopover.updateCodeview', false);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              if (this.isActivated()) {\n                this.deactivate();\n              }\n            }\n          }]);\n          return CodeView;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Statusbar.js\n\n\n        function Statusbar_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Statusbar_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Statusbar_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Statusbar_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Statusbar_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var EDITABLE_PADDING = 24;\n\n        var Statusbar_Statusbar = /*#__PURE__*/function () {\n          function Statusbar(context) {\n            Statusbar_classCallCheck(this, Statusbar);\n            this.$document = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document);\n            this.$statusbar = context.layoutInfo.statusbar;\n            this.$editable = context.layoutInfo.editable;\n            this.options = context.options;\n          }\n\n          Statusbar_createClass(Statusbar, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var _this = this;\n\n              if (this.options.airMode || this.options.disableResizeEditor) {\n                this.destroy();\n                return;\n              }\n\n              this.$statusbar.on('mousedown', function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                var editableTop = _this.$editable.offset().top - _this.$document.scrollTop();\n\n                var onMouseMove = function onMouseMove(event) {\n                  var height = event.clientY - (editableTop + EDITABLE_PADDING);\n                  height = _this.options.minheight > 0 ? Math.max(height, _this.options.minheight) : height;\n                  height = _this.options.maxHeight > 0 ? Math.min(height, _this.options.maxHeight) : height;\n\n                  _this.$editable.height(height);\n                };\n\n                _this.$document.on('mousemove', onMouseMove).one('mouseup', function () {\n                  _this.$document.off('mousemove', onMouseMove);\n                });\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$statusbar.off();\n              this.$statusbar.addClass('locked');\n            }\n          }]);\n          return Statusbar;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Fullscreen.js\n\n\n        function Fullscreen_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Fullscreen_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Fullscreen_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Fullscreen_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Fullscreen_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Fullscreen_Fullscreen = /*#__PURE__*/function () {\n          function Fullscreen(context) {\n            var _this = this;\n\n            Fullscreen_classCallCheck(this, Fullscreen);\n            this.context = context;\n            this.$editor = context.layoutInfo.editor;\n            this.$toolbar = context.layoutInfo.toolbar;\n            this.$editable = context.layoutInfo.editable;\n            this.$codable = context.layoutInfo.codable;\n            this.$window = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(window);\n            this.$scrollbar = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('html, body');\n\n            this.onResize = function () {\n              _this.resizeTo({\n                h: _this.$window.height() - _this.$toolbar.outerHeight()\n              });\n            };\n          }\n\n          Fullscreen_createClass(Fullscreen, [{\n            key: \"resizeTo\",\n            value: function resizeTo(size) {\n              this.$editable.css('height', size.h);\n              this.$codable.css('height', size.h);\n\n              if (this.$codable.data('cmeditor')) {\n                this.$codable.data('cmeditor').setsize(null, size.h);\n              }\n            }\n            /**\n             * toggle fullscreen\n             */\n\n          }, {\n            key: \"toggle\",\n            value: function toggle() {\n              this.$editor.toggleClass('fullscreen');\n\n              if (this.isFullscreen()) {\n                this.$editable.data('orgHeight', this.$editable.css('height'));\n                this.$editable.data('orgMaxHeight', this.$editable.css('maxHeight'));\n                this.$editable.css('maxHeight', '');\n                this.$window.on('resize', this.onResize).trigger('resize');\n                this.$scrollbar.css('overflow', 'hidden');\n              } else {\n                this.$window.off('resize', this.onResize);\n                this.resizeTo({\n                  h: this.$editable.data('orgHeight')\n                });\n                this.$editable.css('maxHeight', this.$editable.css('orgMaxHeight'));\n                this.$scrollbar.css('overflow', 'visible');\n              }\n\n              this.context.invoke('toolbar.updateFullscreen', this.isFullscreen());\n            }\n          }, {\n            key: \"isFullscreen\",\n            value: function isFullscreen() {\n              return this.$editor.hasClass('fullscreen');\n            }\n          }]);\n          return Fullscreen;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Handle.js\n\n\n        function Handle_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Handle_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Handle_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Handle_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Handle_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Handle_Handle = /*#__PURE__*/function () {\n          function Handle(context) {\n            var _this = this;\n\n            Handle_classCallCheck(this, Handle);\n            this.context = context;\n            this.$document = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document);\n            this.$editingArea = context.layoutInfo.editingArea;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n            this.events = {\n              'summernote.mousedown': function summernoteMousedown(we, e) {\n                if (_this.update(e.target, e)) {\n                  e.preventDefault();\n                }\n              },\n              'summernote.keyup summernote.scroll summernote.change summernote.dialog.shown': function summernoteKeyupSummernoteScrollSummernoteChangeSummernoteDialogShown() {\n                _this.update();\n              },\n              'summernote.disable summernote.blur': function summernoteDisableSummernoteBlur() {\n                _this.hide();\n              },\n              'summernote.codeview.toggled': function summernoteCodeviewToggled() {\n                _this.update();\n              }\n            };\n          }\n\n          Handle_createClass(Handle, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var _this2 = this;\n\n              this.$handle = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(['<div class=\"note-handle\">', '<div class=\"note-control-selection\">', '<div class=\"note-control-selection-bg\"></div>', '<div class=\"note-control-holder note-control-nw\"></div>', '<div class=\"note-control-holder note-control-ne\"></div>', '<div class=\"note-control-holder note-control-sw\"></div>', '<div class=\"', this.options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing', ' note-control-se\"></div>', this.options.disableResizeImage ? '' : '<div class=\"note-control-selection-info\"></div>', '</div>', '</div>'].join('')).prependTo(this.$editingArea);\n              this.$handle.on('mousedown', function (event) {\n                if (dom.isControlSizing(event.target)) {\n                  event.preventDefault();\n                  event.stopPropagation();\n\n                  var $target = _this2.$handle.find('.note-control-selection').data('target');\n\n                  var posStart = $target.offset();\n\n                  var scrollTop = _this2.$document.scrollTop();\n\n                  var onMouseMove = function onMouseMove(event) {\n                    _this2.context.invoke('editor.resizeTo', {\n                      x: event.clientX - posStart.left,\n                      y: event.clientY - (posStart.top - scrollTop)\n                    }, $target, !event.shiftKey);\n\n                    _this2.update($target[0], event);\n                  };\n\n                  _this2.$document.on('mousemove', onMouseMove).one('mouseup', function (e) {\n                    e.preventDefault();\n\n                    _this2.$document.off('mousemove', onMouseMove);\n\n                    _this2.context.invoke('editor.afterCommand');\n                  });\n\n                  if (!$target.data('ratio')) {\n                    // original ratio.\n                    $target.data('ratio', $target.height() / $target.width());\n                  }\n                }\n              }); // Listen for scrolling on the handle overlay.\n\n              this.$handle.on('wheel', function (e) {\n                e.preventDefault();\n\n                _this2.update();\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$handle.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update(target, event) {\n              if (this.context.isDisabled()) {\n                return false;\n              }\n\n              var isImage = dom.isImg(target);\n              var $selection = this.$handle.find('.note-control-selection');\n              this.context.invoke('imagePopover.update', target, event);\n\n              if (isImage) {\n                var $image = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(target);\n                var position = $image.position();\n                var pos = {\n                  left: position.left + parseInt($image.css('marginLeft'), 10),\n                  top: position.top + parseInt($image.css('marginTop'), 10)\n                }; // exclude margin\n\n                var imageSize = {\n                  w: $image.outerWidth(false),\n                  h: $image.outerHeight(false)\n                };\n                $selection.css({\n                  display: 'block',\n                  left: pos.left,\n                  top: pos.top,\n                  width: imageSize.w,\n                  height: imageSize.h\n                }).data('target', $image); // save current image element.\n\n                var origImageObj = new Image();\n                origImageObj.src = $image.attr('src');\n                var sizingText = imageSize.w + 'x' + imageSize.h + ' (' + this.lang.image.original + ': ' + origImageObj.width + 'x' + origImageObj.height + ')';\n                $selection.find('.note-control-selection-info').text(sizingText);\n                this.context.invoke('editor.saveTarget', target);\n              } else {\n                this.hide();\n              }\n\n              return isImage;\n            }\n            /**\n             * hide\n             *\n             * @param {jQuery} $handle\n             */\n\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              this.context.invoke('editor.clearTarget');\n              this.$handle.children().hide();\n            }\n          }]);\n          return Handle;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/AutoLink.js\n\n\n        function AutoLink_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function AutoLink_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function AutoLink_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) AutoLink_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) AutoLink_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var defaultScheme = 'http://';\n        var linkPattern = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i;\n\n        var AutoLink_AutoLink = /*#__PURE__*/function () {\n          function AutoLink(context) {\n            var _this = this;\n\n            AutoLink_classCallCheck(this, AutoLink);\n            this.context = context;\n            this.options = context.options;\n            this.events = {\n              'summernote.keyup': function summernoteKeyup(we, e) {\n                if (!e.isDefaultPrevented()) {\n                  _this.handleKeyup(e);\n                }\n              },\n              'summernote.keydown': function summernoteKeydown(we, e) {\n                _this.handleKeydown(e);\n              }\n            };\n          }\n\n          AutoLink_createClass(AutoLink, [{\n            key: \"initialize\",\n            value: function initialize() {\n              this.lastWordRange = null;\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.lastWordRange = null;\n            }\n          }, {\n            key: \"replace\",\n            value: function replace() {\n              if (!this.lastWordRange) {\n                return;\n              }\n\n              var keyword = this.lastWordRange.toString();\n              var match = keyword.match(linkPattern);\n\n              if (match && (match[1] || match[2])) {\n                var link = match[1] ? keyword : defaultScheme + keyword;\n                var urlText = this.options.showDomainOnlyForAutolink ? keyword.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:www\\.)?/i, '').split('/')[0] : keyword;\n                var node = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<a />').html(urlText).attr('href', link)[0];\n\n                if (this.context.options.linkTargetBlank) {\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(node).attr('target', '_blank');\n                }\n\n                this.lastWordRange.insertNode(node);\n                this.lastWordRange = null;\n                this.context.invoke('editor.focus');\n              }\n            }\n          }, {\n            key: \"handleKeydown\",\n            value: function handleKeydown(e) {\n              if (lists.contains([core_key.code.ENTER, core_key.code.SPACE], e.keyCode)) {\n                var wordRange = this.context.invoke('editor.createRange').getWordRange();\n                this.lastWordRange = wordRange;\n              }\n            }\n          }, {\n            key: \"handleKeyup\",\n            value: function handleKeyup(e) {\n              if (lists.contains([core_key.code.ENTER, core_key.code.SPACE], e.keyCode)) {\n                this.replace();\n              }\n            }\n          }]);\n          return AutoLink;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/AutoSync.js\n\n\n        function AutoSync_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function AutoSync_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function AutoSync_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) AutoSync_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) AutoSync_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * textarea auto sync.\n         */\n\n\n        var AutoSync_AutoSync = /*#__PURE__*/function () {\n          function AutoSync(context) {\n            var _this = this;\n\n            AutoSync_classCallCheck(this, AutoSync);\n            this.$note = context.layoutInfo.note;\n            this.events = {\n              'summernote.change': function summernoteChange() {\n                _this.$note.val(context.invoke('code'));\n              }\n            };\n          }\n\n          AutoSync_createClass(AutoSync, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return dom.isTextarea(this.$note[0]);\n            }\n          }]);\n          return AutoSync;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/AutoReplace.js\n\n\n        function AutoReplace_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function AutoReplace_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function AutoReplace_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) AutoReplace_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) AutoReplace_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var AutoReplace_AutoReplace = /*#__PURE__*/function () {\n          function AutoReplace(context) {\n            var _this = this;\n\n            AutoReplace_classCallCheck(this, AutoReplace);\n            this.context = context;\n            this.options = context.options.replace || {};\n            this.keys = [core_key.code.ENTER, core_key.code.SPACE, core_key.code.PERIOD, core_key.code.COMMA, core_key.code.SEMICOLON, core_key.code.SLASH];\n            this.previousKeydownCode = null;\n            this.events = {\n              'summernote.keyup': function summernoteKeyup(we, e) {\n                if (!e.isDefaultPrevented()) {\n                  _this.handleKeyup(e);\n                }\n              },\n              'summernote.keydown': function summernoteKeydown(we, e) {\n                _this.handleKeydown(e);\n              }\n            };\n          }\n\n          AutoReplace_createClass(AutoReplace, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !!this.options.match;\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              this.lastWord = null;\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.lastWord = null;\n            }\n          }, {\n            key: \"replace\",\n            value: function replace() {\n              if (!this.lastWord) {\n                return;\n              }\n\n              var self = this;\n              var keyword = this.lastWord.toString();\n              this.options.match(keyword, function (match) {\n                if (match) {\n                  var node = '';\n\n                  if (typeof match === 'string') {\n                    node = dom.createText(match);\n                  } else if (match instanceof jQuery) {\n                    node = match[0];\n                  } else if (match instanceof Node) {\n                    node = match;\n                  }\n\n                  if (!node) return;\n                  self.lastWord.insertNode(node);\n                  self.lastWord = null;\n                  self.context.invoke('editor.focus');\n                }\n              });\n            }\n          }, {\n            key: \"handleKeydown\",\n            value: function handleKeydown(e) {\n              // this forces it to remember the last whole word, even if multiple termination keys are pressed\n              // before the previous key is let go.\n              if (this.previousKeydownCode && lists.contains(this.keys, this.previousKeydownCode)) {\n                this.previousKeydownCode = e.keyCode;\n                return;\n              }\n\n              if (lists.contains(this.keys, e.keyCode)) {\n                var wordRange = this.context.invoke('editor.createRange').getWordRange();\n                this.lastWord = wordRange;\n              }\n\n              this.previousKeydownCode = e.keyCode;\n            }\n          }, {\n            key: \"handleKeyup\",\n            value: function handleKeyup(e) {\n              if (lists.contains(this.keys, e.keyCode)) {\n                this.replace();\n              }\n            }\n          }]);\n          return AutoReplace;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Placeholder.js\n\n\n        function Placeholder_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Placeholder_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Placeholder_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Placeholder_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Placeholder_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Placeholder_Placeholder = /*#__PURE__*/function () {\n          function Placeholder(context) {\n            var _this = this;\n\n            Placeholder_classCallCheck(this, Placeholder);\n            this.context = context;\n            this.$editingArea = context.layoutInfo.editingArea;\n            this.options = context.options;\n\n            if (this.options.inheritPlaceholder === true) {\n              // get placeholder value from the original element\n              this.options.placeholder = this.context.$note.attr('placeholder') || this.options.placeholder;\n            }\n\n            this.events = {\n              'summernote.init summernote.change': function summernoteInitSummernoteChange() {\n                _this.update();\n              },\n              'summernote.codeview.toggled': function summernoteCodeviewToggled() {\n                _this.update();\n              }\n            };\n          }\n\n          Placeholder_createClass(Placeholder, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !!this.options.placeholder;\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              var _this2 = this;\n\n              this.$placeholder = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div class=\"note-placeholder\">');\n              this.$placeholder.on('click', function () {\n                _this2.context.invoke('focus');\n              }).html(this.options.placeholder).prependTo(this.$editingArea);\n              this.update();\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$placeholder.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update() {\n              var isShow = !this.context.invoke('codeview.isActivated') && this.context.invoke('editor.isEmpty');\n              this.$placeholder.toggle(isShow);\n            }\n          }]);\n          return Placeholder;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Buttons.js\n\n\n        function Buttons_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Buttons_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Buttons_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Buttons_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Buttons_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Buttons_Buttons = /*#__PURE__*/function () {\n          function Buttons(context) {\n            Buttons_classCallCheck(this, Buttons);\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.context = context;\n            this.$toolbar = context.layoutInfo.toolbar;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n            this.invertedKeyMap = func.invertObject(this.options.keyMap[env.isMac ? 'mac' : 'pc']);\n          }\n\n          Buttons_createClass(Buttons, [{\n            key: \"representShortcut\",\n            value: function representShortcut(editorMethod) {\n              var shortcut = this.invertedKeyMap[editorMethod];\n\n              if (!this.options.shortcuts || !shortcut) {\n                return '';\n              }\n\n              if (env.isMac) {\n                shortcut = shortcut.replace('CMD', '⌘').replace('SHIFT', '⇧');\n              }\n\n              shortcut = shortcut.replace('BACKSLASH', '\\\\').replace('SLASH', '/').replace('LEFTBRACKET', '[').replace('RIGHTBRACKET', ']');\n              return ' (' + shortcut + ')';\n            }\n          }, {\n            key: \"button\",\n            value: function button(o) {\n              if (!this.options.tooltip && o.tooltip) {\n                delete o.tooltip;\n              }\n\n              o.container = this.options.container;\n              return this.ui.button(o);\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              this.addToolbarButtons();\n              this.addImagePopoverButtons();\n              this.addLinkPopoverButtons();\n              this.addTablePopoverButtons();\n              this.fontInstalledMap = {};\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              delete this.fontInstalledMap;\n            }\n          }, {\n            key: \"isFontInstalled\",\n            value: function isFontInstalled(name) {\n              if (!Object.prototype.hasOwnProperty.call(this.fontInstalledMap, name)) {\n                this.fontInstalledMap[name] = env.isFontInstalled(name) || lists.contains(this.options.fontNamesIgnoreCheck, name);\n              }\n\n              return this.fontInstalledMap[name];\n            }\n          }, {\n            key: \"isFontDeservedToAdd\",\n            value: function isFontDeservedToAdd(name) {\n              name = name.toLowerCase();\n              return name !== '' && this.isFontInstalled(name) && env.genericFontFamilies.indexOf(name) === -1;\n            }\n          }, {\n            key: \"colorPalette\",\n            value: function colorPalette(className, tooltip, backColor, foreColor) {\n              var _this = this;\n\n              return this.ui.buttonGroup({\n                className: 'note-color ' + className,\n                children: [this.button({\n                  className: 'note-current-color-button',\n                  contents: this.ui.icon(this.options.icons.font + ' note-recent-color'),\n                  tooltip: tooltip,\n                  click: function click(e) {\n                    var $button = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(e.currentTarget);\n\n                    if (backColor && foreColor) {\n                      _this.context.invoke('editor.color', {\n                        backColor: $button.attr('data-backColor'),\n                        foreColor: $button.attr('data-foreColor')\n                      });\n                    } else if (backColor) {\n                      _this.context.invoke('editor.color', {\n                        backColor: $button.attr('data-backColor')\n                      });\n                    } else if (foreColor) {\n                      _this.context.invoke('editor.color', {\n                        foreColor: $button.attr('data-foreColor')\n                      });\n                    }\n                  },\n                  callback: function callback($button) {\n                    var $recentColor = $button.find('.note-recent-color');\n\n                    if (backColor) {\n                      $recentColor.css('background-color', _this.options.colorButton.backColor);\n                      $button.attr('data-backColor', _this.options.colorButton.backColor);\n                    }\n\n                    if (foreColor) {\n                      $recentColor.css('color', _this.options.colorButton.foreColor);\n                      $button.attr('data-foreColor', _this.options.colorButton.foreColor);\n                    } else {\n                      $recentColor.css('color', 'transparent');\n                    }\n                  }\n                }), this.button({\n                  className: 'dropdown-toggle',\n                  contents: this.ui.dropdownButtonContents('', this.options),\n                  tooltip: this.lang.color.more,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), this.ui.dropdown({\n                  items: (backColor ? ['<div class=\"note-palette\">', '<div class=\"note-palette-title\">' + this.lang.color.background + '</div>', '<div>', '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"backColor\" data-value=\"transparent\">', this.lang.color.transparent, '</button>', '</div>', '<div class=\"note-holder\" data-event=\"backColor\"><!-- back colors --></div>', '<div>', '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"backColorPicker\">', this.lang.color.cpSelect, '</button>', '<input type=\"color\" id=\"backColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette\">', '</div>', '<div class=\"note-holder-custom\" id=\"backColorPalette\" data-event=\"backColor\"></div>', '</div>'].join('') : '') + (foreColor ? ['<div class=\"note-palette\">', '<div class=\"note-palette-title\">' + this.lang.color.foreground + '</div>', '<div>', '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"removeFormat\" data-value=\"foreColor\">', this.lang.color.resetToDefault, '</button>', '</div>', '<div class=\"note-holder\" data-event=\"foreColor\"><!-- fore colors --></div>', '<div>', '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"foreColorPicker\">', this.lang.color.cpSelect, '</button>', '<input type=\"color\" id=\"foreColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette\">', '</div>', // Fix missing Div, Commented to find easily if it's wrong\n                  '<div class=\"note-holder-custom\" id=\"foreColorPalette\" data-event=\"foreColor\"></div>', '</div>'].join('') : ''),\n                  callback: function callback($dropdown) {\n                    $dropdown.find('.note-holder').each(function (idx, item) {\n                      var $holder = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item);\n                      $holder.append(_this.ui.palette({\n                        colors: _this.options.colors,\n                        colorsName: _this.options.colorsName,\n                        eventName: $holder.data('event'),\n                        container: _this.options.container,\n                        tooltip: _this.options.tooltip\n                      }).render());\n                    });\n                    /* TODO: do we have to record recent custom colors within cookies? */\n\n                    var customColors = [['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF']];\n                    $dropdown.find('.note-holder-custom').each(function (idx, item) {\n                      var $holder = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item);\n                      $holder.append(_this.ui.palette({\n                        colors: customColors,\n                        colorsName: customColors,\n                        eventName: $holder.data('event'),\n                        container: _this.options.container,\n                        tooltip: _this.options.tooltip\n                      }).render());\n                    });\n                    $dropdown.find('input[type=color]').each(function (idx, item) {\n                      external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item).change(function () {\n                        var $chip = $dropdown.find('#' + external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this).data('event')).find('.note-color-btn').first();\n                        var color = this.value.toUpperCase();\n                        $chip.css('background-color', color).attr('aria-label', color).attr('data-value', color).attr('data-original-title', color);\n                        $chip.click();\n                      });\n                    });\n                  },\n                  click: function click(event) {\n                    event.stopPropagation();\n                    var $parent = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('.' + className).find('.note-dropdown-menu');\n                    var $button = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(event.target);\n                    var eventName = $button.data('event');\n                    var value = $button.attr('data-value');\n\n                    if (eventName === 'openPalette') {\n                      var $picker = $parent.find('#' + value);\n                      var $palette = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()($parent.find('#' + $picker.data('event')).find('.note-color-row')[0]); // Shift palette chips\n\n                      var $chip = $palette.find('.note-color-btn').last().detach(); // Set chip attributes\n\n                      var color = $picker.val();\n                      $chip.css('background-color', color).attr('aria-label', color).attr('data-value', color).attr('data-original-title', color);\n                      $palette.prepend($chip);\n                      $picker.click();\n                    } else {\n                      if (lists.contains(['backColor', 'foreColor'], eventName)) {\n                        var key = eventName === 'backColor' ? 'background-color' : 'color';\n                        var $color = $button.closest('.note-color').find('.note-recent-color');\n                        var $currentButton = $button.closest('.note-color').find('.note-current-color-button');\n                        $color.css(key, value);\n                        $currentButton.attr('data-' + eventName, value);\n                      }\n\n                      _this.context.invoke('editor.' + eventName, value);\n                    }\n                  }\n                })]\n              }).render();\n            }\n          }, {\n            key: \"addToolbarButtons\",\n            value: function addToolbarButtons() {\n              var _this2 = this;\n\n              this.context.memo('button.style', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents(_this2.ui.icon(_this2.options.icons.magic), _this2.options),\n                  tooltip: _this2.lang.style.style,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdown({\n                  className: 'dropdown-style',\n                  items: _this2.options.styleTags,\n                  title: _this2.lang.style.style,\n                  template: function template(item) {\n                    // TBD: need to be simplified\n                    if (typeof item === 'string') {\n                      item = {\n                        tag: item,\n                        title: Object.prototype.hasOwnProperty.call(_this2.lang.style, item) ? _this2.lang.style[item] : item\n                      };\n                    }\n\n                    var tag = item.tag;\n                    var title = item.title;\n                    var style = item.style ? ' style=\"' + item.style + '\" ' : '';\n                    var className = item.className ? ' class=\"' + item.className + '\"' : '';\n                    return '<' + tag + style + className + '>' + title + '</' + tag + '>';\n                  },\n                  click: _this2.context.createInvokeHandler('editor.formatBlock')\n                })]).render();\n              });\n\n              var _loop = function _loop(styleIdx, styleLen) {\n                var item = _this2.options.styleTags[styleIdx];\n\n                _this2.context.memo('button.style.' + item, function () {\n                  return _this2.button({\n                    className: 'note-btn-style-' + item,\n                    contents: '<div data-value=\"' + item + '\">' + item.toUpperCase() + '</div>',\n                    tooltip: _this2.lang.style[item],\n                    click: _this2.context.createInvokeHandler('editor.formatBlock')\n                  }).render();\n                });\n              };\n\n              for (var styleIdx = 0, styleLen = this.options.styleTags.length; styleIdx < styleLen; styleIdx++) {\n                _loop(styleIdx, styleLen);\n              }\n\n              this.context.memo('button.bold', function () {\n                return _this2.button({\n                  className: 'note-btn-bold',\n                  contents: _this2.ui.icon(_this2.options.icons.bold),\n                  tooltip: _this2.lang.font.bold + _this2.representShortcut('bold'),\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.bold')\n                }).render();\n              });\n              this.context.memo('button.italic', function () {\n                return _this2.button({\n                  className: 'note-btn-italic',\n                  contents: _this2.ui.icon(_this2.options.icons.italic),\n                  tooltip: _this2.lang.font.italic + _this2.representShortcut('italic'),\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.italic')\n                }).render();\n              });\n              this.context.memo('button.underline', function () {\n                return _this2.button({\n                  className: 'note-btn-underline',\n                  contents: _this2.ui.icon(_this2.options.icons.underline),\n                  tooltip: _this2.lang.font.underline + _this2.representShortcut('underline'),\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.underline')\n                }).render();\n              });\n              this.context.memo('button.clear', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.eraser),\n                  tooltip: _this2.lang.font.clear + _this2.representShortcut('removeFormat'),\n                  click: _this2.context.createInvokeHandler('editor.removeFormat')\n                }).render();\n              });\n              this.context.memo('button.strikethrough', function () {\n                return _this2.button({\n                  className: 'note-btn-strikethrough',\n                  contents: _this2.ui.icon(_this2.options.icons.strikethrough),\n                  tooltip: _this2.lang.font.strikethrough + _this2.representShortcut('strikethrough'),\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.strikethrough')\n                }).render();\n              });\n              this.context.memo('button.superscript', function () {\n                return _this2.button({\n                  className: 'note-btn-superscript',\n                  contents: _this2.ui.icon(_this2.options.icons.superscript),\n                  tooltip: _this2.lang.font.superscript,\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.superscript')\n                }).render();\n              });\n              this.context.memo('button.subscript', function () {\n                return _this2.button({\n                  className: 'note-btn-subscript',\n                  contents: _this2.ui.icon(_this2.options.icons.subscript),\n                  tooltip: _this2.lang.font.subscript,\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.subscript')\n                }).render();\n              });\n              this.context.memo('button.fontname', function () {\n                var styleInfo = _this2.context.invoke('editor.currentStyle');\n\n                if (_this2.options.addDefaultFonts) {\n                  // Add 'default' fonts into the fontnames array if not exist\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(styleInfo['font-family'].split(','), function (idx, fontname) {\n                    fontname = fontname.trim().replace(/['\"]+/g, '');\n\n                    if (_this2.isFontDeservedToAdd(fontname)) {\n                      if (_this2.options.fontNames.indexOf(fontname) === -1) {\n                        _this2.options.fontNames.push(fontname);\n                      }\n                    }\n                  });\n                }\n\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents('<span class=\"note-current-fontname\"></span>', _this2.options),\n                  tooltip: _this2.lang.font.name,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdownCheck({\n                  className: 'dropdown-fontname',\n                  checkClassName: _this2.options.icons.menuCheck,\n                  items: _this2.options.fontNames.filter(_this2.isFontInstalled.bind(_this2)),\n                  title: _this2.lang.font.name,\n                  template: function template(item) {\n                    return '<span style=\"font-family: ' + env.validFontName(item) + '\">' + item + '</span>';\n                  },\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.fontName')\n                })]).render();\n              });\n              this.context.memo('button.fontsize', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>', _this2.options),\n                  tooltip: _this2.lang.font.size,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdownCheck({\n                  className: 'dropdown-fontsize',\n                  checkClassName: _this2.options.icons.menuCheck,\n                  items: _this2.options.fontSizes,\n                  title: _this2.lang.font.size,\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.fontSize')\n                })]).render();\n              });\n              this.context.memo('button.fontsizeunit', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>', _this2.options),\n                  tooltip: _this2.lang.font.sizeunit,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdownCheck({\n                  className: 'dropdown-fontsizeunit',\n                  checkClassName: _this2.options.icons.menuCheck,\n                  items: _this2.options.fontSizeUnits,\n                  title: _this2.lang.font.sizeunit,\n                  click: _this2.context.createInvokeHandlerAndUpdateState('editor.fontSizeUnit')\n                })]).render();\n              });\n              this.context.memo('button.color', function () {\n                return _this2.colorPalette('note-color-all', _this2.lang.color.recent, true, true);\n              });\n              this.context.memo('button.forecolor', function () {\n                return _this2.colorPalette('note-color-fore', _this2.lang.color.foreground, false, true);\n              });\n              this.context.memo('button.backcolor', function () {\n                return _this2.colorPalette('note-color-back', _this2.lang.color.background, true, false);\n              });\n              this.context.memo('button.ul', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.unorderedlist),\n                  tooltip: _this2.lang.lists.unordered + _this2.representShortcut('insertUnorderedList'),\n                  click: _this2.context.createInvokeHandler('editor.insertUnorderedList')\n                }).render();\n              });\n              this.context.memo('button.ol', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.orderedlist),\n                  tooltip: _this2.lang.lists.ordered + _this2.representShortcut('insertOrderedList'),\n                  click: _this2.context.createInvokeHandler('editor.insertOrderedList')\n                }).render();\n              });\n              var justifyLeft = this.button({\n                contents: this.ui.icon(this.options.icons.alignLeft),\n                tooltip: this.lang.paragraph.left + this.representShortcut('justifyLeft'),\n                click: this.context.createInvokeHandler('editor.justifyLeft')\n              });\n              var justifyCenter = this.button({\n                contents: this.ui.icon(this.options.icons.alignCenter),\n                tooltip: this.lang.paragraph.center + this.representShortcut('justifyCenter'),\n                click: this.context.createInvokeHandler('editor.justifyCenter')\n              });\n              var justifyRight = this.button({\n                contents: this.ui.icon(this.options.icons.alignRight),\n                tooltip: this.lang.paragraph.right + this.representShortcut('justifyRight'),\n                click: this.context.createInvokeHandler('editor.justifyRight')\n              });\n              var justifyFull = this.button({\n                contents: this.ui.icon(this.options.icons.alignJustify),\n                tooltip: this.lang.paragraph.justify + this.representShortcut('justifyFull'),\n                click: this.context.createInvokeHandler('editor.justifyFull')\n              });\n              var outdent = this.button({\n                contents: this.ui.icon(this.options.icons.outdent),\n                tooltip: this.lang.paragraph.outdent + this.representShortcut('outdent'),\n                click: this.context.createInvokeHandler('editor.outdent')\n              });\n              var indent = this.button({\n                contents: this.ui.icon(this.options.icons.indent),\n                tooltip: this.lang.paragraph.indent + this.representShortcut('indent'),\n                click: this.context.createInvokeHandler('editor.indent')\n              });\n              this.context.memo('button.justifyLeft', func.invoke(justifyLeft, 'render'));\n              this.context.memo('button.justifyCenter', func.invoke(justifyCenter, 'render'));\n              this.context.memo('button.justifyRight', func.invoke(justifyRight, 'render'));\n              this.context.memo('button.justifyFull', func.invoke(justifyFull, 'render'));\n              this.context.memo('button.outdent', func.invoke(outdent, 'render'));\n              this.context.memo('button.indent', func.invoke(indent, 'render'));\n              this.context.memo('button.paragraph', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents(_this2.ui.icon(_this2.options.icons.alignLeft), _this2.options),\n                  tooltip: _this2.lang.paragraph.paragraph,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdown([_this2.ui.buttonGroup({\n                  className: 'note-align',\n                  children: [justifyLeft, justifyCenter, justifyRight, justifyFull]\n                }), _this2.ui.buttonGroup({\n                  className: 'note-list',\n                  children: [outdent, indent]\n                })])]).render();\n              });\n              this.context.memo('button.height', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents(_this2.ui.icon(_this2.options.icons.textHeight), _this2.options),\n                  tooltip: _this2.lang.font.height,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdownCheck({\n                  items: _this2.options.lineHeights,\n                  checkClassName: _this2.options.icons.menuCheck,\n                  className: 'dropdown-line-height',\n                  title: _this2.lang.font.height,\n                  click: _this2.context.createInvokeHandler('editor.lineHeight')\n                })]).render();\n              });\n              this.context.memo('button.table', function () {\n                return _this2.ui.buttonGroup([_this2.button({\n                  className: 'dropdown-toggle',\n                  contents: _this2.ui.dropdownButtonContents(_this2.ui.icon(_this2.options.icons.table), _this2.options),\n                  tooltip: _this2.lang.table.table,\n                  data: {\n                    toggle: 'dropdown'\n                  }\n                }), _this2.ui.dropdown({\n                  title: _this2.lang.table.table,\n                  className: 'note-table',\n                  items: ['<div class=\"note-dimension-picker\">', '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>', '<div class=\"note-dimension-picker-highlighted\"></div>', '<div class=\"note-dimension-picker-unhighlighted\"></div>', '</div>', '<div class=\"note-dimension-display\">1 x 1</div>'].join('')\n                })], {\n                  callback: function callback($node) {\n                    var $catcher = $node.find('.note-dimension-picker-mousecatcher');\n                    $catcher.css({\n                      width: _this2.options.insertTableMaxSize.col + 'em',\n                      height: _this2.options.insertTableMaxSize.row + 'em'\n                    }).mousedown(_this2.context.createInvokeHandler('editor.insertTable')).on('mousemove', _this2.tableMoveHandler.bind(_this2));\n                  }\n                }).render();\n              });\n              this.context.memo('button.link', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.link),\n                  tooltip: _this2.lang.link.link + _this2.representShortcut('linkDialog.show'),\n                  click: _this2.context.createInvokeHandler('linkDialog.show')\n                }).render();\n              });\n              this.context.memo('button.picture', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.picture),\n                  tooltip: _this2.lang.image.image,\n                  click: _this2.context.createInvokeHandler('imageDialog.show')\n                }).render();\n              });\n              this.context.memo('button.video', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.video),\n                  tooltip: _this2.lang.video.video,\n                  click: _this2.context.createInvokeHandler('videoDialog.show')\n                }).render();\n              });\n              this.context.memo('button.hr', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.minus),\n                  tooltip: _this2.lang.hr.insert + _this2.representShortcut('insertHorizontalRule'),\n                  click: _this2.context.createInvokeHandler('editor.insertHorizontalRule')\n                }).render();\n              });\n              this.context.memo('button.fullscreen', function () {\n                return _this2.button({\n                  className: 'btn-fullscreen note-codeview-keep',\n                  contents: _this2.ui.icon(_this2.options.icons.arrowsAlt),\n                  tooltip: _this2.lang.options.fullscreen,\n                  click: _this2.context.createInvokeHandler('fullscreen.toggle')\n                }).render();\n              });\n              this.context.memo('button.codeview', function () {\n                return _this2.button({\n                  className: 'btn-codeview note-codeview-keep',\n                  contents: _this2.ui.icon(_this2.options.icons.code),\n                  tooltip: _this2.lang.options.codeview,\n                  click: _this2.context.createInvokeHandler('codeview.toggle')\n                }).render();\n              });\n              this.context.memo('button.redo', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.redo),\n                  tooltip: _this2.lang.history.redo + _this2.representShortcut('redo'),\n                  click: _this2.context.createInvokeHandler('editor.redo')\n                }).render();\n              });\n              this.context.memo('button.undo', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.undo),\n                  tooltip: _this2.lang.history.undo + _this2.representShortcut('undo'),\n                  click: _this2.context.createInvokeHandler('editor.undo')\n                }).render();\n              });\n              this.context.memo('button.help', function () {\n                return _this2.button({\n                  contents: _this2.ui.icon(_this2.options.icons.question),\n                  tooltip: _this2.lang.options.help,\n                  click: _this2.context.createInvokeHandler('helpDialog.show')\n                }).render();\n              });\n            }\n            /**\n             * image: [\n             *   ['imageResize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\n             *   ['float', ['floatLeft', 'floatRight', 'floatNone']],\n             *   ['remove', ['removeMedia']],\n             * ],\n             */\n\n          }, {\n            key: \"addImagePopoverButtons\",\n            value: function addImagePopoverButtons() {\n              var _this3 = this; // Image Size Buttons\n\n\n              this.context.memo('button.resizeFull', function () {\n                return _this3.button({\n                  contents: '<span class=\"note-fontsize-10\">100%</span>',\n                  tooltip: _this3.lang.image.resizeFull,\n                  click: _this3.context.createInvokeHandler('editor.resize', '1')\n                }).render();\n              });\n              this.context.memo('button.resizeHalf', function () {\n                return _this3.button({\n                  contents: '<span class=\"note-fontsize-10\">50%</span>',\n                  tooltip: _this3.lang.image.resizeHalf,\n                  click: _this3.context.createInvokeHandler('editor.resize', '0.5')\n                }).render();\n              });\n              this.context.memo('button.resizeQuarter', function () {\n                return _this3.button({\n                  contents: '<span class=\"note-fontsize-10\">25%</span>',\n                  tooltip: _this3.lang.image.resizeQuarter,\n                  click: _this3.context.createInvokeHandler('editor.resize', '0.25')\n                }).render();\n              });\n              this.context.memo('button.resizeNone', function () {\n                return _this3.button({\n                  contents: _this3.ui.icon(_this3.options.icons.rollback),\n                  tooltip: _this3.lang.image.resizeNone,\n                  click: _this3.context.createInvokeHandler('editor.resize', '0')\n                }).render();\n              }); // Float Buttons\n\n              this.context.memo('button.floatLeft', function () {\n                return _this3.button({\n                  contents: _this3.ui.icon(_this3.options.icons.floatLeft),\n                  tooltip: _this3.lang.image.floatLeft,\n                  click: _this3.context.createInvokeHandler('editor.floatMe', 'left')\n                }).render();\n              });\n              this.context.memo('button.floatRight', function () {\n                return _this3.button({\n                  contents: _this3.ui.icon(_this3.options.icons.floatRight),\n                  tooltip: _this3.lang.image.floatRight,\n                  click: _this3.context.createInvokeHandler('editor.floatMe', 'right')\n                }).render();\n              });\n              this.context.memo('button.floatNone', function () {\n                return _this3.button({\n                  contents: _this3.ui.icon(_this3.options.icons.rollback),\n                  tooltip: _this3.lang.image.floatNone,\n                  click: _this3.context.createInvokeHandler('editor.floatMe', 'none')\n                }).render();\n              }); // Remove Buttons\n\n              this.context.memo('button.removeMedia', function () {\n                return _this3.button({\n                  contents: _this3.ui.icon(_this3.options.icons.trash),\n                  tooltip: _this3.lang.image.remove,\n                  click: _this3.context.createInvokeHandler('editor.removeMedia')\n                }).render();\n              });\n            }\n          }, {\n            key: \"addLinkPopoverButtons\",\n            value: function addLinkPopoverButtons() {\n              var _this4 = this;\n\n              this.context.memo('button.linkDialogShow', function () {\n                return _this4.button({\n                  contents: _this4.ui.icon(_this4.options.icons.link),\n                  tooltip: _this4.lang.link.edit,\n                  click: _this4.context.createInvokeHandler('linkDialog.show')\n                }).render();\n              });\n              this.context.memo('button.unlink', function () {\n                return _this4.button({\n                  contents: _this4.ui.icon(_this4.options.icons.unlink),\n                  tooltip: _this4.lang.link.unlink,\n                  click: _this4.context.createInvokeHandler('editor.unlink')\n                }).render();\n              });\n            }\n            /**\n             * table : [\n             *  ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\n             *  ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]\n             * ],\n             */\n\n          }, {\n            key: \"addTablePopoverButtons\",\n            value: function addTablePopoverButtons() {\n              var _this5 = this;\n\n              this.context.memo('button.addRowUp', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.rowAbove),\n                  tooltip: _this5.lang.table.addRowAbove,\n                  click: _this5.context.createInvokeHandler('editor.addRow', 'top')\n                }).render();\n              });\n              this.context.memo('button.addRowDown', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.rowBelow),\n                  tooltip: _this5.lang.table.addRowBelow,\n                  click: _this5.context.createInvokeHandler('editor.addRow', 'bottom')\n                }).render();\n              });\n              this.context.memo('button.addColLeft', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.colBefore),\n                  tooltip: _this5.lang.table.addColLeft,\n                  click: _this5.context.createInvokeHandler('editor.addCol', 'left')\n                }).render();\n              });\n              this.context.memo('button.addColRight', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.colAfter),\n                  tooltip: _this5.lang.table.addColRight,\n                  click: _this5.context.createInvokeHandler('editor.addCol', 'right')\n                }).render();\n              });\n              this.context.memo('button.deleteRow', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.rowRemove),\n                  tooltip: _this5.lang.table.delRow,\n                  click: _this5.context.createInvokeHandler('editor.deleteRow')\n                }).render();\n              });\n              this.context.memo('button.deleteCol', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.colRemove),\n                  tooltip: _this5.lang.table.delCol,\n                  click: _this5.context.createInvokeHandler('editor.deleteCol')\n                }).render();\n              });\n              this.context.memo('button.deleteTable', function () {\n                return _this5.button({\n                  className: 'btn-md',\n                  contents: _this5.ui.icon(_this5.options.icons.trash),\n                  tooltip: _this5.lang.table.delTable,\n                  click: _this5.context.createInvokeHandler('editor.deleteTable')\n                }).render();\n              });\n            }\n          }, {\n            key: \"build\",\n            value: function build($container, groups) {\n              for (var groupIdx = 0, groupLen = groups.length; groupIdx < groupLen; groupIdx++) {\n                var group = groups[groupIdx];\n                var groupName = Array.isArray(group) ? group[0] : group;\n                var buttons = Array.isArray(group) ? group.length === 1 ? [group[0]] : group[1] : [group];\n                var $group = this.ui.buttonGroup({\n                  className: 'note-' + groupName\n                }).render();\n\n                for (var idx = 0, len = buttons.length; idx < len; idx++) {\n                  var btn = this.context.memo('button.' + buttons[idx]);\n\n                  if (btn) {\n                    $group.append(typeof btn === 'function' ? btn(this.context) : btn);\n                  }\n                }\n\n                $group.appendTo($container);\n              }\n            }\n            /**\n             * @param {jQuery} [$container]\n             */\n\n          }, {\n            key: \"updateCurrentStyle\",\n            value: function updateCurrentStyle($container) {\n              var _this6 = this;\n\n              var $cont = $container || this.$toolbar;\n              var styleInfo = this.context.invoke('editor.currentStyle');\n              this.updateBtnStates($cont, {\n                '.note-btn-bold': function noteBtnBold() {\n                  return styleInfo['font-bold'] === 'bold';\n                },\n                '.note-btn-italic': function noteBtnItalic() {\n                  return styleInfo['font-italic'] === 'italic';\n                },\n                '.note-btn-underline': function noteBtnUnderline() {\n                  return styleInfo['font-underline'] === 'underline';\n                },\n                '.note-btn-subscript': function noteBtnSubscript() {\n                  return styleInfo['font-subscript'] === 'subscript';\n                },\n                '.note-btn-superscript': function noteBtnSuperscript() {\n                  return styleInfo['font-superscript'] === 'superscript';\n                },\n                '.note-btn-strikethrough': function noteBtnStrikethrough() {\n                  return styleInfo['font-strikethrough'] === 'strikethrough';\n                }\n              });\n\n              if (styleInfo['font-family']) {\n                var fontNames = styleInfo['font-family'].split(',').map(function (name) {\n                  return name.replace(/[\\'\\\"]/g, '').replace(/\\s+$/, '').replace(/^\\s+/, '');\n                });\n                var fontName = lists.find(fontNames, this.isFontInstalled.bind(this));\n                $cont.find('.dropdown-fontname a').each(function (idx, item) {\n                  var $item = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item); // always compare string to avoid creating another func.\n\n                  var isChecked = $item.data('value') + '' === fontName + '';\n                  $item.toggleClass('checked', isChecked);\n                });\n                $cont.find('.note-current-fontname').text(fontName).css('font-family', fontName);\n              }\n\n              if (styleInfo['font-size']) {\n                var fontSize = styleInfo['font-size'];\n                $cont.find('.dropdown-fontsize a').each(function (idx, item) {\n                  var $item = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item); // always compare with string to avoid creating another func.\n\n                  var isChecked = $item.data('value') + '' === fontSize + '';\n                  $item.toggleClass('checked', isChecked);\n                });\n                $cont.find('.note-current-fontsize').text(fontSize);\n                var fontSizeUnit = styleInfo['font-size-unit'];\n                $cont.find('.dropdown-fontsizeunit a').each(function (idx, item) {\n                  var $item = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item);\n                  var isChecked = $item.data('value') + '' === fontSizeUnit + '';\n                  $item.toggleClass('checked', isChecked);\n                });\n                $cont.find('.note-current-fontsizeunit').text(fontSizeUnit);\n              }\n\n              if (styleInfo['line-height']) {\n                var lineHeight = styleInfo['line-height'];\n                $cont.find('.dropdown-line-height li a').each(function (idx, item) {\n                  // always compare with string to avoid creating another func.\n                  var isChecked = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(item).data('value') + '' === lineHeight + '';\n                  _this6.className = isChecked ? 'checked' : '';\n                });\n              }\n            }\n          }, {\n            key: \"updateBtnStates\",\n            value: function updateBtnStates($container, infos) {\n              var _this7 = this;\n\n              external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.each(infos, function (selector, pred) {\n                _this7.ui.toggleBtnActive($container.find(selector), pred());\n              });\n            }\n          }, {\n            key: \"tableMoveHandler\",\n            value: function tableMoveHandler(event) {\n              var PX_PER_EM = 18;\n              var $picker = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(event.target.parentNode); // target is mousecatcher\n\n              var $dimensionDisplay = $picker.next();\n              var $catcher = $picker.find('.note-dimension-picker-mousecatcher');\n              var $highlighted = $picker.find('.note-dimension-picker-highlighted');\n              var $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\n              var posOffset; // HTML5 with jQuery - e.offsetX is undefined in Firefox\n\n              if (event.offsetX === undefined) {\n                var posCatcher = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(event.target).offset();\n                posOffset = {\n                  x: event.pageX - posCatcher.left,\n                  y: event.pageY - posCatcher.top\n                };\n              } else {\n                posOffset = {\n                  x: event.offsetX,\n                  y: event.offsetY\n                };\n              }\n\n              var dim = {\n                c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\n                r: Math.ceil(posOffset.y / PX_PER_EM) || 1\n              };\n              $highlighted.css({\n                width: dim.c + 'em',\n                height: dim.r + 'em'\n              });\n              $catcher.data('value', dim.c + 'x' + dim.r);\n\n              if (dim.c > 3 && dim.c < this.options.insertTableMaxSize.col) {\n                $unhighlighted.css({\n                  width: dim.c + 1 + 'em'\n                });\n              }\n\n              if (dim.r > 3 && dim.r < this.options.insertTableMaxSize.row) {\n                $unhighlighted.css({\n                  height: dim.r + 1 + 'em'\n                });\n              }\n\n              $dimensionDisplay.html(dim.c + ' x ' + dim.r);\n            }\n          }]);\n          return Buttons;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/Toolbar.js\n\n\n        function Toolbar_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function Toolbar_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function Toolbar_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) Toolbar_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) Toolbar_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var Toolbar_Toolbar = /*#__PURE__*/function () {\n          function Toolbar(context) {\n            Toolbar_classCallCheck(this, Toolbar);\n            this.context = context;\n            this.$window = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(window);\n            this.$document = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document);\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$note = context.layoutInfo.note;\n            this.$editor = context.layoutInfo.editor;\n            this.$toolbar = context.layoutInfo.toolbar;\n            this.$editable = context.layoutInfo.editable;\n            this.$statusbar = context.layoutInfo.statusbar;\n            this.options = context.options;\n            this.isFollowing = false;\n            this.followScroll = this.followScroll.bind(this);\n          }\n\n          Toolbar_createClass(Toolbar, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !this.options.airMode;\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              var _this = this;\n\n              this.options.toolbar = this.options.toolbar || [];\n\n              if (!this.options.toolbar.length) {\n                this.$toolbar.hide();\n              } else {\n                this.context.invoke('buttons.build', this.$toolbar, this.options.toolbar);\n              }\n\n              if (this.options.toolbarContainer) {\n                this.$toolbar.appendTo(this.options.toolbarContainer);\n              }\n\n              this.changeContainer(false);\n              this.$note.on('summernote.keyup summernote.mouseup summernote.change', function () {\n                _this.context.invoke('buttons.updateCurrentStyle');\n              });\n              this.context.invoke('buttons.updateCurrentStyle');\n\n              if (this.options.followingToolbar) {\n                this.$window.on('scroll resize', this.followScroll);\n              }\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$toolbar.children().remove();\n\n              if (this.options.followingToolbar) {\n                this.$window.off('scroll resize', this.followScroll);\n              }\n            }\n          }, {\n            key: \"followScroll\",\n            value: function followScroll() {\n              if (this.$editor.hasClass('fullscreen')) {\n                return false;\n              }\n\n              var editorHeight = this.$editor.outerHeight();\n              var editorWidth = this.$editor.width();\n              var toolbarHeight = this.$toolbar.height();\n              var statusbarHeight = this.$statusbar.height(); // check if the web app is currently using another static bar\n\n              var otherBarHeight = 0;\n\n              if (this.options.otherStaticBar) {\n                otherBarHeight = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.otherStaticBar).outerHeight();\n              }\n\n              var currentOffset = this.$document.scrollTop();\n              var editorOffsetTop = this.$editor.offset().top;\n              var editorOffsetBottom = editorOffsetTop + editorHeight;\n              var activateOffset = editorOffsetTop - otherBarHeight;\n              var deactivateOffsetBottom = editorOffsetBottom - otherBarHeight - toolbarHeight - statusbarHeight;\n\n              if (!this.isFollowing && currentOffset > activateOffset && currentOffset < deactivateOffsetBottom - toolbarHeight) {\n                this.isFollowing = true;\n                this.$editable.css({\n                  marginTop: this.$toolbar.outerHeight()\n                });\n                this.$toolbar.css({\n                  position: 'fixed',\n                  top: otherBarHeight,\n                  width: editorWidth,\n                  zIndex: 1000\n                });\n              } else if (this.isFollowing && (currentOffset < activateOffset || currentOffset > deactivateOffsetBottom)) {\n                this.isFollowing = false;\n                this.$toolbar.css({\n                  position: 'relative',\n                  top: 0,\n                  width: '100%',\n                  zIndex: 'auto'\n                });\n                this.$editable.css({\n                  marginTop: ''\n                });\n              }\n            }\n          }, {\n            key: \"changeContainer\",\n            value: function changeContainer(isFullscreen) {\n              if (isFullscreen) {\n                this.$toolbar.prependTo(this.$editor);\n              } else {\n                if (this.options.toolbarContainer) {\n                  this.$toolbar.appendTo(this.options.toolbarContainer);\n                }\n              }\n\n              if (this.options.followingToolbar) {\n                this.followScroll();\n              }\n            }\n          }, {\n            key: \"updateFullscreen\",\n            value: function updateFullscreen(isFullscreen) {\n              this.ui.toggleBtnActive(this.$toolbar.find('.btn-fullscreen'), isFullscreen);\n              this.changeContainer(isFullscreen);\n            }\n          }, {\n            key: \"updateCodeview\",\n            value: function updateCodeview(isCodeview) {\n              this.ui.toggleBtnActive(this.$toolbar.find('.btn-codeview'), isCodeview);\n\n              if (isCodeview) {\n                this.deactivate();\n              } else {\n                this.activate();\n              }\n            }\n          }, {\n            key: \"activate\",\n            value: function activate(isIncludeCodeview) {\n              var $btn = this.$toolbar.find('button');\n\n              if (!isIncludeCodeview) {\n                $btn = $btn.not('.note-codeview-keep');\n              }\n\n              this.ui.toggleBtn($btn, true);\n            }\n          }, {\n            key: \"deactivate\",\n            value: function deactivate(isIncludeCodeview) {\n              var $btn = this.$toolbar.find('button');\n\n              if (!isIncludeCodeview) {\n                $btn = $btn.not('.note-codeview-keep');\n              }\n\n              this.ui.toggleBtn($btn, false);\n            }\n          }]);\n          return Toolbar;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/LinkDialog.js\n\n\n        function LinkDialog_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function LinkDialog_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function LinkDialog_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) LinkDialog_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) LinkDialog_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var LinkDialog_LinkDialog = /*#__PURE__*/function () {\n          function LinkDialog(context) {\n            LinkDialog_classCallCheck(this, LinkDialog);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$body = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document.body);\n            this.$editor = context.layoutInfo.editor;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n            context.memo('help.linkDialog.show', this.options.langInfo.help['linkDialog.show']);\n          }\n\n          LinkDialog_createClass(LinkDialog, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var $container = this.options.dialogsInBody ? this.$body : this.options.container;\n              var body = ['<div class=\"form-group note-form-group\">', \"<label for=\\\"note-dialog-link-txt-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.link.textToDisplay, \"</label>\"), \"<input id=\\\"note-dialog-link-txt-\".concat(this.options.id, \"\\\" class=\\\"note-link-text form-control note-form-control note-input\\\" type=\\\"text\\\"/>\"), '</div>', '<div class=\"form-group note-form-group\">', \"<label for=\\\"note-dialog-link-url-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.link.url, \"</label>\"), \"<input id=\\\"note-dialog-link-url-\".concat(this.options.id, \"\\\" class=\\\"note-link-url form-control note-form-control note-input\\\" type=\\\"text\\\" value=\\\"http://\\\"/>\"), '</div>', !this.options.disableLinkTarget ? external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div/>').append(this.ui.checkbox({\n                className: 'sn-checkbox-open-in-new-window',\n                text: this.lang.link.openInNewWindow,\n                checked: true\n              }).render()).html() : '', external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div/>').append(this.ui.checkbox({\n                className: 'sn-checkbox-use-protocol',\n                text: this.lang.link.useProtocol,\n                checked: true\n              }).render()).html()].join('');\n              var buttonClass = 'btn btn-primary note-btn note-btn-primary note-link-btn';\n              var footer = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"\".concat(buttonClass, \"\\\" value=\\\"\").concat(this.lang.link.insert, \"\\\" disabled>\");\n              this.$dialog = this.ui.dialog({\n                className: 'link-dialog',\n                title: this.lang.link.insert,\n                fade: this.options.dialogsFade,\n                body: body,\n                footer: footer\n              }).render().appendTo($container);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.ui.hideDialog(this.$dialog);\n              this.$dialog.remove();\n            }\n          }, {\n            key: \"bindEnterKey\",\n            value: function bindEnterKey($input, $btn) {\n              $input.on('keypress', function (event) {\n                if (event.keyCode === core_key.code.ENTER) {\n                  event.preventDefault();\n                  $btn.trigger('click');\n                }\n              });\n            }\n            /**\n             * toggle update button\n             */\n\n          }, {\n            key: \"toggleLinkBtn\",\n            value: function toggleLinkBtn($linkBtn, $linkText, $linkUrl) {\n              this.ui.toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\n            }\n            /**\n             * Show link dialog and set event handlers on dialog controls.\n             *\n             * @param {Object} linkInfo\n             * @return {Promise}\n             */\n\n          }, {\n            key: \"showLinkDialog\",\n            value: function showLinkDialog(linkInfo) {\n              var _this = this;\n\n              return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n                var $linkText = _this.$dialog.find('.note-link-text');\n\n                var $linkUrl = _this.$dialog.find('.note-link-url');\n\n                var $linkBtn = _this.$dialog.find('.note-link-btn');\n\n                var $openInNewWindow = _this.$dialog.find('.sn-checkbox-open-in-new-window input[type=checkbox]');\n\n                var $useProtocol = _this.$dialog.find('.sn-checkbox-use-protocol input[type=checkbox]');\n\n                _this.ui.onDialogShown(_this.$dialog, function () {\n                  _this.context.triggerEvent('dialog.shown'); // If no url was given and given text is valid URL then copy that into URL Field\n\n\n                  if (!linkInfo.url && func.isValidUrl(linkInfo.text)) {\n                    linkInfo.url = linkInfo.text;\n                  }\n\n                  $linkText.on('input paste propertychange', function () {\n                    // If linktext was modified by input events,\n                    // cloning text from linkUrl will be stopped.\n                    linkInfo.text = $linkText.val();\n\n                    _this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n                  }).val(linkInfo.text);\n                  $linkUrl.on('input paste propertychange', function () {\n                    // Display same text on `Text to display` as default\n                    // when linktext has no text\n                    if (!linkInfo.text) {\n                      $linkText.val($linkUrl.val());\n                    }\n\n                    _this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n                  }).val(linkInfo.url);\n\n                  if (!env.isSupportTouch) {\n                    $linkUrl.trigger('focus');\n                  }\n\n                  _this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n\n                  _this.bindEnterKey($linkUrl, $linkBtn);\n\n                  _this.bindEnterKey($linkText, $linkBtn);\n\n                  var isNewWindowChecked = linkInfo.isNewWindow !== undefined ? linkInfo.isNewWindow : _this.context.options.linkTargetBlank;\n                  $openInNewWindow.prop('checked', isNewWindowChecked);\n                  var useProtocolChecked = linkInfo.url ? false : _this.context.options.useProtocol;\n                  $useProtocol.prop('checked', useProtocolChecked);\n                  $linkBtn.one('click', function (event) {\n                    event.preventDefault();\n                    deferred.resolve({\n                      range: linkInfo.range,\n                      url: $linkUrl.val(),\n                      text: $linkText.val(),\n                      isNewWindow: $openInNewWindow.is(':checked'),\n                      checkProtocol: $useProtocol.is(':checked')\n                    });\n\n                    _this.ui.hideDialog(_this.$dialog);\n                  });\n                });\n\n                _this.ui.onDialogHidden(_this.$dialog, function () {\n                  // detach events\n                  $linkText.off();\n                  $linkUrl.off();\n                  $linkBtn.off();\n\n                  if (deferred.state() === 'pending') {\n                    deferred.reject();\n                  }\n                });\n\n                _this.ui.showDialog(_this.$dialog);\n              }).promise();\n            }\n            /**\n             * @param {Object} layoutInfo\n             */\n\n          }, {\n            key: \"show\",\n            value: function show() {\n              var _this2 = this;\n\n              var linkInfo = this.context.invoke('editor.getLinkInfo');\n              this.context.invoke('editor.saveRange');\n              this.showLinkDialog(linkInfo).then(function (linkInfo) {\n                _this2.context.invoke('editor.restoreRange');\n\n                _this2.context.invoke('editor.createLink', linkInfo);\n              }).fail(function () {\n                _this2.context.invoke('editor.restoreRange');\n              });\n            }\n          }]);\n          return LinkDialog;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/LinkPopover.js\n\n\n        function LinkPopover_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function LinkPopover_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function LinkPopover_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) LinkPopover_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) LinkPopover_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var LinkPopover_LinkPopover = /*#__PURE__*/function () {\n          function LinkPopover(context) {\n            var _this = this;\n\n            LinkPopover_classCallCheck(this, LinkPopover);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.options = context.options;\n            this.events = {\n              'summernote.keyup summernote.mouseup summernote.change summernote.scroll': function summernoteKeyupSummernoteMouseupSummernoteChangeSummernoteScroll() {\n                _this.update();\n              },\n              'summernote.disable summernote.dialog.shown summernote.blur': function summernoteDisableSummernoteDialogShownSummernoteBlur() {\n                _this.hide();\n              }\n            };\n          }\n\n          LinkPopover_createClass(LinkPopover, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !lists.isEmpty(this.options.popover.link);\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              this.$popover = this.ui.popover({\n                className: 'note-link-popover',\n                callback: function callback($node) {\n                  var $content = $node.find('.popover-content,.note-popover-content');\n                  $content.prepend('<span><a target=\"_blank\"></a>&nbsp;</span>');\n                }\n              }).render().appendTo(this.options.container);\n              var $content = this.$popover.find('.popover-content,.note-popover-content');\n              this.context.invoke('buttons.build', $content, this.options.popover.link);\n              this.$popover.on('mousedown', function (e) {\n                e.preventDefault();\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$popover.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update() {\n              // Prevent focusing on editable when invoke('code') is executed\n              if (!this.context.invoke('editor.hasFocus')) {\n                this.hide();\n                return;\n              }\n\n              var rng = this.context.invoke('editor.getLastRange');\n\n              if (rng.isCollapsed() && rng.isOnAnchor()) {\n                var anchor = dom.ancestor(rng.sc, dom.isAnchor);\n                var href = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(anchor).attr('href');\n                this.$popover.find('a').attr('href', href).text(href);\n                var pos = dom.posFromPlaceholder(anchor);\n                var containerOffset = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.container).offset();\n                pos.top -= containerOffset.top;\n                pos.left -= containerOffset.left;\n                this.$popover.css({\n                  display: 'block',\n                  left: pos.left,\n                  top: pos.top\n                });\n              } else {\n                this.hide();\n              }\n            }\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              this.$popover.hide();\n            }\n          }]);\n          return LinkPopover;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/ImageDialog.js\n\n\n        function ImageDialog_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function ImageDialog_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function ImageDialog_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) ImageDialog_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) ImageDialog_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var ImageDialog_ImageDialog = /*#__PURE__*/function () {\n          function ImageDialog(context) {\n            ImageDialog_classCallCheck(this, ImageDialog);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$body = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document.body);\n            this.$editor = context.layoutInfo.editor;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n          }\n\n          ImageDialog_createClass(ImageDialog, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var imageLimitation = '';\n\n              if (this.options.maximumImageFileSize) {\n                var unit = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024));\n                var readableSize = (this.options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 + ' ' + ' KMGTP'[unit] + 'B';\n                imageLimitation = \"<small>\".concat(this.lang.image.maximumFileSize + ' : ' + readableSize, \"</small>\");\n              }\n\n              var $container = this.options.dialogsInBody ? this.$body : this.options.container;\n              var body = ['<div class=\"form-group note-form-group note-group-select-from-files\">', '<label for=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.selectFromFiles + '</label>', '<input id=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-image-input form-control-file note-form-control note-input\" ', ' type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\"/>', imageLimitation, '</div>', '<div class=\"form-group note-group-image-url\">', '<label for=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.url + '</label>', '<input id=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>', '</div>'].join('');\n              var buttonClass = 'btn btn-primary note-btn note-btn-primary note-image-btn';\n              var footer = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"\".concat(buttonClass, \"\\\" value=\\\"\").concat(this.lang.image.insert, \"\\\" disabled>\");\n              this.$dialog = this.ui.dialog({\n                title: this.lang.image.insert,\n                fade: this.options.dialogsFade,\n                body: body,\n                footer: footer\n              }).render().appendTo($container);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.ui.hideDialog(this.$dialog);\n              this.$dialog.remove();\n            }\n          }, {\n            key: \"bindEnterKey\",\n            value: function bindEnterKey($input, $btn) {\n              $input.on('keypress', function (event) {\n                if (event.keyCode === core_key.code.ENTER) {\n                  event.preventDefault();\n                  $btn.trigger('click');\n                }\n              });\n            }\n          }, {\n            key: \"show\",\n            value: function show() {\n              var _this = this;\n\n              this.context.invoke('editor.saveRange');\n              this.showImageDialog().then(function (data) {\n                // [workaround] hide dialog before restore range for IE range focus\n                _this.ui.hideDialog(_this.$dialog);\n\n                _this.context.invoke('editor.restoreRange');\n\n                if (typeof data === 'string') {\n                  // image url\n                  // If onImageLinkInsert set,\n                  if (_this.options.callbacks.onImageLinkInsert) {\n                    _this.context.triggerEvent('image.link.insert', data);\n                  } else {\n                    _this.context.invoke('editor.insertImage', data);\n                  }\n                } else {\n                  // array of files\n                  _this.context.invoke('editor.insertImagesOrCallback', data);\n                }\n              }).fail(function () {\n                _this.context.invoke('editor.restoreRange');\n              });\n            }\n            /**\n             * show image dialog\n             *\n             * @param {jQuery} $dialog\n             * @return {Promise}\n             */\n\n          }, {\n            key: \"showImageDialog\",\n            value: function showImageDialog() {\n              var _this2 = this;\n\n              return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n                var $imageInput = _this2.$dialog.find('.note-image-input');\n\n                var $imageUrl = _this2.$dialog.find('.note-image-url');\n\n                var $imageBtn = _this2.$dialog.find('.note-image-btn');\n\n                _this2.ui.onDialogShown(_this2.$dialog, function () {\n                  _this2.context.triggerEvent('dialog.shown'); // Cloning imageInput to clear element.\n\n\n                  $imageInput.replaceWith($imageInput.clone().on('change', function (event) {\n                    deferred.resolve(event.target.files || event.target.value);\n                  }).val(''));\n                  $imageUrl.on('input paste propertychange', function () {\n                    _this2.ui.toggleBtn($imageBtn, $imageUrl.val());\n                  }).val('');\n\n                  if (!env.isSupportTouch) {\n                    $imageUrl.trigger('focus');\n                  }\n\n                  $imageBtn.click(function (event) {\n                    event.preventDefault();\n                    deferred.resolve($imageUrl.val());\n                  });\n\n                  _this2.bindEnterKey($imageUrl, $imageBtn);\n                });\n\n                _this2.ui.onDialogHidden(_this2.$dialog, function () {\n                  $imageInput.off();\n                  $imageUrl.off();\n                  $imageBtn.off();\n\n                  if (deferred.state() === 'pending') {\n                    deferred.reject();\n                  }\n                });\n\n                _this2.ui.showDialog(_this2.$dialog);\n              });\n            }\n          }]);\n          return ImageDialog;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/ImagePopover.js\n\n\n        function ImagePopover_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function ImagePopover_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function ImagePopover_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) ImagePopover_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) ImagePopover_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n        /**\n         * Image popover module\n         *  mouse events that show/hide popover will be handled by Handle.js.\n         *  Handle.js will receive the events and invoke 'imagePopover.update'.\n         */\n\n\n        var ImagePopover_ImagePopover = /*#__PURE__*/function () {\n          function ImagePopover(context) {\n            var _this = this;\n\n            ImagePopover_classCallCheck(this, ImagePopover);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.editable = context.layoutInfo.editable[0];\n            this.options = context.options;\n            this.events = {\n              'summernote.disable summernote.blur': function summernoteDisableSummernoteBlur() {\n                _this.hide();\n              }\n            };\n          }\n\n          ImagePopover_createClass(ImagePopover, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !lists.isEmpty(this.options.popover.image);\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              this.$popover = this.ui.popover({\n                className: 'note-image-popover'\n              }).render().appendTo(this.options.container);\n              var $content = this.$popover.find('.popover-content,.note-popover-content');\n              this.context.invoke('buttons.build', $content, this.options.popover.image);\n              this.$popover.on('mousedown', function (e) {\n                e.preventDefault();\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$popover.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update(target, event) {\n              if (dom.isImg(target)) {\n                var position = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(target).offset();\n                var containerOffset = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.container).offset();\n                var pos = {};\n\n                if (this.options.popatmouse) {\n                  pos.left = event.pageX - 20;\n                  pos.top = event.pageY;\n                } else {\n                  pos = position;\n                }\n\n                pos.top -= containerOffset.top;\n                pos.left -= containerOffset.left;\n                this.$popover.css({\n                  display: 'block',\n                  left: pos.left,\n                  top: pos.top\n                });\n              } else {\n                this.hide();\n              }\n            }\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              this.$popover.hide();\n            }\n          }]);\n          return ImagePopover;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/TablePopover.js\n\n\n        function TablePopover_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function TablePopover_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function TablePopover_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) TablePopover_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) TablePopover_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var TablePopover_TablePopover = /*#__PURE__*/function () {\n          function TablePopover(context) {\n            var _this = this;\n\n            TablePopover_classCallCheck(this, TablePopover);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.options = context.options;\n            this.events = {\n              'summernote.mousedown': function summernoteMousedown(we, e) {\n                _this.update(e.target);\n              },\n              'summernote.keyup summernote.scroll summernote.change': function summernoteKeyupSummernoteScrollSummernoteChange() {\n                _this.update();\n              },\n              'summernote.disable summernote.blur': function summernoteDisableSummernoteBlur() {\n                _this.hide();\n              }\n            };\n          }\n\n          TablePopover_createClass(TablePopover, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return !lists.isEmpty(this.options.popover.table);\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              this.$popover = this.ui.popover({\n                className: 'note-table-popover'\n              }).render().appendTo(this.options.container);\n              var $content = this.$popover.find('.popover-content,.note-popover-content');\n              this.context.invoke('buttons.build', $content, this.options.popover.table); // [workaround] Disable Firefox's default table editor\n\n              if (env.isFF) {\n                document.execCommand('enableInlineTableEditing', false, false);\n              }\n\n              this.$popover.on('mousedown', function (e) {\n                e.preventDefault();\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$popover.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update(target) {\n              if (this.context.isDisabled()) {\n                return false;\n              }\n\n              var isCell = dom.isCell(target);\n\n              if (isCell) {\n                var pos = dom.posFromPlaceholder(target);\n                var containerOffset = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.container).offset();\n                pos.top -= containerOffset.top;\n                pos.left -= containerOffset.left;\n                this.$popover.css({\n                  display: 'block',\n                  left: pos.left,\n                  top: pos.top\n                });\n              } else {\n                this.hide();\n              }\n\n              return isCell;\n            }\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              this.$popover.hide();\n            }\n          }]);\n          return TablePopover;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/VideoDialog.js\n\n\n        function VideoDialog_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function VideoDialog_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function VideoDialog_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) VideoDialog_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) VideoDialog_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var VideoDialog_VideoDialog = /*#__PURE__*/function () {\n          function VideoDialog(context) {\n            VideoDialog_classCallCheck(this, VideoDialog);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$body = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document.body);\n            this.$editor = context.layoutInfo.editor;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n          }\n\n          VideoDialog_createClass(VideoDialog, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var $container = this.options.dialogsInBody ? this.$body : this.options.container;\n              var body = ['<div class=\"form-group note-form-group row-fluid\">', \"<label for=\\\"note-dialog-video-url-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.video.url, \" <small class=\\\"text-muted\\\">\").concat(this.lang.video.providers, \"</small></label>\"), \"<input id=\\\"note-dialog-video-url-\".concat(this.options.id, \"\\\" class=\\\"note-video-url form-control note-form-control note-input\\\" type=\\\"text\\\"/>\"), '</div>'].join('');\n              var buttonClass = 'btn btn-primary note-btn note-btn-primary note-video-btn';\n              var footer = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"\".concat(buttonClass, \"\\\" value=\\\"\").concat(this.lang.video.insert, \"\\\" disabled>\");\n              this.$dialog = this.ui.dialog({\n                title: this.lang.video.insert,\n                fade: this.options.dialogsFade,\n                body: body,\n                footer: footer\n              }).render().appendTo($container);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.ui.hideDialog(this.$dialog);\n              this.$dialog.remove();\n            }\n          }, {\n            key: \"bindEnterKey\",\n            value: function bindEnterKey($input, $btn) {\n              $input.on('keypress', function (event) {\n                if (event.keyCode === core_key.code.ENTER) {\n                  event.preventDefault();\n                  $btn.trigger('click');\n                }\n              });\n            }\n          }, {\n            key: \"createVideoNode\",\n            value: function createVideoNode(url) {\n              // video url patterns(youtube, instagram, vimeo, dailymotion, youku, mp4, ogg, webm)\n              var ytRegExp = /\\/\\/(?:(?:www|m)\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/;\n              var ytRegExpForStart = /^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/;\n              var ytMatch = url.match(ytRegExp);\n              var igRegExp = /(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/;\n              var igMatch = url.match(igRegExp);\n              var vRegExp = /\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/;\n              var vMatch = url.match(vRegExp);\n              var vimRegExp = /\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/;\n              var vimMatch = url.match(vimRegExp);\n              var dmRegExp = /.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/;\n              var dmMatch = url.match(dmRegExp);\n              var youkuRegExp = /\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/;\n              var youkuMatch = url.match(youkuRegExp);\n              var qqRegExp = /\\/\\/v\\.qq\\.com.*?vid=(.+)/;\n              var qqMatch = url.match(qqRegExp);\n              var qqRegExp2 = /\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/;\n              var qqMatch2 = url.match(qqRegExp2);\n              var mp4RegExp = /^.+.(mp4|m4v)$/;\n              var mp4Match = url.match(mp4RegExp);\n              var oggRegExp = /^.+.(ogg|ogv)$/;\n              var oggMatch = url.match(oggRegExp);\n              var webmRegExp = /^.+.(webm)$/;\n              var webmMatch = url.match(webmRegExp);\n              var fbRegExp = /(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/;\n              var fbMatch = url.match(fbRegExp);\n              var $video;\n\n              if (ytMatch && ytMatch[1].length === 11) {\n                var youtubeId = ytMatch[1];\n                var start = 0;\n\n                if (typeof ytMatch[2] !== 'undefined') {\n                  var ytMatchForStart = ytMatch[2].match(ytRegExpForStart);\n\n                  if (ytMatchForStart) {\n                    for (var n = [3600, 60, 1], i = 0, r = n.length; i < r; i++) {\n                      start += typeof ytMatchForStart[i + 1] !== 'undefined' ? n[i] * parseInt(ytMatchForStart[i + 1], 10) : 0;\n                    }\n                  }\n                }\n\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe>').attr('frameborder', 0).attr('src', '//www.youtube.com/embed/' + youtubeId + (start > 0 ? '?start=' + start : '')).attr('width', '640').attr('height', '360');\n              } else if (igMatch && igMatch[0].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe>').attr('frameborder', 0).attr('src', 'https://instagram.com/p/' + igMatch[1] + '/embed/').attr('width', '612').attr('height', '710').attr('scrolling', 'no').attr('allowtransparency', 'true');\n              } else if (vMatch && vMatch[0].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe>').attr('frameborder', 0).attr('src', vMatch[0] + '/embed/simple').attr('width', '600').attr('height', '600').attr('class', 'vine-embed');\n              } else if (vimMatch && vimMatch[3].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>').attr('frameborder', 0).attr('src', '//player.vimeo.com/video/' + vimMatch[3]).attr('width', '640').attr('height', '360');\n              } else if (dmMatch && dmMatch[2].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe>').attr('frameborder', 0).attr('src', '//www.dailymotion.com/embed/video/' + dmMatch[2]).attr('width', '640').attr('height', '360');\n              } else if (youkuMatch && youkuMatch[1].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>').attr('frameborder', 0).attr('height', '498').attr('width', '510').attr('src', '//player.youku.com/embed/' + youkuMatch[1]);\n              } else if (qqMatch && qqMatch[1].length || qqMatch2 && qqMatch2[2].length) {\n                var vid = qqMatch && qqMatch[1].length ? qqMatch[1] : qqMatch2[2];\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>').attr('frameborder', 0).attr('height', '310').attr('width', '500').attr('src', 'https://v.qq.com/txp/iframe/player.html?vid=' + vid + '&amp;auto=0');\n              } else if (mp4Match || oggMatch || webmMatch) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<video controls>').attr('src', url).attr('width', '640').attr('height', '360');\n              } else if (fbMatch && fbMatch[0].length) {\n                $video = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<iframe>').attr('frameborder', 0).attr('src', 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(fbMatch[0]) + '&show_text=0&width=560').attr('width', '560').attr('height', '301').attr('scrolling', 'no').attr('allowtransparency', 'true');\n              } else {\n                // this is not a known video link. Now what, Cat? Now what?\n                return false;\n              }\n\n              $video.addClass('note-video-clip');\n              return $video[0];\n            }\n          }, {\n            key: \"show\",\n            value: function show() {\n              var _this = this;\n\n              var text = this.context.invoke('editor.getSelectedText');\n              this.context.invoke('editor.saveRange');\n              this.showVideoDialog(text).then(function (url) {\n                // [workaround] hide dialog before restore range for IE range focus\n                _this.ui.hideDialog(_this.$dialog);\n\n                _this.context.invoke('editor.restoreRange'); // build node\n\n\n                var $node = _this.createVideoNode(url);\n\n                if ($node) {\n                  // insert video node\n                  _this.context.invoke('editor.insertNode', $node);\n                }\n              }).fail(function () {\n                _this.context.invoke('editor.restoreRange');\n              });\n            }\n            /**\n             * show video dialog\n             *\n             * @param {jQuery} $dialog\n             * @return {Promise}\n             */\n\n          }, {\n            key: \"showVideoDialog\",\n            value: function showVideoDialog()\n            /* text */\n            {\n              var _this2 = this;\n\n              return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n                var $videoUrl = _this2.$dialog.find('.note-video-url');\n\n                var $videoBtn = _this2.$dialog.find('.note-video-btn');\n\n                _this2.ui.onDialogShown(_this2.$dialog, function () {\n                  _this2.context.triggerEvent('dialog.shown');\n\n                  $videoUrl.on('input paste propertychange', function () {\n                    _this2.ui.toggleBtn($videoBtn, $videoUrl.val());\n                  });\n\n                  if (!env.isSupportTouch) {\n                    $videoUrl.trigger('focus');\n                  }\n\n                  $videoBtn.click(function (event) {\n                    event.preventDefault();\n                    deferred.resolve($videoUrl.val());\n                  });\n\n                  _this2.bindEnterKey($videoUrl, $videoBtn);\n                });\n\n                _this2.ui.onDialogHidden(_this2.$dialog, function () {\n                  $videoUrl.off();\n                  $videoBtn.off();\n\n                  if (deferred.state() === 'pending') {\n                    deferred.reject();\n                  }\n                });\n\n                _this2.ui.showDialog(_this2.$dialog);\n              });\n            }\n          }]);\n          return VideoDialog;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/HelpDialog.js\n\n\n        function HelpDialog_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function HelpDialog_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function HelpDialog_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) HelpDialog_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) HelpDialog_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var HelpDialog_HelpDialog = /*#__PURE__*/function () {\n          function HelpDialog(context) {\n            HelpDialog_classCallCheck(this, HelpDialog);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$body = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(document.body);\n            this.$editor = context.layoutInfo.editor;\n            this.options = context.options;\n            this.lang = this.options.langInfo;\n          }\n\n          HelpDialog_createClass(HelpDialog, [{\n            key: \"initialize\",\n            value: function initialize() {\n              var $container = this.options.dialogsInBody ? this.$body : this.options.container;\n              var body = ['<p class=\"text-center\">', '<a href=\"http://summernote.org/\" target=\"_blank\">Summernote 0.8.18</a> · ', '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\">Project</a> · ', '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>', '</p>'].join('');\n              this.$dialog = this.ui.dialog({\n                title: this.lang.options.help,\n                fade: this.options.dialogsFade,\n                body: this.createShortcutList(),\n                footer: body,\n                callback: function callback($node) {\n                  $node.find('.modal-body,.note-modal-body').css({\n                    'max-height': 300,\n                    'overflow': 'scroll'\n                  });\n                }\n              }).render().appendTo($container);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.ui.hideDialog(this.$dialog);\n              this.$dialog.remove();\n            }\n          }, {\n            key: \"createShortcutList\",\n            value: function createShortcutList() {\n              var _this = this;\n\n              var keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n              return Object.keys(keyMap).map(function (key) {\n                var command = keyMap[key];\n                var $row = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div><div class=\"help-list-item\"></div></div>');\n                $row.append(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<label><kbd>' + key + '</kdb></label>').css({\n                  'width': 180,\n                  'margin-right': 10\n                })).append(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<span/>').html(_this.context.memo('help.' + command) || command));\n                return $row.html();\n              }).join('');\n            }\n            /**\n             * show help dialog\n             *\n             * @return {Promise}\n             */\n\n          }, {\n            key: \"showHelpDialog\",\n            value: function showHelpDialog() {\n              var _this2 = this;\n\n              return external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.Deferred(function (deferred) {\n                _this2.ui.onDialogShown(_this2.$dialog, function () {\n                  _this2.context.triggerEvent('dialog.shown');\n\n                  deferred.resolve();\n                });\n\n                _this2.ui.showDialog(_this2.$dialog);\n              }).promise();\n            }\n          }, {\n            key: \"show\",\n            value: function show() {\n              var _this3 = this;\n\n              this.context.invoke('editor.saveRange');\n              this.showHelpDialog().then(function () {\n                _this3.context.invoke('editor.restoreRange');\n              });\n            }\n          }]);\n          return HelpDialog;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/AirPopover.js\n\n\n        function AirPopover_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function AirPopover_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function AirPopover_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) AirPopover_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) AirPopover_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var AIRMODE_POPOVER_X_OFFSET = -5;\n        var AIRMODE_POPOVER_Y_OFFSET = 5;\n\n        var AirPopover_AirPopover = /*#__PURE__*/function () {\n          function AirPopover(context) {\n            var _this = this;\n\n            AirPopover_classCallCheck(this, AirPopover);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.options = context.options;\n            this.hidable = true;\n            this.onContextmenu = false;\n            this.pageX = null;\n            this.pageY = null;\n            this.events = {\n              'summernote.contextmenu': function summernoteContextmenu(e) {\n                if (_this.options.editing) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  _this.onContextmenu = true;\n\n                  _this.update(true);\n                }\n              },\n              'summernote.mousedown': function summernoteMousedown(we, e) {\n                _this.pageX = e.pageX;\n                _this.pageY = e.pageY;\n              },\n              'summernote.keyup summernote.mouseup summernote.scroll': function summernoteKeyupSummernoteMouseupSummernoteScroll(we, e) {\n                if (_this.options.editing && !_this.onContextmenu) {\n                  _this.pageX = e.pageX;\n                  _this.pageY = e.pageY;\n\n                  _this.update();\n                }\n\n                _this.onContextmenu = false;\n              },\n              'summernote.disable summernote.change summernote.dialog.shown summernote.blur': function summernoteDisableSummernoteChangeSummernoteDialogShownSummernoteBlur() {\n                _this.hide();\n              },\n              'summernote.focusout': function summernoteFocusout() {\n                if (!_this.$popover.is(':active,:focus')) {\n                  _this.hide();\n                }\n              }\n            };\n          }\n\n          AirPopover_createClass(AirPopover, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return this.options.airMode && !lists.isEmpty(this.options.popover.air);\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              var _this2 = this;\n\n              this.$popover = this.ui.popover({\n                className: 'note-air-popover'\n              }).render().appendTo(this.options.container);\n              var $content = this.$popover.find('.popover-content');\n              this.context.invoke('buttons.build', $content, this.options.popover.air); // disable hiding this popover preemptively by 'summernote.blur' event.\n\n              this.$popover.on('mousedown', function () {\n                _this2.hidable = false;\n              }); // (re-)enable hiding after 'summernote.blur' has been handled (aka. ignored).\n\n              this.$popover.on('mouseup', function () {\n                _this2.hidable = true;\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$popover.remove();\n            }\n          }, {\n            key: \"update\",\n            value: function update(forcelyOpen) {\n              var styleInfo = this.context.invoke('editor.currentStyle');\n\n              if (styleInfo.range && (!styleInfo.range.isCollapsed() || forcelyOpen)) {\n                var rect = {\n                  left: this.pageX,\n                  top: this.pageY\n                };\n                var containerOffset = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.container).offset();\n                rect.top -= containerOffset.top;\n                rect.left -= containerOffset.left;\n                this.$popover.css({\n                  display: 'block',\n                  left: Math.max(rect.left, 0) + AIRMODE_POPOVER_X_OFFSET,\n                  top: rect.top + AIRMODE_POPOVER_Y_OFFSET\n                });\n                this.context.invoke('buttons.updateCurrentStyle', this.$popover);\n              } else {\n                this.hide();\n              }\n            }\n          }, {\n            key: \"updateCodeview\",\n            value: function updateCodeview(isCodeview) {\n              this.ui.toggleBtnActive(this.$popover.find('.btn-codeview'), isCodeview);\n\n              if (isCodeview) {\n                this.hide();\n              }\n            }\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              if (this.hidable) {\n                this.$popover.hide();\n              }\n            }\n          }]);\n          return AirPopover;\n        }(); // CONCATENATED MODULE: ./src/js/base/module/HintPopover.js\n\n\n        function HintPopover_classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function HintPopover_defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        function HintPopover_createClass(Constructor, protoProps, staticProps) {\n          if (protoProps) HintPopover_defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) HintPopover_defineProperties(Constructor, staticProps);\n          return Constructor;\n        }\n\n        var POPOVER_DIST = 5;\n\n        var HintPopover_HintPopover = /*#__PURE__*/function () {\n          function HintPopover(context) {\n            var _this = this;\n\n            HintPopover_classCallCheck(this, HintPopover);\n            this.context = context;\n            this.ui = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.ui;\n            this.$editable = context.layoutInfo.editable;\n            this.options = context.options;\n            this.hint = this.options.hint || [];\n            this.direction = this.options.hintDirection || 'bottom';\n            this.hints = Array.isArray(this.hint) ? this.hint : [this.hint];\n            this.events = {\n              'summernote.keyup': function summernoteKeyup(we, e) {\n                if (!e.isDefaultPrevented()) {\n                  _this.handleKeyup(e);\n                }\n              },\n              'summernote.keydown': function summernoteKeydown(we, e) {\n                _this.handleKeydown(e);\n              },\n              'summernote.disable summernote.dialog.shown summernote.blur': function summernoteDisableSummernoteDialogShownSummernoteBlur() {\n                _this.hide();\n              }\n            };\n          }\n\n          HintPopover_createClass(HintPopover, [{\n            key: \"shouldInitialize\",\n            value: function shouldInitialize() {\n              return this.hints.length > 0;\n            }\n          }, {\n            key: \"initialize\",\n            value: function initialize() {\n              var _this2 = this;\n\n              this.lastWordRange = null;\n              this.matchingWord = null;\n              this.$popover = this.ui.popover({\n                className: 'note-hint-popover',\n                hideArrow: true,\n                direction: ''\n              }).render().appendTo(this.options.container);\n              this.$popover.hide();\n              this.$content = this.$popover.find('.popover-content,.note-popover-content');\n              this.$content.on('click', '.note-hint-item', function (e) {\n                _this2.$content.find('.active').removeClass('active');\n\n                external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(e.currentTarget).addClass('active');\n\n                _this2.replace();\n              });\n              this.$popover.on('mousedown', function (e) {\n                e.preventDefault();\n              });\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.$popover.remove();\n            }\n          }, {\n            key: \"selectItem\",\n            value: function selectItem($item) {\n              this.$content.find('.active').removeClass('active');\n              $item.addClass('active');\n              this.$content[0].scrollTop = $item[0].offsetTop - this.$content.innerHeight() / 2;\n            }\n          }, {\n            key: \"moveDown\",\n            value: function moveDown() {\n              var $current = this.$content.find('.note-hint-item.active');\n              var $next = $current.next();\n\n              if ($next.length) {\n                this.selectItem($next);\n              } else {\n                var $nextGroup = $current.parent().next();\n\n                if (!$nextGroup.length) {\n                  $nextGroup = this.$content.find('.note-hint-group').first();\n                }\n\n                this.selectItem($nextGroup.find('.note-hint-item').first());\n              }\n            }\n          }, {\n            key: \"moveUp\",\n            value: function moveUp() {\n              var $current = this.$content.find('.note-hint-item.active');\n              var $prev = $current.prev();\n\n              if ($prev.length) {\n                this.selectItem($prev);\n              } else {\n                var $prevGroup = $current.parent().prev();\n\n                if (!$prevGroup.length) {\n                  $prevGroup = this.$content.find('.note-hint-group').last();\n                }\n\n                this.selectItem($prevGroup.find('.note-hint-item').last());\n              }\n            }\n          }, {\n            key: \"replace\",\n            value: function replace() {\n              var $item = this.$content.find('.note-hint-item.active');\n\n              if ($item.length) {\n                var node = this.nodeFromItem($item); // If matchingWord length = 0 -> capture OK / open hint / but as mention capture \"\" (\\w*)\n\n                if (this.matchingWord !== null && this.matchingWord.length === 0) {\n                  this.lastWordRange.so = this.lastWordRange.eo; // Else si > 0 and normal case -> adjust range \"before\" for correct position of insertion\n                } else if (this.matchingWord !== null && this.matchingWord.length > 0 && !this.lastWordRange.isCollapsed()) {\n                  var rangeCompute = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;\n\n                  if (rangeCompute > 0) {\n                    this.lastWordRange.so += rangeCompute;\n                  }\n                }\n\n                this.lastWordRange.insertNode(node);\n\n                if (this.options.hintSelect === 'next') {\n                  var blank = document.createTextNode('');\n                  external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(node).after(blank);\n                  range.createFromNodeBefore(blank).select();\n                } else {\n                  range.createFromNodeAfter(node).select();\n                }\n\n                this.lastWordRange = null;\n                this.hide();\n                this.context.invoke('editor.focus');\n              }\n            }\n          }, {\n            key: \"nodeFromItem\",\n            value: function nodeFromItem($item) {\n              var hint = this.hints[$item.data('index')];\n              var item = $item.data('item');\n              var node = hint.content ? hint.content(item) : item;\n\n              if (typeof node === 'string') {\n                node = dom.createText(node);\n              }\n\n              return node;\n            }\n          }, {\n            key: \"createItemTemplates\",\n            value: function createItemTemplates(hintIdx, items) {\n              var hint = this.hints[hintIdx];\n              return items.map(function (item\n              /*, idx */\n              ) {\n                var $item = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div class=\"note-hint-item\"/>');\n                $item.append(hint.template ? hint.template(item) : item + '');\n                $item.data({\n                  'index': hintIdx,\n                  'item': item\n                });\n                return $item;\n              });\n            }\n          }, {\n            key: \"handleKeydown\",\n            value: function handleKeydown(e) {\n              if (!this.$popover.is(':visible')) {\n                return;\n              }\n\n              if (e.keyCode === core_key.code.ENTER) {\n                e.preventDefault();\n                this.replace();\n              } else if (e.keyCode === core_key.code.UP) {\n                e.preventDefault();\n                this.moveUp();\n              } else if (e.keyCode === core_key.code.DOWN) {\n                e.preventDefault();\n                this.moveDown();\n              }\n            }\n          }, {\n            key: \"searchKeyword\",\n            value: function searchKeyword(index, keyword, callback) {\n              var hint = this.hints[index];\n\n              if (hint && hint.match.test(keyword) && hint.search) {\n                var matches = hint.match.exec(keyword);\n                this.matchingWord = matches[0];\n                hint.search(matches[1], callback);\n              } else {\n                callback();\n              }\n            }\n          }, {\n            key: \"createGroup\",\n            value: function createGroup(idx, keyword) {\n              var _this3 = this;\n\n              var $group = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()('<div class=\"note-hint-group note-hint-group-' + idx + '\"></div>');\n              this.searchKeyword(idx, keyword, function (items) {\n                items = items || [];\n\n                if (items.length) {\n                  $group.html(_this3.createItemTemplates(idx, items));\n\n                  _this3.show();\n                }\n              });\n              return $group;\n            }\n          }, {\n            key: \"handleKeyup\",\n            value: function handleKeyup(e) {\n              var _this4 = this;\n\n              if (!lists.contains([core_key.code.ENTER, core_key.code.UP, core_key.code.DOWN], e.keyCode)) {\n                var _range = this.context.invoke('editor.getLastRange');\n\n                var wordRange, keyword;\n\n                if (this.options.hintMode === 'words') {\n                  wordRange = _range.getWordsRange(_range);\n                  keyword = wordRange.toString();\n                  this.hints.forEach(function (hint) {\n                    if (hint.match.test(keyword)) {\n                      wordRange = _range.getWordsMatchRange(hint.match);\n                      return false;\n                    }\n                  });\n\n                  if (!wordRange) {\n                    this.hide();\n                    return;\n                  }\n\n                  keyword = wordRange.toString();\n                } else {\n                  wordRange = _range.getWordRange();\n                  keyword = wordRange.toString();\n                }\n\n                if (this.hints.length && keyword) {\n                  this.$content.empty();\n                  var bnd = func.rect2bnd(lists.last(wordRange.getClientRects()));\n                  var containerOffset = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(this.options.container).offset();\n\n                  if (bnd) {\n                    bnd.top -= containerOffset.top;\n                    bnd.left -= containerOffset.left;\n                    this.$popover.hide();\n                    this.lastWordRange = wordRange;\n                    this.hints.forEach(function (hint, idx) {\n                      if (hint.match.test(keyword)) {\n                        _this4.createGroup(idx, keyword).appendTo(_this4.$content);\n                      }\n                    }); // select first .note-hint-item\n\n                    this.$content.find('.note-hint-item:first').addClass('active'); // set position for popover after group is created\n\n                    if (this.direction === 'top') {\n                      this.$popover.css({\n                        left: bnd.left,\n                        top: bnd.top - this.$popover.outerHeight() - POPOVER_DIST\n                      });\n                    } else {\n                      this.$popover.css({\n                        left: bnd.left,\n                        top: bnd.top + bnd.height + POPOVER_DIST\n                      });\n                    }\n                  }\n                } else {\n                  this.hide();\n                }\n              }\n            }\n          }, {\n            key: \"show\",\n            value: function show() {\n              this.$popover.show();\n            }\n          }, {\n            key: \"hide\",\n            value: function hide() {\n              this.$popover.hide();\n            }\n          }]);\n          return HintPopover;\n        }(); // CONCATENATED MODULE: ./src/js/base/settings.js\n\n\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote, {\n          version: '0.8.18',\n          plugins: {},\n          dom: dom,\n          range: range,\n          lists: lists,\n          options: {\n            langInfo: external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.lang['en-US'],\n            editing: true,\n            modules: {\n              'editor': Editor_Editor,\n              'clipboard': Clipboard_Clipboard,\n              'dropzone': Dropzone_Dropzone,\n              'codeview': Codeview_CodeView,\n              'statusbar': Statusbar_Statusbar,\n              'fullscreen': Fullscreen_Fullscreen,\n              'handle': Handle_Handle,\n              // FIXME: HintPopover must be front of autolink\n              //  - Script error about range when Enter key is pressed on hint popover\n              'hintPopover': HintPopover_HintPopover,\n              'autoLink': AutoLink_AutoLink,\n              'autoSync': AutoSync_AutoSync,\n              'autoReplace': AutoReplace_AutoReplace,\n              'placeholder': Placeholder_Placeholder,\n              'buttons': Buttons_Buttons,\n              'toolbar': Toolbar_Toolbar,\n              'linkDialog': LinkDialog_LinkDialog,\n              'linkPopover': LinkPopover_LinkPopover,\n              'imageDialog': ImageDialog_ImageDialog,\n              'imagePopover': ImagePopover_ImagePopover,\n              'tablePopover': TablePopover_TablePopover,\n              'videoDialog': VideoDialog_VideoDialog,\n              'helpDialog': HelpDialog_HelpDialog,\n              'airPopover': AirPopover_AirPopover\n            },\n            buttons: {},\n            lang: 'en-US',\n            followingToolbar: false,\n            toolbarPosition: 'top',\n            otherStaticBar: '',\n            // toolbar\n            codeviewKeepButton: false,\n            toolbar: [['style', ['style']], ['font', ['bold', 'underline', 'clear']], ['fontname', ['fontname']], ['color', ['color']], ['para', ['ul', 'ol', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture', 'video']], ['view', ['fullscreen', 'codeview', 'help']]],\n            // popover\n            popatmouse: true,\n            popover: {\n              image: [['resize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']], ['float', ['floatLeft', 'floatRight', 'floatNone']], ['remove', ['removeMedia']]],\n              link: [['link', ['linkDialogShow', 'unlink']]],\n              table: [['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']], ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]],\n              air: [['color', ['color']], ['font', ['bold', 'underline', 'clear']], ['para', ['ul', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture']], ['view', ['fullscreen', 'codeview']]]\n            },\n            // air mode: inline editor\n            airMode: false,\n            overrideContextMenu: false,\n            // TBD\n            width: null,\n            height: null,\n            linkTargetBlank: true,\n            useProtocol: true,\n            defaultProtocol: 'http://',\n            focus: false,\n            tabDisabled: false,\n            tabSize: 4,\n            styleWithCSS: false,\n            shortcuts: true,\n            textareaAutoSync: true,\n            tooltip: 'auto',\n            container: null,\n            maxTextLength: 0,\n            blockquoteBreakingLevel: 2,\n            spellCheck: true,\n            disableGrammar: false,\n            placeholder: null,\n            inheritPlaceholder: false,\n            // TODO: need to be documented\n            recordEveryKeystroke: false,\n            historyLimit: 200,\n            // TODO: need to be documented\n            showDomainOnlyForAutolink: false,\n            // TODO: need to be documented\n            hintMode: 'word',\n            hintSelect: 'after',\n            hintDirection: 'bottom',\n            styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n            fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana'],\n            fontNamesIgnoreCheck: [],\n            addDefaultFonts: true,\n            fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n            fontSizeUnits: ['px', 'pt'],\n            // pallete colors(n x n)\n            colors: [['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'], ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'], ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'], ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'], ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'], ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'], ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'], ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031']],\n            // http://chir.ag/projects/name-that-color/\n            colorsName: [['Black', 'Tundora', 'Dove Gray', 'Star Dust', 'Pale Slate', 'Gallery', 'Alabaster', 'White'], ['Red', 'Orange Peel', 'Yellow', 'Green', 'Cyan', 'Blue', 'Electric Violet', 'Magenta'], ['Azalea', 'Karry', 'Egg White', 'Zanah', 'Botticelli', 'Tropical Blue', 'Mischka', 'Twilight'], ['Tonys Pink', 'Peach Orange', 'Cream Brulee', 'Sprout', 'Casper', 'Perano', 'Cold Purple', 'Careys Pink'], ['Mandy', 'Rajah', 'Dandelion', 'Olivine', 'Gulf Stream', 'Viking', 'Blue Marguerite', 'Puce'], ['Guardsman Red', 'Fire Bush', 'Golden Dream', 'Chelsea Cucumber', 'Smalt Blue', 'Boston Blue', 'Butterfly Bush', 'Cadillac'], ['Sangria', 'Mai Tai', 'Buddha Gold', 'Forest Green', 'Eden', 'Venice Blue', 'Meteorite', 'Claret'], ['Rosewood', 'Cinnamon', 'Olive', 'Parsley', 'Tiber', 'Midnight Blue', 'Valentino', 'Loulou']],\n            colorButton: {\n              foreColor: '#000000',\n              backColor: '#FFFF00'\n            },\n            lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\n            tableClassName: 'table table-bordered',\n            insertTableMaxSize: {\n              col: 10,\n              row: 10\n            },\n            // By default, dialogs are attached in container.\n            dialogsInBody: false,\n            dialogsFade: false,\n            maximumImageFileSize: null,\n            callbacks: {\n              onBeforeCommand: null,\n              onBlur: null,\n              onBlurCodeview: null,\n              onChange: null,\n              onChangeCodeview: null,\n              onDialogShown: null,\n              onEnter: null,\n              onFocus: null,\n              onImageLinkInsert: null,\n              onImageUpload: null,\n              onImageUploadError: null,\n              onInit: null,\n              onKeydown: null,\n              onKeyup: null,\n              onMousedown: null,\n              onMouseup: null,\n              onPaste: null,\n              onScroll: null\n            },\n            codemirror: {\n              mode: 'text/html',\n              htmlMode: true,\n              lineNumbers: true\n            },\n            codeviewFilter: false,\n            codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\n            codeviewIframeFilter: true,\n            codeviewIframeWhitelistSrc: [],\n            codeviewIframeWhitelistSrcBase: ['www.youtube.com', 'www.youtube-nocookie.com', 'www.facebook.com', 'vine.co', 'instagram.com', 'player.vimeo.com', 'www.dailymotion.com', 'player.youku.com', 'v.qq.com'],\n            keyMap: {\n              pc: {\n                'ESC': 'escape',\n                'ENTER': 'insertParagraph',\n                'CTRL+Z': 'undo',\n                'CTRL+Y': 'redo',\n                'TAB': 'tab',\n                'SHIFT+TAB': 'untab',\n                'CTRL+B': 'bold',\n                'CTRL+I': 'italic',\n                'CTRL+U': 'underline',\n                'CTRL+SHIFT+S': 'strikethrough',\n                'CTRL+BACKSLASH': 'removeFormat',\n                'CTRL+SHIFT+L': 'justifyLeft',\n                'CTRL+SHIFT+E': 'justifyCenter',\n                'CTRL+SHIFT+R': 'justifyRight',\n                'CTRL+SHIFT+J': 'justifyFull',\n                'CTRL+SHIFT+NUM7': 'insertUnorderedList',\n                'CTRL+SHIFT+NUM8': 'insertOrderedList',\n                'CTRL+LEFTBRACKET': 'outdent',\n                'CTRL+RIGHTBRACKET': 'indent',\n                'CTRL+NUM0': 'formatPara',\n                'CTRL+NUM1': 'formatH1',\n                'CTRL+NUM2': 'formatH2',\n                'CTRL+NUM3': 'formatH3',\n                'CTRL+NUM4': 'formatH4',\n                'CTRL+NUM5': 'formatH5',\n                'CTRL+NUM6': 'formatH6',\n                'CTRL+ENTER': 'insertHorizontalRule',\n                'CTRL+K': 'linkDialog.show'\n              },\n              mac: {\n                'ESC': 'escape',\n                'ENTER': 'insertParagraph',\n                'CMD+Z': 'undo',\n                'CMD+SHIFT+Z': 'redo',\n                'TAB': 'tab',\n                'SHIFT+TAB': 'untab',\n                'CMD+B': 'bold',\n                'CMD+I': 'italic',\n                'CMD+U': 'underline',\n                'CMD+SHIFT+S': 'strikethrough',\n                'CMD+BACKSLASH': 'removeFormat',\n                'CMD+SHIFT+L': 'justifyLeft',\n                'CMD+SHIFT+E': 'justifyCenter',\n                'CMD+SHIFT+R': 'justifyRight',\n                'CMD+SHIFT+J': 'justifyFull',\n                'CMD+SHIFT+NUM7': 'insertUnorderedList',\n                'CMD+SHIFT+NUM8': 'insertOrderedList',\n                'CMD+LEFTBRACKET': 'outdent',\n                'CMD+RIGHTBRACKET': 'indent',\n                'CMD+NUM0': 'formatPara',\n                'CMD+NUM1': 'formatH1',\n                'CMD+NUM2': 'formatH2',\n                'CMD+NUM3': 'formatH3',\n                'CMD+NUM4': 'formatH4',\n                'CMD+NUM5': 'formatH5',\n                'CMD+NUM6': 'formatH6',\n                'CMD+ENTER': 'insertHorizontalRule',\n                'CMD+K': 'linkDialog.show'\n              }\n            },\n            icons: {\n              'align': 'note-icon-align',\n              'alignCenter': 'note-icon-align-center',\n              'alignJustify': 'note-icon-align-justify',\n              'alignLeft': 'note-icon-align-left',\n              'alignRight': 'note-icon-align-right',\n              'rowBelow': 'note-icon-row-below',\n              'colBefore': 'note-icon-col-before',\n              'colAfter': 'note-icon-col-after',\n              'rowAbove': 'note-icon-row-above',\n              'rowRemove': 'note-icon-row-remove',\n              'colRemove': 'note-icon-col-remove',\n              'indent': 'note-icon-align-indent',\n              'outdent': 'note-icon-align-outdent',\n              'arrowsAlt': 'note-icon-arrows-alt',\n              'bold': 'note-icon-bold',\n              'caret': 'note-icon-caret',\n              'circle': 'note-icon-circle',\n              'close': 'note-icon-close',\n              'code': 'note-icon-code',\n              'eraser': 'note-icon-eraser',\n              'floatLeft': 'note-icon-float-left',\n              'floatRight': 'note-icon-float-right',\n              'font': 'note-icon-font',\n              'frame': 'note-icon-frame',\n              'italic': 'note-icon-italic',\n              'link': 'note-icon-link',\n              'unlink': 'note-icon-chain-broken',\n              'magic': 'note-icon-magic',\n              'menuCheck': 'note-icon-menu-check',\n              'minus': 'note-icon-minus',\n              'orderedlist': 'note-icon-orderedlist',\n              'pencil': 'note-icon-pencil',\n              'picture': 'note-icon-picture',\n              'question': 'note-icon-question',\n              'redo': 'note-icon-redo',\n              'rollback': 'note-icon-rollback',\n              'square': 'note-icon-square',\n              'strikethrough': 'note-icon-strikethrough',\n              'subscript': 'note-icon-subscript',\n              'superscript': 'note-icon-superscript',\n              'table': 'note-icon-table',\n              'textHeight': 'note-icon-text-height',\n              'trash': 'note-icon-trash',\n              'underline': 'note-icon-underline',\n              'undo': 'note-icon-undo',\n              'unorderedlist': 'note-icon-unorderedlist',\n              'video': 'note-icon-video'\n            }\n          }\n        });\n        /***/\n      },\n\n      /***/\n      5:\n      /***/\n      function _(module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n        /***/\n      },\n\n      /***/\n      53:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\"; // ESM COMPAT FLAG\n\n        __webpack_require__.r(__webpack_exports__); // EXTERNAL MODULE: external {\"root\":\"jQuery\",\"commonjs2\":\"jquery\",\"commonjs\":\"jquery\",\"amd\":\"jquery\"}\n\n\n        var external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_ = __webpack_require__(0);\n\n        var external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default = /*#__PURE__*/__webpack_require__.n(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_); // EXTERNAL MODULE: ./src/js/base/renderer.js\n\n\n        var renderer = __webpack_require__(1); // CONCATENATED MODULE: ./src/js/bs4/ui.js\n\n\n        function _typeof(obj) {\n          \"@babel/helpers - typeof\";\n\n          if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function _typeof(obj) {\n              return typeof obj;\n            };\n          } else {\n            _typeof = function _typeof(obj) {\n              return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n          }\n\n          return _typeof(obj);\n        }\n\n        var editor = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-editor note-frame card\"/>');\n        var toolbar = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-toolbar card-header\" role=\"toolbar\"/>');\n        var editingArea = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-editing-area\"/>');\n        var codable = renderer[\"a\"\n        /* default */\n        ].create('<textarea class=\"note-codable\" aria-multiline=\"true\"/>');\n        var editable = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-editable card-block\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>');\n        var statusbar = renderer[\"a\"\n        /* default */\n        ].create(['<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>', '<div class=\"note-statusbar\" role=\"status\">', '<div class=\"note-resizebar\" aria-label=\"Resize\">', '<div class=\"note-icon-bar\"></div>', '<div class=\"note-icon-bar\"></div>', '<div class=\"note-icon-bar\"></div>', '</div>', '</div>'].join(''));\n        var airEditor = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-editor note-airframe\"/>');\n        var airEditable = renderer[\"a\"\n        /* default */\n        ].create(['<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>', '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>'].join(''));\n        var buttonGroup = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-btn-group btn-group\">');\n        var dropdown = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-dropdown-menu dropdown-menu\" role=\"list\">', function ($node, options) {\n          var markup = Array.isArray(options.items) ? options.items.map(function (item) {\n            var value = typeof item === 'string' ? item : item.value || '';\n            var content = options.template ? options.template(item) : item;\n            var option = _typeof(item) === 'object' ? item.option : undefined;\n            var dataValue = 'data-value=\"' + value + '\"';\n            var dataOption = option !== undefined ? ' data-option=\"' + option + '\"' : '';\n            return '<a class=\"dropdown-item\" href=\"#\" ' + (dataValue + dataOption) + ' role=\"listitem\" aria-label=\"' + value + '\">' + content + '</a>';\n          }).join('') : options.items;\n          $node.html(markup).attr({\n            'aria-label': options.title\n          });\n\n          if (options && options.codeviewKeepButton) {\n            $node.addClass('note-codeview-keep');\n          }\n        });\n\n        var dropdownButtonContents = function dropdownButtonContents(contents) {\n          return contents;\n        };\n\n        var dropdownCheck = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"note-dropdown-menu dropdown-menu note-check\" role=\"list\">', function ($node, options) {\n          var markup = Array.isArray(options.items) ? options.items.map(function (item) {\n            var value = typeof item === 'string' ? item : item.value || '';\n            var content = options.template ? options.template(item) : item;\n            return '<a class=\"dropdown-item\" href=\"#\" data-value=\"' + value + '\" role=\"listitem\" aria-label=\"' + item + '\">' + icon(options.checkClassName) + ' ' + content + '</a>';\n          }).join('') : options.items;\n          $node.html(markup).attr({\n            'aria-label': options.title\n          });\n\n          if (options && options.codeviewKeepButton) {\n            $node.addClass('note-codeview-keep');\n          }\n        });\n        var dialog = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"/>', function ($node, options) {\n          if (options.fade) {\n            $node.addClass('fade');\n          }\n\n          $node.attr({\n            'aria-label': options.title\n          });\n          $node.html(['<div class=\"modal-dialog\">', '<div class=\"modal-content\">', options.title ? '<div class=\"modal-header\">' + '<h4 class=\"modal-title\">' + options.title + '</h4>' + '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button>' + '</div>' : '', '<div class=\"modal-body\">' + options.body + '</div>', options.footer ? '<div class=\"modal-footer\">' + options.footer + '</div>' : '', '</div>', '</div>'].join(''));\n        });\n        var popover = renderer[\"a\"\n        /* default */\n        ].create(['<div class=\"note-popover popover in\">', '<div class=\"arrow\"></div>', '<div class=\"popover-content note-children-container\"></div>', '</div>'].join(''), function ($node, options) {\n          var direction = typeof options.direction !== 'undefined' ? options.direction : 'bottom';\n          $node.addClass(direction);\n\n          if (options.hideArrow) {\n            $node.find('.arrow').hide();\n          }\n        });\n        var ui_checkbox = renderer[\"a\"\n        /* default */\n        ].create('<div class=\"form-check\"></div>', function ($node, options) {\n          $node.html(['<label class=\"form-check-label\"' + (options.id ? ' for=\"note-' + options.id + '\"' : '') + '>', '<input type=\"checkbox\" class=\"form-check-input\"' + (options.id ? ' id=\"note-' + options.id + '\"' : ''), options.checked ? ' checked' : '', ' aria-label=\"' + (options.text ? options.text : '') + '\"', ' aria-checked=\"' + (options.checked ? 'true' : 'false') + '\"/>', ' ' + (options.text ? options.text : '') + '</label>'].join(''));\n        });\n\n        var icon = function icon(iconClassName, tagName) {\n          tagName = tagName || 'i';\n          return '<' + tagName + ' class=\"' + iconClassName + '\"></' + tagName + '>';\n        };\n\n        var ui_ui = function ui(editorOptions) {\n          return {\n            editor: editor,\n            toolbar: toolbar,\n            editingArea: editingArea,\n            codable: codable,\n            editable: editable,\n            statusbar: statusbar,\n            airEditor: airEditor,\n            airEditable: airEditable,\n            buttonGroup: buttonGroup,\n            dropdown: dropdown,\n            dropdownButtonContents: dropdownButtonContents,\n            dropdownCheck: dropdownCheck,\n            dialog: dialog,\n            popover: popover,\n            icon: icon,\n            checkbox: ui_checkbox,\n            options: editorOptions,\n            palette: function palette($node, options) {\n              return renderer[\"a\"\n              /* default */\n              ].create('<div class=\"note-color-palette\"/>', function ($node, options) {\n                var contents = [];\n\n                for (var row = 0, rowSize = options.colors.length; row < rowSize; row++) {\n                  var eventName = options.eventName;\n                  var colors = options.colors[row];\n                  var colorsName = options.colorsName[row];\n                  var buttons = [];\n\n                  for (var col = 0, colSize = colors.length; col < colSize; col++) {\n                    var color = colors[col];\n                    var colorName = colorsName[col];\n                    buttons.push(['<button type=\"button\" class=\"note-color-btn\"', 'style=\"background-color:', color, '\" ', 'data-event=\"', eventName, '\" ', 'data-value=\"', color, '\" ', 'title=\"', colorName, '\" ', 'aria-label=\"', colorName, '\" ', 'data-toggle=\"button\" tabindex=\"-1\"></button>'].join(''));\n                  }\n\n                  contents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\n                }\n\n                $node.html(contents.join(''));\n\n                if (options.tooltip) {\n                  $node.find('.note-color-btn').tooltip({\n                    container: options.container || editorOptions.container,\n                    trigger: 'hover',\n                    placement: 'bottom'\n                  });\n                }\n              })($node, options);\n            },\n            button: function button($node, options) {\n              return renderer[\"a\"\n              /* default */\n              ].create('<button type=\"button\" class=\"note-btn btn btn-light btn-sm\" tabindex=\"-1\">', function ($node, options) {\n                if (options && options.tooltip) {\n                  $node.attr({\n                    title: options.tooltip,\n                    'aria-label': options.tooltip\n                  }).tooltip({\n                    container: options.container || editorOptions.container,\n                    trigger: 'hover',\n                    placement: 'bottom'\n                  }).on('click', function (e) {\n                    external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default()(e.currentTarget).tooltip('hide');\n                  });\n                }\n\n                if (options && options.codeviewButton) {\n                  $node.addClass('note-codeview-keep');\n                }\n              })($node, options);\n            },\n            toggleBtn: function toggleBtn($btn, isEnable) {\n              $btn.toggleClass('disabled', !isEnable);\n              $btn.attr('disabled', !isEnable);\n            },\n            toggleBtnActive: function toggleBtnActive($btn, isActive) {\n              $btn.toggleClass('active', isActive);\n            },\n            onDialogShown: function onDialogShown($dialog, handler) {\n              $dialog.one('shown.bs.modal', handler);\n            },\n            onDialogHidden: function onDialogHidden($dialog, handler) {\n              $dialog.one('hidden.bs.modal', handler);\n            },\n            showDialog: function showDialog($dialog) {\n              $dialog.modal('show');\n            },\n            hideDialog: function hideDialog($dialog) {\n              $dialog.modal('hide');\n            },\n            createLayout: function createLayout($note) {\n              var $editor = (editorOptions.airMode ? airEditor([editingArea([codable(), airEditable()])]) : editorOptions.toolbarPosition === 'bottom' ? editor([editingArea([codable(), editable()]), toolbar(), statusbar()]) : editor([toolbar(), editingArea([codable(), editable()]), statusbar()])).render();\n              $editor.insertAfter($note);\n              return {\n                note: $note,\n                editor: $editor,\n                toolbar: $editor.find('.note-toolbar'),\n                editingArea: $editor.find('.note-editing-area'),\n                editable: $editor.find('.note-editable'),\n                codable: $editor.find('.note-codable'),\n                statusbar: $editor.find('.note-statusbar')\n              };\n            },\n            removeLayout: function removeLayout($note, layoutInfo) {\n              $note.html(layoutInfo.editable.html());\n              layoutInfo.editor.remove();\n              $note.show();\n            }\n          };\n        };\n        /* harmony default export */\n\n\n        var bs4_ui = ui_ui; // EXTERNAL MODULE: ./src/js/base/settings.js + 37 modules\n\n        var settings = __webpack_require__(3); // EXTERNAL MODULE: ./src/styles/summernote-bs4.scss\n\n\n        var summernote_bs4 = __webpack_require__(5); // CONCATENATED MODULE: ./src/js/bs4/settings.js\n\n\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote = external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.extend(external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote, {\n          ui_template: bs4_ui,\n          \"interface\": 'bs4'\n        });\n        external_root_jQuery_commonjs2_jquery_commonjs_jquery_amd_jquery_default.a.summernote.options.styleTags = ['p', {\n          title: 'Blockquote',\n          tag: 'blockquote',\n          className: 'blockquote',\n          value: 'blockquote'\n        }, 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n        /***/\n      }\n      /******/\n\n    })\n  );\n});","map":{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:/external {\"root\":\"jQuery\",\"commonjs2\":\"jquery\",\"commonjs\":\"jquery\",\"amd\":\"jquery\"}","webpack:///src/js/base/renderer.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///src/js/base/summernote-en-US.js","webpack:///src/js/base/core/env.js","webpack:///src/js/base/core/func.js","webpack:///src/js/base/core/lists.js","webpack:///src/js/base/core/dom.js","webpack:///src/js/base/Context.js","webpack:///src/js/summernote.js","webpack:///src/js/base/core/range.js","webpack:///src/js/base/core/key.js","webpack:///src/js/base/core/async.js","webpack:///src/js/base/editing/History.js","webpack:///src/js/base/editing/Style.js","webpack:///src/js/base/editing/Bullet.js","webpack:///src/js/base/editing/Typing.js","webpack:///src/js/base/editing/Table.js","webpack:///src/js/base/module/Editor.js","webpack:///src/js/base/module/Clipboard.js","webpack:///src/js/base/module/Dropzone.js","webpack:///src/js/base/module/Codeview.js","webpack:///src/js/base/module/Statusbar.js","webpack:///src/js/base/module/Fullscreen.js","webpack:///src/js/base/module/Handle.js","webpack:///src/js/base/module/AutoLink.js","webpack:///src/js/base/module/AutoSync.js","webpack:///src/js/base/module/AutoReplace.js","webpack:///src/js/base/module/Placeholder.js","webpack:///src/js/base/module/Buttons.js","webpack:///src/js/base/module/Toolbar.js","webpack:///src/js/base/module/LinkDialog.js","webpack:///src/js/base/module/LinkPopover.js","webpack:///src/js/base/module/ImageDialog.js","webpack:///src/js/base/module/ImagePopover.js","webpack:///src/js/base/module/TablePopover.js","webpack:///src/js/base/module/VideoDialog.js","webpack:///src/js/base/module/HelpDialog.js","webpack:///src/js/base/module/AirPopover.js","webpack:///src/js/base/module/HintPopover.js","webpack:///src/js/base/settings.js","webpack:///src/styles/summernote-bs4.scss","webpack:///src/js/bs4/ui.js","webpack:///src/js/bs4/settings.js"],"names":["Renderer","$parent","$node","$","$container","child","create","options","arguments","children","Array","lang","font","bold","italic","underline","clear","height","name","strikethrough","subscript","superscript","size","sizeunit","image","insert","resizeFull","resizeHalf","resizeQuarter","resizeNone","floatLeft","floatRight","floatNone","shapeRounded","shapeCircle","shapeThumbnail","shapeNone","dragImageHere","dropImage","selectFromFiles","maximumFileSize","maximumFileSizeError","url","remove","original","video","videoLink","providers","link","unlink","edit","textToDisplay","openInNewWindow","useProtocol","table","addRowAbove","addRowBelow","addColLeft","addColRight","delRow","delCol","delTable","hr","style","p","blockquote","pre","h1","h2","h3","h4","h5","h6","lists","unordered","ordered","help","fullscreen","codeview","paragraph","outdent","indent","left","center","right","justify","color","recent","more","background","foreground","transparent","setTransparent","reset","resetToDefault","cpSelect","shortcut","shortcuts","close","textFormatting","action","paragraphFormatting","documentStyle","extraKeys","history","undo","redo","specialChar","select","output","noSelection","isSupportAmd","define","genericFontFamilies","fontName","testFontName","testText","testSize","canvas","document","context","originalWidth","validFontName","width","userAgent","navigator","isMSIE","matches","browserVersion","parseFloat","isEdge","isSupportTouch","inputEventName","isMac","isFF","isPhantom","isWebkit","isChrome","isSafari","jqueryVersion","isFontInstalled","isW3CRangeSupport","itemA","itemB","f","fA","fB","obj","idCounter","id","prefix","$document","top","rect","inverted","Object","args","later","timeout","func","callNow","immediate","clearTimeout","setTimeout","expression","eq","eq2","peq2","ok","fail","self","not","and","invoke","resetUniqueId","uniqueId","rect2bnd","invertObject","namespaceToCamel","debounce","isValidUrl","array","idx","len","item","pred","fn","memo","result","length","collection","aTail","tail","aLast","last","head","aResult","results","contains","initial","prev","next","find","all","sum","from","isEmpty","clusterBy","compact","unique","NBSP_CHAR","String","ZERO_WIDTH_NBSP_CHAR","node","nodeName","isEditable","isPre","makePredByNodeName","isLi","isPara","isTable","isData","isBodyContainer","isList","isHr","isBlockquote","isCell","isAnchor","isInline","ancestor","isBody","nodeA","siblings","blankHTML","env","isText","nodeLength","isVoid","ancestors","listAncestor","n","nodes","descendants","current","fnWalk","parent","wrapper","preceding","point","isLeftEdgePoint","isRightEdgePoint","position","isLeftEdgeOf","isRightEdgeOf","offset","hasChildren","isSkipInnerOffset","nextTextNode","getNextTextNode","actual","pointA","pointB","leftNode","rightNode","prevPoint","nextPoint","ch","handler","isSamePoint","isSkipOffset","startPoint","endPoint","nextPointWithEmptyNode","i","offsets","isSkipPaddingBlankHTML","isNotSplitEdgePoint","isDiscardEmptySplits","isEdgePoint","childNode","clone","insertAfter","appendChildNodes","listNext","paddingBlankHTML","splitNode","topAncestor","splitRoot","container","pivot","splitTree","newNode","isTextarea","val","markup","value","regexTag","isEndOfInlineContainer","isBlockNode","match","$placeholder","pos","events","blank","emptyPara","isControlSizing","isElement","isPurePara","isHeading","isBlock","isBodyInline","isParaInline","isDiv","isBR","isSpan","isB","isU","isS","isI","isImg","deepestChildIsEmpty","isEmptyAnchor","isClosestSibling","withClosestSiblings","isLeftEdgePointOf","isRightEdgePointOf","isVisiblePoint","prevPointUntil","nextPointUntil","isCharPoint","isSpacePoint","walkPoint","singleChildAncestor","lastAncestor","listPrev","listDescendant","commonAncestor","wrap","makeOffsetPath","fromOffsetPath","splitPoint","createText","removeWhile","replace","html","posFromPlaceholder","attachEvents","detachEvents","isCustomStyleTag","Context","disabled","dom","buttons","modules","isActivated","namespace","callback","key","module","ModuleClass","withoutIntialize","event","$target","splits","hasSeparator","moduleName","methodName","summernote","type","isExternalAPICalled","hasInitOptions","$note","textRange","tester","childNodes","prevContainer","textRangeStart","curTextNode","pointTester","textCount","dummy","isStart","cont","textRangeInfo","prevTextNodes","isCollapseToStart","collapseToStart","info","WrappedRange","w3cRange","pointToTextRange","so","eo","sc","ec","nativeRng","selection","Math","getVisiblePoint","block","hasRightNode","hasLeftNode","isLeftToRight","includeAncestor","fullyContains","leftEdgeNodes","startAncestor","endAncestor","boundaryPoints","isSameContainer","rng","emptyParents","inlineSiblings","para","contentsContainer","reversed","findAfter","isNotTextPoint","regex","text","editable","s","path","e","paras","wrappedRange","bodyElement","createFromBodyElement","createFromSelection","textRangeEnd","textRangeToPoint","createFromNode","createFromNodeBefore","createFromNodeAfter","createFromBookmark","bookmark","createFromParaBookmark","KEY_MAP","isEdit","isMove","isNavigation","nameFromCode","code","onload","dataURL","deferred","onerror","$img","display","History","range","emptyBookmark","contents","snapshot","Style","$obj","propertyNames","properties","styleInfo","fontSize","parseInt","expandClosestSibling","onlyPartialContains","nodesInRange","tails","elem","$cont","orderedTypes","isUnordered","lineHeight","Bullet","clustereds","previousList","listName","wrappedParas","diffLists","prevList","nextList","listNode","isEscapseToBody","releasedParas","headList","parentItem","newList","lastList","middleList","rootLists","listNodes","Typing","tabsize","tab","nextPara","split","emptyAnchors","TableResultAction","_startPoint","_virtualTable","_actionCellList","objPosition","isVirtualCell","virtualTableCellObj","virtualColPosition","newCellIndex","cellIndex","recoverCellIndex","row","cell","cellHasColspan","cellHasRowspan","isThisSelectedCell","setVirtualTablePosition","rowspanNumber","rp","rowspanIndex","adjustStartPoint","colspanNumber","cp","cellspanIndex","rowIndex","rows","domTable","cells","addCellInfoToVirtual","setStartPoint","createVirtualTable","fixedRow","where","fixedCol","actualPosition","canContinue","rowPosition","colPosition","resultAction","getAddResultActionToCell","getDeleteResultActionToCell","getActionCell","init","Table","isShift","nextCell","currentTr","trAttributes","vTable","actions","idCell","currentCell","tdAttributes","baseCellTr","isTopFromRowSpan","newTd","lastTrIndex","rowsGroup","actionIndex","el","resultStr","attrList","cellPos","rowPos","baseCell","virtualPosition","hasRowspan","nextRow","cloneRow","hasColspan","colCount","rowCount","tds","idxCol","tdHTML","trs","idxRow","trHTML","$table","KEY_BOGUS","Editor","commands","unit","textNode","onApplyCustomStyle","hrNode","linkUrl","linkInfo","linkText","isNewWindow","checkProtocol","additionalTextLength","isTextChanged","anchors","anchor","foreColor","colorInfo","backColor","dimension","dim","lastRange","keyMap","keys","keyName","eventName","pad","lst","startRange","endRange","thenCollapse","isPreventTrigger","src","param","$image","files","filename","file","readFileAsDataURL","callbacks","tagName","className","currentRange","target","spans","firstSpan","noteStatusOutput","$anchor","bKeepRatio","newRatio","ratio","imageSize","y","Clipboard","clipboardData","window","Dropzone","$dropzoneMessage","isCodeview","hasEditorSize","dataTransfer","content","CodeView","CodeMirror","whitelist","cmEditor","server","isChange","EDITABLE_PADDING","Statusbar","editableTop","onMouseMove","Fullscreen","h","Handle","posStart","scrollTop","x","isImage","$selection","w","origImageObj","sizingText","defaultScheme","linkPattern","AutoLink","keyword","urlText","wordRange","AutoSync","AutoReplace","Placeholder","isShow","Buttons","editorMethod","o","tooltip","click","$button","$recentColor","data","toggle","items","$dropdown","$holder","colors","colorsName","customColors","$chip","$picker","$palette","$color","$currentButton","title","template","tag","styleIdx","styleLen","fontname","checkClassName","justifyLeft","justifyCenter","justifyRight","justifyFull","$catcher","groups","groupIdx","groupLen","group","groupName","$group","btn","fontNames","$item","isChecked","fontSizeUnit","infos","PX_PER_EM","$dimensionDisplay","$highlighted","$unhighlighted","posCatcher","posOffset","offsetY","c","r","Toolbar","editorHeight","editorWidth","toolbarHeight","statusbarHeight","otherBarHeight","currentOffset","editorOffsetTop","editorOffsetBottom","activateOffset","deactivateOffsetBottom","marginTop","zIndex","isFullscreen","isIncludeCodeview","$btn","LinkDialog","body","checked","buttonClass","footer","fade","$input","$linkBtn","$linkText","$linkUrl","$openInNewWindow","$useProtocol","isNewWindowChecked","useProtocolChecked","LinkPopover","$content","href","containerOffset","ImageDialog","imageLimitation","readableSize","$imageInput","$imageUrl","$imageBtn","ImagePopover","TablePopover","VideoDialog","ytRegExp","ytRegExpForStart","ytMatch","igRegExp","igMatch","vRegExp","vMatch","vimRegExp","vimMatch","dmRegExp","dmMatch","youkuRegExp","youkuMatch","qqRegExp","qqMatch","qqRegExp2","qqMatch2","mp4RegExp","mp4Match","oggRegExp","oggMatch","webmRegExp","webmMatch","fbRegExp","fbMatch","youtubeId","start","ytMatchForStart","$video","vid","encodeURIComponent","$videoUrl","$videoBtn","HelpDialog","command","$row","AIRMODE_POPOVER_X_OFFSET","AIRMODE_POPOVER_Y_OFFSET","AirPopover","forcelyOpen","pageY","POPOVER_DIST","HintPopover","hideArrow","direction","$current","$next","$nextGroup","$prev","$prevGroup","rangeCompute","hint","hintIdx","index","bnd","version","plugins","langInfo","editing","followingToolbar","toolbarPosition","otherStaticBar","codeviewKeepButton","toolbar","popatmouse","popover","air","airMode","overrideContextMenu","linkTargetBlank","defaultProtocol","focus","tabDisabled","tabSize","styleWithCSS","textareaAutoSync","maxTextLength","blockquoteBreakingLevel","spellCheck","disableGrammar","placeholder","inheritPlaceholder","recordEveryKeystroke","historyLimit","showDomainOnlyForAutolink","hintMode","hintSelect","hintDirection","styleTags","fontNamesIgnoreCheck","addDefaultFonts","fontSizes","fontSizeUnits","colorButton","lineHeights","tableClassName","insertTableMaxSize","col","dialogsInBody","dialogsFade","maximumImageFileSize","onBeforeCommand","onBlur","onBlurCodeview","onChange","onChangeCodeview","onDialogShown","onEnter","onFocus","onImageLinkInsert","onImageUpload","onImageUploadError","onInit","onKeydown","onKeyup","onMousedown","onMouseup","onPaste","onScroll","codemirror","mode","htmlMode","lineNumbers","codeviewFilter","codeviewFilterRegex","codeviewIframeFilter","codeviewIframeWhitelistSrc","codeviewIframeWhitelistSrcBase","pc","mac","icons","editor","renderer","editingArea","codable","statusbar","airEditor","airEditable","buttonGroup","dropdown","option","dataValue","dataOption","dropdownButtonContents","dropdownCheck","icon","dialog","checkbox","ui","palette","rowSize","colSize","colorName","editorOptions","trigger","placement","button","toggleBtn","toggleBtnActive","$dialog","onDialogHidden","showDialog","hideDialog","createLayout","$editor","note","removeLayout","layoutInfo","ui_template"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"jquery\")) : factory(root[\"jQuery\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 53);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import $ from 'jquery';\n\nclass Renderer {\n  constructor(markup, children, options, callback) {\n    this.markup = markup;\n    this.children = children;\n    this.options = options;\n    this.callback = callback;\n  }\n\n  render($parent) {\n    const $node = $(this.markup);\n\n    if (this.options && this.options.contents) {\n      $node.html(this.options.contents);\n    }\n\n    if (this.options && this.options.className) {\n      $node.addClass(this.options.className);\n    }\n\n    if (this.options && this.options.data) {\n      $.each(this.options.data, (k, v) => {\n        $node.attr('data-' + k, v);\n      });\n    }\n\n    if (this.options && this.options.click) {\n      $node.on('click', this.options.click);\n    }\n\n    if (this.children) {\n      const $container = $node.find('.note-children-container');\n      this.children.forEach((child) => {\n        child.render($container.length ? $container : $node);\n      });\n    }\n\n    if (this.callback) {\n      this.callback($node, this.options);\n    }\n\n    if (this.options && this.options.callback) {\n      this.options.callback($node);\n    }\n\n    if ($parent) {\n      $parent.append($node);\n    }\n\n    return $node;\n  }\n}\n\nexport default {\n  create: (markup, callback) => {\n    return function() {\n      const options = typeof arguments[1] === 'object' ? arguments[1] : arguments[0];\n      let children = Array.isArray(arguments[0]) ? arguments[0] : [];\n      if (options && options.children) {\n        children = options.children;\n      }\n      return new Renderer(markup, children, options, callback);\n    };\n  },\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","import $ from 'jquery';\n\n$.summernote = $.summernote || {\n  lang: {},\n};\n\n$.extend($.summernote.lang, {\n  'en-US': {\n    font: {\n      bold: 'Bold',\n      italic: 'Italic',\n      underline: 'Underline',\n      clear: 'Remove Font Style',\n      height: 'Line Height',\n      name: 'Font Family',\n      strikethrough: 'Strikethrough',\n      subscript: 'Subscript',\n      superscript: 'Superscript',\n      size: 'Font Size',\n      sizeunit: 'Font Size Unit',\n    },\n    image: {\n      image: 'Picture',\n      insert: 'Insert Image',\n      resizeFull: 'Resize full',\n      resizeHalf: 'Resize half',\n      resizeQuarter: 'Resize quarter',\n      resizeNone: 'Original size',\n      floatLeft: 'Float Left',\n      floatRight: 'Float Right',\n      floatNone: 'Remove float',\n      shapeRounded: 'Shape: Rounded',\n      shapeCircle: 'Shape: Circle',\n      shapeThumbnail: 'Shape: Thumbnail',\n      shapeNone: 'Shape: None',\n      dragImageHere: 'Drag image or text here',\n      dropImage: 'Drop image or Text',\n      selectFromFiles: 'Select from files',\n      maximumFileSize: 'Maximum file size',\n      maximumFileSizeError: 'Maximum file size exceeded.',\n      url: 'Image URL',\n      remove: 'Remove Image',\n      original: 'Original',\n    },\n    video: {\n      video: 'Video',\n      videoLink: 'Video Link',\n      insert: 'Insert Video',\n      url: 'Video URL',\n      providers: '(YouTube, Vimeo, Vine, Instagram, DailyMotion or Youku)',\n    },\n    link: {\n      link: 'Link',\n      insert: 'Insert Link',\n      unlink: 'Unlink',\n      edit: 'Edit',\n      textToDisplay: 'Text to display',\n      url: 'To what URL should this link go?',\n      openInNewWindow: 'Open in new window',\n      useProtocol: 'Use default protocol',\n    },\n    table: {\n      table: 'Table',\n      addRowAbove: 'Add row above',\n      addRowBelow: 'Add row below',\n      addColLeft: 'Add column left',\n      addColRight: 'Add column right',\n      delRow: 'Delete row',\n      delCol: 'Delete column',\n      delTable: 'Delete table',\n    },\n    hr: {\n      insert: 'Insert Horizontal Rule',\n    },\n    style: {\n      style: 'Style',\n      p: 'Normal',\n      blockquote: 'Quote',\n      pre: 'Code',\n      h1: 'Header 1',\n      h2: 'Header 2',\n      h3: 'Header 3',\n      h4: 'Header 4',\n      h5: 'Header 5',\n      h6: 'Header 6',\n    },\n    lists: {\n      unordered: 'Unordered list',\n      ordered: 'Ordered list',\n    },\n    options: {\n      help: 'Help',\n      fullscreen: 'Full Screen',\n      codeview: 'Code View',\n    },\n    paragraph: {\n      paragraph: 'Paragraph',\n      outdent: 'Outdent',\n      indent: 'Indent',\n      left: 'Align left',\n      center: 'Align center',\n      right: 'Align right',\n      justify: 'Justify full',\n    },\n    color: {\n      recent: 'Recent Color',\n      more: 'More Color',\n      background: 'Background Color',\n      foreground: 'Text Color',\n      transparent: 'Transparent',\n      setTransparent: 'Set transparent',\n      reset: 'Reset',\n      resetToDefault: 'Reset to default',\n      cpSelect: 'Select',\n    },\n    shortcut: {\n      shortcuts: 'Keyboard shortcuts',\n      close: 'Close',\n      textFormatting: 'Text formatting',\n      action: 'Action',\n      paragraphFormatting: 'Paragraph formatting',\n      documentStyle: 'Document Style',\n      extraKeys: 'Extra keys',\n    },\n    help: {\n      'escape': 'Escape',\n      'insertParagraph': 'Insert Paragraph',\n      'undo': 'Undo the last command',\n      'redo': 'Redo the last command',\n      'tab': 'Tab',\n      'untab': 'Untab',\n      'bold': 'Set a bold style',\n      'italic': 'Set a italic style',\n      'underline': 'Set a underline style',\n      'strikethrough': 'Set a strikethrough style',\n      'removeFormat': 'Clean a style',\n      'justifyLeft': 'Set left align',\n      'justifyCenter': 'Set center align',\n      'justifyRight': 'Set right align',\n      'justifyFull': 'Set full align',\n      'insertUnorderedList': 'Toggle unordered list',\n      'insertOrderedList': 'Toggle ordered list',\n      'outdent': 'Outdent on current paragraph',\n      'indent': 'Indent on current paragraph',\n      'formatPara': 'Change current block\\'s format as a paragraph(P tag)',\n      'formatH1': 'Change current block\\'s format as H1',\n      'formatH2': 'Change current block\\'s format as H2',\n      'formatH3': 'Change current block\\'s format as H3',\n      'formatH4': 'Change current block\\'s format as H4',\n      'formatH5': 'Change current block\\'s format as H5',\n      'formatH6': 'Change current block\\'s format as H6',\n      'insertHorizontalRule': 'Insert horizontal rule',\n      'linkDialog.show': 'Show Link Dialog',\n    },\n    history: {\n      undo: 'Undo',\n      redo: 'Redo',\n    },\n    specialChar: {\n      specialChar: 'SPECIAL CHARACTERS',\n      select: 'Select Special characters',\n    },\n    output: {\n      noSelection: 'No Selection Made!',\n    },\n  },\n});\n","import $ from 'jquery';\nconst isSupportAmd = typeof define === 'function' && define.amd; // eslint-disable-line\n\n/**\n * returns whether font is installed or not.\n *\n * @param {String} fontName\n * @return {Boolean}\n */\nconst genericFontFamilies = ['sans-serif', 'serif', 'monospace', 'cursive', 'fantasy'];\n\nfunction validFontName(fontName) {\n  return ($.inArray(fontName.toLowerCase(), genericFontFamilies) === -1) ? `'${fontName}'` : fontName;\n}\n\nfunction isFontInstalled(fontName) {\n  const testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\n  const testText = 'mmmmmmmmmmwwwww';\n  const testSize = '200px';\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n\n  context.font = testSize + \" '\" + testFontName + \"'\";\n  const originalWidth = context.measureText(testText).width;\n\n  context.font = testSize + ' ' + validFontName(fontName) + ', \"' + testFontName + '\"';\n  const width = context.measureText(testText).width;\n\n  return originalWidth !== width;\n}\n\nconst userAgent = navigator.userAgent;\nconst isMSIE = /MSIE|Trident/i.test(userAgent);\nlet browserVersion;\nif (isMSIE) {\n  let matches = /MSIE (\\d+[.]\\d+)/.exec(userAgent);\n  if (matches) {\n    browserVersion = parseFloat(matches[1]);\n  }\n  matches = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(userAgent);\n  if (matches) {\n    browserVersion = parseFloat(matches[1]);\n  }\n}\n\nconst isEdge = /Edge\\/\\d+/.test(userAgent);\n\nconst isSupportTouch =\n  (('ontouchstart' in window) ||\n   (navigator.MaxTouchPoints > 0) ||\n   (navigator.msMaxTouchPoints > 0));\n\n// [workaround] IE doesn't have input events for contentEditable\n// - see: https://goo.gl/4bfIvA\nconst inputEventName = (isMSIE) ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\n\n/**\n * @class core.env\n *\n * Object which check platform and agent\n *\n * @singleton\n * @alternateClassName env\n */\nexport default {\n  isMac: navigator.appVersion.indexOf('Mac') > -1,\n  isMSIE,\n  isEdge,\n  isFF: !isEdge && /firefox/i.test(userAgent),\n  isPhantom: /PhantomJS/i.test(userAgent),\n  isWebkit: !isEdge && /webkit/i.test(userAgent),\n  isChrome: !isEdge && /chrome/i.test(userAgent),\n  isSafari: !isEdge && /safari/i.test(userAgent) && (!/chrome/i.test(userAgent)),\n  browserVersion,\n  jqueryVersion: parseFloat($.fn.jquery),\n  isSupportAmd,\n  isSupportTouch,\n  isFontInstalled,\n  isW3CRangeSupport: !!document.createRange,\n  inputEventName,\n  genericFontFamilies,\n  validFontName,\n};\n","import $ from 'jquery';\n\n/**\n * @class core.func\n *\n * func utils (for high-order func's arg)\n *\n * @singleton\n * @alternateClassName func\n */\nfunction eq(itemA) {\n  return function(itemB) {\n    return itemA === itemB;\n  };\n}\n\nfunction eq2(itemA, itemB) {\n  return itemA === itemB;\n}\n\nfunction peq2(propName) {\n  return function(itemA, itemB) {\n    return itemA[propName] === itemB[propName];\n  };\n}\n\nfunction ok() {\n  return true;\n}\n\nfunction fail() {\n  return false;\n}\n\nfunction not(f) {\n  return function() {\n    return !f.apply(f, arguments);\n  };\n}\n\nfunction and(fA, fB) {\n  return function(item) {\n    return fA(item) && fB(item);\n  };\n}\n\nfunction self(a) {\n  return a;\n}\n\nfunction invoke(obj, method) {\n  return function() {\n    return obj[method].apply(obj, arguments);\n  };\n}\n\nlet idCounter = 0;\n\n/**\n * reset globally-unique id\n *\n */\nfunction resetUniqueId() {\n  idCounter = 0;\n}\n\n/**\n * generate a globally-unique id\n *\n * @param {String} [prefix]\n */\nfunction uniqueId(prefix) {\n  const id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n\n/**\n * returns bnd (bounds) from rect\n *\n * - IE Compatibility Issue: http://goo.gl/sRLOAo\n * - Scroll Issue: http://goo.gl/sNjUc\n *\n * @param {Rect} rect\n * @return {Object} bounds\n * @return {Number} bounds.top\n * @return {Number} bounds.left\n * @return {Number} bounds.width\n * @return {Number} bounds.height\n */\nfunction rect2bnd(rect) {\n  const $document = $(document);\n  return {\n    top: rect.top + $document.scrollTop(),\n    left: rect.left + $document.scrollLeft(),\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n}\n\n/**\n * returns a copy of the object where the keys have become the values and the values the keys.\n * @param {Object} obj\n * @return {Object}\n */\nfunction invertObject(obj) {\n  const inverted = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      inverted[obj[key]] = key;\n    }\n  }\n  return inverted;\n}\n\n/**\n * @param {String} namespace\n * @param {String} [prefix]\n * @return {String}\n */\nfunction namespaceToCamel(namespace, prefix) {\n  prefix = prefix || '';\n  return prefix + namespace.split('.').map(function(name) {\n    return name.substring(0, 1).toUpperCase() + name.substring(1);\n  }).join('');\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean} immediate\n * @return {Function}\n */\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\n/**\n *\n * @param {String} url\n * @return {Boolean}\n */\nfunction isValidUrl(url) {\n  const expression = /[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\n  return expression.test(url);\n}\n\nexport default {\n  eq,\n  eq2,\n  peq2,\n  ok,\n  fail,\n  self,\n  not,\n  and,\n  invoke,\n  resetUniqueId,\n  uniqueId,\n  rect2bnd,\n  invertObject,\n  namespaceToCamel,\n  debounce,\n  isValidUrl,\n};\n","import func from './func';\n\n/**\n * returns the first item of an array.\n *\n * @param {Array} array\n */\nfunction head(array) {\n  return array[0];\n}\n\n/**\n * returns the last item of an array.\n *\n * @param {Array} array\n */\nfunction last(array) {\n  return array[array.length - 1];\n}\n\n/**\n * returns everything but the last entry of the array.\n *\n * @param {Array} array\n */\nfunction initial(array) {\n  return array.slice(0, array.length - 1);\n}\n\n/**\n * returns the rest of the items in an array.\n *\n * @param {Array} array\n */\nfunction tail(array) {\n  return array.slice(1);\n}\n\n/**\n * returns item of array\n */\nfunction find(array, pred) {\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    const item = array[idx];\n    if (pred(item)) {\n      return item;\n    }\n  }\n}\n\n/**\n * returns true if all of the values in the array pass the predicate truth test.\n */\nfunction all(array, pred) {\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (!pred(array[idx])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * returns true if the value is present in the list.\n */\nfunction contains(array, item) {\n  if (array && array.length && item) {\n    if (array.indexOf) {\n      return array.indexOf(item) !== -1;\n    } else if (array.contains) {\n      // `DOMTokenList` doesn't implement `.indexOf`, but it implements `.contains`\n      return array.contains(item);\n    }\n  }\n  return false;\n}\n\n/**\n * get sum from a list\n *\n * @param {Array} array - array\n * @param {Function} fn - iterator\n */\nfunction sum(array, fn) {\n  fn = fn || func.self;\n  return array.reduce(function(memo, v) {\n    return memo + fn(v);\n  }, 0);\n}\n\n/**\n * returns a copy of the collection with array type.\n * @param {Collection} collection - collection eg) node.childNodes, ...\n */\nfunction from(collection) {\n  const result = [];\n  const length = collection.length;\n  let idx = -1;\n  while (++idx < length) {\n    result[idx] = collection[idx];\n  }\n  return result;\n}\n\n/**\n * returns whether list is empty or not\n */\nfunction isEmpty(array) {\n  return !array || !array.length;\n}\n\n/**\n * cluster elements by predicate function.\n *\n * @param {Array} array - array\n * @param {Function} fn - predicate function for cluster rule\n * @param {Array[]}\n */\nfunction clusterBy(array, fn) {\n  if (!array.length) { return []; }\n  const aTail = tail(array);\n  return aTail.reduce(function(memo, v) {\n    const aLast = last(memo);\n    if (fn(last(aLast), v)) {\n      aLast[aLast.length] = v;\n    } else {\n      memo[memo.length] = [v];\n    }\n    return memo;\n  }, [[head(array)]]);\n}\n\n/**\n * returns a copy of the array with all false values removed\n *\n * @param {Array} array - array\n * @param {Function} fn - predicate function for cluster rule\n */\nfunction compact(array) {\n  const aResult = [];\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (array[idx]) { aResult.push(array[idx]); }\n  }\n  return aResult;\n}\n\n/**\n * produces a duplicate-free version of the array\n *\n * @param {Array} array\n */\nfunction unique(array) {\n  const results = [];\n\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (!contains(results, array[idx])) {\n      results.push(array[idx]);\n    }\n  }\n\n  return results;\n}\n\n/**\n * returns next item.\n * @param {Array} array\n */\nfunction next(array, item) {\n  if (array && array.length && item) {\n    const idx = array.indexOf(item);\n    return idx === -1 ? null : array[idx + 1];\n  }\n  return null;\n}\n\n/**\n * returns prev item.\n * @param {Array} array\n */\nfunction prev(array, item) {\n  if (array && array.length && item) {\n    const idx = array.indexOf(item);\n    return idx === -1 ? null : array[idx - 1];\n  }\n  return null;\n}\n\n/**\n * @class core.list\n *\n * list utils\n *\n * @singleton\n * @alternateClassName list\n */\nexport default {\n  head,\n  last,\n  initial,\n  tail,\n  prev,\n  next,\n  find,\n  contains,\n  all,\n  sum,\n  from,\n  isEmpty,\n  clusterBy,\n  compact,\n  unique,\n};\n","import $ from 'jquery';\nimport func from './func';\nimport lists from './lists';\nimport env from './env';\n\nconst NBSP_CHAR = String.fromCharCode(160);\nconst ZERO_WIDTH_NBSP_CHAR = '\\ufeff';\n\n/**\n * @method isEditable\n *\n * returns whether node is `note-editable` or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isEditable(node) {\n  return node && $(node).hasClass('note-editable');\n}\n\n/**\n * @method isControlSizing\n *\n * returns whether node is `note-control-sizing` or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isControlSizing(node) {\n  return node && $(node).hasClass('note-control-sizing');\n}\n\n/**\n * @method makePredByNodeName\n *\n * returns predicate which judge whether nodeName is same\n *\n * @param {String} nodeName\n * @return {Function}\n */\nfunction makePredByNodeName(nodeName) {\n  nodeName = nodeName.toUpperCase();\n  return function(node) {\n    return node && node.nodeName.toUpperCase() === nodeName;\n  };\n}\n\n/**\n * @method isText\n *\n *\n *\n * @param {Node} node\n * @return {Boolean} true if node's type is text(3)\n */\nfunction isText(node) {\n  return node && node.nodeType === 3;\n}\n\n/**\n * @method isElement\n *\n *\n *\n * @param {Node} node\n * @return {Boolean} true if node's type is element(1)\n */\nfunction isElement(node) {\n  return node && node.nodeType === 1;\n}\n\n/**\n * ex) br, col, embed, hr, img, input, ...\n * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n */\nfunction isVoid(node) {\n  return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(node.nodeName.toUpperCase());\n}\n\nfunction isPara(node) {\n  if (isEditable(node)) {\n    return false;\n  }\n\n  // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\n  return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\n}\n\nfunction isHeading(node) {\n  return node && /^H[1-7]/.test(node.nodeName.toUpperCase());\n}\n\nconst isPre = makePredByNodeName('PRE');\n\nconst isLi = makePredByNodeName('LI');\n\nfunction isPurePara(node) {\n  return isPara(node) && !isLi(node);\n}\n\nconst isTable = makePredByNodeName('TABLE');\n\nconst isData = makePredByNodeName('DATA');\n\nfunction isInline(node) {\n  return !isBodyContainer(node) &&\n         !isList(node) &&\n         !isHr(node) &&\n         !isPara(node) &&\n         !isTable(node) &&\n         !isBlockquote(node) &&\n         !isData(node);\n}\n\nfunction isList(node) {\n  return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\n}\n\nconst isHr = makePredByNodeName('HR');\n\nfunction isCell(node) {\n  return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\n}\n\nconst isBlockquote = makePredByNodeName('BLOCKQUOTE');\n\nfunction isBodyContainer(node) {\n  return isCell(node) || isBlockquote(node) || isEditable(node);\n}\n\nconst isAnchor = makePredByNodeName('A');\n\nfunction isParaInline(node) {\n  return isInline(node) && !!ancestor(node, isPara);\n}\n\nfunction isBodyInline(node) {\n  return isInline(node) && !ancestor(node, isPara);\n}\n\nconst isBody = makePredByNodeName('BODY');\n\n/**\n * returns whether nodeB is closest sibling of nodeA\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n * @return {Boolean}\n */\nfunction isClosestSibling(nodeA, nodeB) {\n  return nodeA.nextSibling === nodeB ||\n         nodeA.previousSibling === nodeB;\n}\n\n/**\n * returns array of closest siblings with node\n *\n * @param {Node} node\n * @param {function} [pred] - predicate function\n * @return {Node[]}\n */\nfunction withClosestSiblings(node, pred) {\n  pred = pred || func.ok;\n\n  const siblings = [];\n  if (node.previousSibling && pred(node.previousSibling)) {\n    siblings.push(node.previousSibling);\n  }\n  siblings.push(node);\n  if (node.nextSibling && pred(node.nextSibling)) {\n    siblings.push(node.nextSibling);\n  }\n  return siblings;\n}\n\n/**\n * blank HTML for cursor position\n * - [workaround] old IE only works with &nbsp;\n * - [workaround] IE11 and other browser works with bogus br\n */\nconst blankHTML = env.isMSIE && env.browserVersion < 11 ? '&nbsp;' : '<br>';\n\n/**\n * @method nodeLength\n *\n * returns #text's text size or element's childNodes size\n *\n * @param {Node} node\n */\nfunction nodeLength(node) {\n  if (isText(node)) {\n    return node.nodeValue.length;\n  }\n\n  if (node) {\n    return node.childNodes.length;\n  }\n\n  return 0;\n}\n\n/**\n * returns whether deepest child node is empty or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction deepestChildIsEmpty(node) {\n  do {\n    if (node.firstElementChild === null || node.firstElementChild.innerHTML === '') break;\n  } while ((node = node.firstElementChild));\n\n  return isEmpty(node);\n}\n\n/**\n * returns whether node is empty or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isEmpty(node) {\n  const len = nodeLength(node);\n\n  if (len === 0) {\n    return true;\n  } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\n    // ex) <p><br></p>, <span><br></span>\n    return true;\n  } else if (lists.all(node.childNodes, isText) && node.innerHTML === '') {\n    // ex) <p></p>, <span></span>\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * padding blankHTML if node is empty (for cursor position)\n */\nfunction paddingBlankHTML(node) {\n  if (!isVoid(node) && !nodeLength(node)) {\n    node.innerHTML = blankHTML;\n  }\n}\n\n/**\n * find nearest ancestor predicate hit\n *\n * @param {Node} node\n * @param {Function} pred - predicate function\n */\nfunction ancestor(node, pred) {\n  while (node) {\n    if (pred(node)) { return node; }\n    if (isEditable(node)) { break; }\n\n    node = node.parentNode;\n  }\n  return null;\n}\n\n/**\n * find nearest ancestor only single child blood line and predicate hit\n *\n * @param {Node} node\n * @param {Function} pred - predicate function\n */\nfunction singleChildAncestor(node, pred) {\n  node = node.parentNode;\n\n  while (node) {\n    if (nodeLength(node) !== 1) { break; }\n    if (pred(node)) { return node; }\n    if (isEditable(node)) { break; }\n\n    node = node.parentNode;\n  }\n  return null;\n}\n\n/**\n * returns new array of ancestor nodes (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [optional] pred - predicate function\n */\nfunction listAncestor(node, pred) {\n  pred = pred || func.fail;\n\n  const ancestors = [];\n  ancestor(node, function(el) {\n    if (!isEditable(el)) {\n      ancestors.push(el);\n    }\n\n    return pred(el);\n  });\n  return ancestors;\n}\n\n/**\n * find farthest ancestor predicate hit\n */\nfunction lastAncestor(node, pred) {\n  const ancestors = listAncestor(node);\n  return lists.last(ancestors.filter(pred));\n}\n\n/**\n * returns common ancestor node between two nodes.\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n */\nfunction commonAncestor(nodeA, nodeB) {\n  const ancestors = listAncestor(nodeA);\n  for (let n = nodeB; n; n = n.parentNode) {\n    if (ancestors.indexOf(n) > -1) return n;\n  }\n  return null; // difference document area\n}\n\n/**\n * listing all previous siblings (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [optional] pred - predicate function\n */\nfunction listPrev(node, pred) {\n  pred = pred || func.fail;\n\n  const nodes = [];\n  while (node) {\n    if (pred(node)) { break; }\n    nodes.push(node);\n    node = node.previousSibling;\n  }\n  return nodes;\n}\n\n/**\n * listing next siblings (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [pred] - predicate function\n */\nfunction listNext(node, pred) {\n  pred = pred || func.fail;\n\n  const nodes = [];\n  while (node) {\n    if (pred(node)) { break; }\n    nodes.push(node);\n    node = node.nextSibling;\n  }\n  return nodes;\n}\n\n/**\n * listing descendant nodes\n *\n * @param {Node} node\n * @param {Function} [pred] - predicate function\n */\nfunction listDescendant(node, pred) {\n  const descendants = [];\n  pred = pred || func.ok;\n\n  // start DFS(depth first search) with node\n  (function fnWalk(current) {\n    if (node !== current && pred(current)) {\n      descendants.push(current);\n    }\n    for (let idx = 0, len = current.childNodes.length; idx < len; idx++) {\n      fnWalk(current.childNodes[idx]);\n    }\n  })(node);\n\n  return descendants;\n}\n\n/**\n * wrap node with new tag.\n *\n * @param {Node} node\n * @param {Node} tagName of wrapper\n * @return {Node} - wrapper\n */\nfunction wrap(node, wrapperName) {\n  const parent = node.parentNode;\n  const wrapper = $('<' + wrapperName + '>')[0];\n\n  parent.insertBefore(wrapper, node);\n  wrapper.appendChild(node);\n\n  return wrapper;\n}\n\n/**\n * insert node after preceding\n *\n * @param {Node} node\n * @param {Node} preceding - predicate function\n */\nfunction insertAfter(node, preceding) {\n  const next = preceding.nextSibling;\n  let parent = preceding.parentNode;\n  if (next) {\n    parent.insertBefore(node, next);\n  } else {\n    parent.appendChild(node);\n  }\n  return node;\n}\n\n/**\n * append elements.\n *\n * @param {Node} node\n * @param {Collection} aChild\n */\nfunction appendChildNodes(node, aChild) {\n  $.each(aChild, function(idx, child) {\n    node.appendChild(child);\n  });\n  return node;\n}\n\n/**\n * returns whether boundaryPoint is left edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isLeftEdgePoint(point) {\n  return point.offset === 0;\n}\n\n/**\n * returns whether boundaryPoint is right edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isRightEdgePoint(point) {\n  return point.offset === nodeLength(point.node);\n}\n\n/**\n * returns whether boundaryPoint is edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isEdgePoint(point) {\n  return isLeftEdgePoint(point) || isRightEdgePoint(point);\n}\n\n/**\n * returns whether node is left edge of ancestor or not.\n *\n * @param {Node} node\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isLeftEdgeOf(node, ancestor) {\n  while (node && node !== ancestor) {\n    if (position(node) !== 0) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n\n  return true;\n}\n\n/**\n * returns whether node is right edge of ancestor or not.\n *\n * @param {Node} node\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isRightEdgeOf(node, ancestor) {\n  if (!ancestor) {\n    return false;\n  }\n  while (node && node !== ancestor) {\n    if (position(node) !== nodeLength(node.parentNode) - 1) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n\n  return true;\n}\n\n/**\n * returns whether point is left edge of ancestor or not.\n * @param {BoundaryPoint} point\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isLeftEdgePointOf(point, ancestor) {\n  return isLeftEdgePoint(point) && isLeftEdgeOf(point.node, ancestor);\n}\n\n/**\n * returns whether point is right edge of ancestor or not.\n * @param {BoundaryPoint} point\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isRightEdgePointOf(point, ancestor) {\n  return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);\n}\n\n/**\n * returns offset from parent.\n *\n * @param {Node} node\n */\nfunction position(node) {\n  let offset = 0;\n  while ((node = node.previousSibling)) {\n    offset += 1;\n  }\n  return offset;\n}\n\nfunction hasChildren(node) {\n  return !!(node && node.childNodes && node.childNodes.length);\n}\n\n/**\n * returns previous boundaryPoint\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction prevPoint(point, isSkipInnerOffset) {\n  let node;\n  let offset;\n\n  if (point.offset === 0) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    node = point.node.parentNode;\n    offset = position(point.node);\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset - 1];\n    offset = nodeLength(node);\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? 0 : point.offset - 1;\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/**\n * returns next boundaryPoint\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction nextPoint(point, isSkipInnerOffset) {\n  let node, offset;\n\n  if (nodeLength(point.node) === point.offset) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    let nextTextNode = getNextTextNode(point.node);\n    if (nextTextNode) {\n      node = nextTextNode;\n      offset = 0;\n    } else {\n      node = point.node.parentNode;\n      offset = position(point.node) + 1;\n    }\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset];\n    offset = 0;\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/**\n * returns next boundaryPoint with empty node\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction nextPointWithEmptyNode(point, isSkipInnerOffset) {\n  let node, offset;\n\n  // if node is empty string node, return current node's sibling.\n  if (isEmpty(point.node)) {\n    node = point.node.nextSibling;\n    offset = 0;\n\n    return {\n      node: node,\n      offset: offset,\n    };\n  }\n\n  if (nodeLength(point.node) === point.offset) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    let nextTextNode = getNextTextNode(point.node);\n    if (nextTextNode) {\n      node = nextTextNode;\n      offset = 0;\n    } else {\n      node = point.node.parentNode;\n      offset = position(point.node) + 1;\n    }\n\n    // if next node is editable, return current node's sibling node.\n    if (isEditable(node)) {\n      node = point.node.nextSibling;\n      offset = 0;\n    }\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset];\n    offset = 0;\n    if (isEmpty(node)) {\n      return null;\n    }\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n\n    if (isEmpty(node)) {\n      return null;\n    }\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/*\n* returns the next Text node index or 0 if not found.\n*/\nfunction getNextTextNode(actual) {\n  if (!actual.nextSibling) return undefined;\n  if (actual.parent !== actual.nextSibling.parent) return undefined;\n  if (isText(actual.nextSibling)) return actual.nextSibling;\n  return getNextTextNode(actual.nextSibling);\n}\n\n/**\n * returns whether pointA and pointB is same or not.\n *\n * @param {BoundaryPoint} pointA\n * @param {BoundaryPoint} pointB\n * @return {Boolean}\n */\nfunction isSamePoint(pointA, pointB) {\n  return pointA.node === pointB.node && pointA.offset === pointB.offset;\n}\n\n/**\n * returns whether point is visible (can set cursor) or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isVisiblePoint(point) {\n  if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\n    return true;\n  }\n\n  const leftNode = point.node.childNodes[point.offset - 1];\n  const rightNode = point.node.childNodes[point.offset];\n  if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @method prevPointUtil\n *\n * @param {BoundaryPoint} point\n * @param {Function} pred\n * @return {BoundaryPoint}\n */\nfunction prevPointUntil(point, pred) {\n  while (point) {\n    if (pred(point)) {\n      return point;\n    }\n\n    point = prevPoint(point);\n  }\n\n  return null;\n}\n\n/**\n * @method nextPointUntil\n *\n * @param {BoundaryPoint} point\n * @param {Function} pred\n * @return {BoundaryPoint}\n */\nfunction nextPointUntil(point, pred) {\n  while (point) {\n    if (pred(point)) {\n      return point;\n    }\n\n    point = nextPoint(point);\n  }\n\n  return null;\n}\n\n/**\n * returns whether point has character or not.\n *\n * @param {Point} point\n * @return {Boolean}\n */\nfunction isCharPoint(point) {\n  if (!isText(point.node)) {\n    return false;\n  }\n\n  const ch = point.node.nodeValue.charAt(point.offset - 1);\n  return ch && (ch !== ' ' && ch !== NBSP_CHAR);\n}\n\n/**\n * returns whether point has space or not.\n *\n * @param {Point} point\n * @return {Boolean}\n */\nfunction isSpacePoint(point) {\n  if (!isText(point.node)) {\n    return false;\n  }\n\n  const ch = point.node.nodeValue.charAt(point.offset - 1);\n  return ch === ' ' || ch === NBSP_CHAR;\n}\n\n/**\n * @method walkPoint\n *\n * @param {BoundaryPoint} startPoint\n * @param {BoundaryPoint} endPoint\n * @param {Function} handler\n * @param {Boolean} isSkipInnerOffset\n */\nfunction walkPoint(startPoint, endPoint, handler, isSkipInnerOffset) {\n  let point = startPoint;\n\n  while (point) {\n    handler(point);\n\n    if (isSamePoint(point, endPoint)) {\n      break;\n    }\n\n    const isSkipOffset = isSkipInnerOffset &&\n                       startPoint.node !== point.node &&\n                       endPoint.node !== point.node;\n    point = nextPointWithEmptyNode(point, isSkipOffset);\n  }\n}\n\n/**\n * @method makeOffsetPath\n *\n * return offsetPath(array of offset) from ancestor\n *\n * @param {Node} ancestor - ancestor node\n * @param {Node} node\n */\nfunction makeOffsetPath(ancestor, node) {\n  const ancestors = listAncestor(node, func.eq(ancestor));\n  return ancestors.map(position).reverse();\n}\n\n/**\n * @method fromOffsetPath\n *\n * return element from offsetPath(array of offset)\n *\n * @param {Node} ancestor - ancestor node\n * @param {array} offsets - offsetPath\n */\nfunction fromOffsetPath(ancestor, offsets) {\n  let current = ancestor;\n  for (let i = 0, len = offsets.length; i < len; i++) {\n    if (current.childNodes.length <= offsets[i]) {\n      current = current.childNodes[current.childNodes.length - 1];\n    } else {\n      current = current.childNodes[offsets[i]];\n    }\n  }\n  return current;\n}\n\n/**\n * @method splitNode\n *\n * split element or #text\n *\n * @param {BoundaryPoint} point\n * @param {Object} [options]\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n * @param {Boolean} [options.isDiscardEmptySplits] - default: false\n * @return {Node} right node of boundaryPoint\n */\nfunction splitNode(point, options) {\n  let isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\n  const isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\n  const isDiscardEmptySplits = options && options.isDiscardEmptySplits;\n\n  if (isDiscardEmptySplits) {\n    isSkipPaddingBlankHTML = true;\n  }\n\n  // edge case\n  if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\n    if (isLeftEdgePoint(point)) {\n      return point.node;\n    } else if (isRightEdgePoint(point)) {\n      return point.node.nextSibling;\n    }\n  }\n\n  // split #text\n  if (isText(point.node)) {\n    return point.node.splitText(point.offset);\n  } else {\n    const childNode = point.node.childNodes[point.offset];\n    const clone = insertAfter(point.node.cloneNode(false), point.node);\n    appendChildNodes(clone, listNext(childNode));\n\n    if (!isSkipPaddingBlankHTML) {\n      paddingBlankHTML(point.node);\n      paddingBlankHTML(clone);\n    }\n\n    if (isDiscardEmptySplits) {\n      if (isEmpty(point.node)) {\n        remove(point.node);\n      }\n      if (isEmpty(clone)) {\n        remove(clone);\n        return point.node.nextSibling;\n      }\n    }\n\n    return clone;\n  }\n}\n\n/**\n * @method splitTree\n *\n * split tree by point\n *\n * @param {Node} root - split root\n * @param {BoundaryPoint} point\n * @param {Object} [options]\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n * @return {Node} right node of boundaryPoint\n */\nfunction splitTree(root, point, options) {\n  // ex) [#text, <span>, <p>]\n  const ancestors = listAncestor(point.node, func.eq(root));\n\n  if (!ancestors.length) {\n    return null;\n  } else if (ancestors.length === 1) {\n    return splitNode(point, options);\n  }\n\n  return ancestors.reduce(function(node, parent) {\n    if (node === point.node) {\n      node = splitNode(point, options);\n    }\n\n    return splitNode({\n      node: parent,\n      offset: node ? position(node) : nodeLength(parent),\n    }, options);\n  });\n}\n\n/**\n * split point\n *\n * @param {Point} point\n * @param {Boolean} isInline\n * @return {Object}\n */\nfunction splitPoint(point, isInline) {\n  // find splitRoot, container\n  //  - inline: splitRoot is a child of paragraph\n  //  - block: splitRoot is a child of bodyContainer\n  const pred = isInline ? isPara : isBodyContainer;\n  const ancestors = listAncestor(point.node, pred);\n  const topAncestor = lists.last(ancestors) || point.node;\n\n  let splitRoot, container;\n  if (pred(topAncestor)) {\n    splitRoot = ancestors[ancestors.length - 2];\n    container = topAncestor;\n  } else {\n    splitRoot = topAncestor;\n    container = splitRoot.parentNode;\n  }\n\n  // if splitRoot is exists, split with splitTree\n  let pivot = splitRoot && splitTree(splitRoot, point, {\n    isSkipPaddingBlankHTML: isInline,\n    isNotSplitEdgePoint: isInline,\n  });\n\n  // if container is point.node, find pivot with point.offset\n  if (!pivot && container === point.node) {\n    pivot = point.node.childNodes[point.offset];\n  }\n\n  return {\n    rightNode: pivot,\n    container: container,\n  };\n}\n\nfunction create(nodeName) {\n  return document.createElement(nodeName);\n}\n\nfunction createText(text) {\n  return document.createTextNode(text);\n}\n\n/**\n * @method remove\n *\n * remove node, (isRemoveChild: remove child or not)\n *\n * @param {Node} node\n * @param {Boolean} isRemoveChild\n */\nfunction remove(node, isRemoveChild) {\n  if (!node || !node.parentNode) { return; }\n  if (node.removeNode) { return node.removeNode(isRemoveChild); }\n\n  const parent = node.parentNode;\n  if (!isRemoveChild) {\n    const nodes = [];\n    for (let i = 0, len = node.childNodes.length; i < len; i++) {\n      nodes.push(node.childNodes[i]);\n    }\n\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      parent.insertBefore(nodes[i], node);\n    }\n  }\n\n  parent.removeChild(node);\n}\n\n/**\n * @method removeWhile\n *\n * @param {Node} node\n * @param {Function} pred\n */\nfunction removeWhile(node, pred) {\n  while (node) {\n    if (isEditable(node) || !pred(node)) {\n      break;\n    }\n\n    const parent = node.parentNode;\n    remove(node);\n    node = parent;\n  }\n}\n\n/**\n * @method replace\n *\n * replace node with provided nodeName\n *\n * @param {Node} node\n * @param {String} nodeName\n * @return {Node} - new node\n */\nfunction replace(node, nodeName) {\n  if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\n    return node;\n  }\n\n  const newNode = create(nodeName);\n\n  if (node.style.cssText) {\n    newNode.style.cssText = node.style.cssText;\n  }\n\n  appendChildNodes(newNode, lists.from(node.childNodes));\n  insertAfter(newNode, node);\n  remove(node);\n\n  return newNode;\n}\n\nconst isTextarea = makePredByNodeName('TEXTAREA');\n\n/**\n * @param {jQuery} $node\n * @param {Boolean} [stripLinebreaks] - default: false\n */\nfunction value($node, stripLinebreaks) {\n  const val = isTextarea($node[0]) ? $node.val() : $node.html();\n  if (stripLinebreaks) {\n    return val.replace(/[\\n\\r]/g, '');\n  }\n  return val;\n}\n\n/**\n * @method html\n *\n * get the HTML contents of node\n *\n * @param {jQuery} $node\n * @param {Boolean} [isNewlineOnBlock]\n */\nfunction html($node, isNewlineOnBlock) {\n  let markup = value($node);\n\n  if (isNewlineOnBlock) {\n    const regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\n    markup = markup.replace(regexTag, function(match, endSlash, name) {\n      name = name.toUpperCase();\n      const isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\n                                   !!endSlash;\n      const isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\n\n      return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\n    });\n    markup = markup.trim();\n  }\n\n  return markup;\n}\n\nfunction posFromPlaceholder(placeholder) {\n  const $placeholder = $(placeholder);\n  const pos = $placeholder.offset();\n  const height = $placeholder.outerHeight(true); // include margin\n\n  return {\n    left: pos.left,\n    top: pos.top + height,\n  };\n}\n\nfunction attachEvents($node, events) {\n  Object.keys(events).forEach(function(key) {\n    $node.on(key, events[key]);\n  });\n}\n\nfunction detachEvents($node, events) {\n  Object.keys(events).forEach(function(key) {\n    $node.off(key, events[key]);\n  });\n}\n\n/**\n * @method isCustomStyleTag\n *\n * assert if a node contains a \"note-styletag\" class,\n * which implies that's a custom-made style tag node\n *\n * @param {Node} an HTML DOM node\n */\nfunction isCustomStyleTag(node) {\n  return node && !isText(node) && lists.contains(node.classList, 'note-styletag');\n}\n\nexport default {\n  /** @property {String} NBSP_CHAR */\n  NBSP_CHAR,\n  /** @property {String} ZERO_WIDTH_NBSP_CHAR */\n  ZERO_WIDTH_NBSP_CHAR,\n  /** @property {String} blank */\n  blank: blankHTML,\n  /** @property {String} emptyPara */\n  emptyPara: `<p>${blankHTML}</p>`,\n  makePredByNodeName,\n  isEditable,\n  isControlSizing,\n  isText,\n  isElement,\n  isVoid,\n  isPara,\n  isPurePara,\n  isHeading,\n  isInline,\n  isBlock: func.not(isInline),\n  isBodyInline,\n  isBody,\n  isParaInline,\n  isPre,\n  isList,\n  isTable,\n  isData,\n  isCell,\n  isBlockquote,\n  isBodyContainer,\n  isAnchor,\n  isDiv: makePredByNodeName('DIV'),\n  isLi,\n  isBR: makePredByNodeName('BR'),\n  isSpan: makePredByNodeName('SPAN'),\n  isB: makePredByNodeName('B'),\n  isU: makePredByNodeName('U'),\n  isS: makePredByNodeName('S'),\n  isI: makePredByNodeName('I'),\n  isImg: makePredByNodeName('IMG'),\n  isTextarea,\n  deepestChildIsEmpty,\n  isEmpty,\n  isEmptyAnchor: func.and(isAnchor, isEmpty),\n  isClosestSibling,\n  withClosestSiblings,\n  nodeLength,\n  isLeftEdgePoint,\n  isRightEdgePoint,\n  isEdgePoint,\n  isLeftEdgeOf,\n  isRightEdgeOf,\n  isLeftEdgePointOf,\n  isRightEdgePointOf,\n  prevPoint,\n  nextPoint,\n  nextPointWithEmptyNode,\n  isSamePoint,\n  isVisiblePoint,\n  prevPointUntil,\n  nextPointUntil,\n  isCharPoint,\n  isSpacePoint,\n  walkPoint,\n  ancestor,\n  singleChildAncestor,\n  listAncestor,\n  lastAncestor,\n  listNext,\n  listPrev,\n  listDescendant,\n  commonAncestor,\n  wrap,\n  insertAfter,\n  appendChildNodes,\n  position,\n  hasChildren,\n  makeOffsetPath,\n  fromOffsetPath,\n  splitTree,\n  splitPoint,\n  create,\n  createText,\n  remove,\n  removeWhile,\n  replace,\n  html,\n  value,\n  posFromPlaceholder,\n  attachEvents,\n  detachEvents,\n  isCustomStyleTag,\n};\n","import $ from 'jquery';\nimport func from './core/func';\nimport lists from './core/lists';\nimport dom from './core/dom';\n\nexport default class Context {\n  /**\n   * @param {jQuery} $note\n   * @param {Object} options\n   */\n  constructor($note, options) {\n    this.$note = $note;\n\n    this.memos = {};\n    this.modules = {};\n    this.layoutInfo = {};\n    this.options = $.extend(true, {}, options);\n\n    // init ui with options\n    $.summernote.ui = $.summernote.ui_template(this.options);\n    this.ui = $.summernote.ui;\n\n    this.initialize();\n  }\n\n  /**\n   * create layout and initialize modules and other resources\n   */\n  initialize() {\n    this.layoutInfo = this.ui.createLayout(this.$note);\n    this._initialize();\n    this.$note.hide();\n    return this;\n  }\n\n  /**\n   * destroy modules and other resources and remove layout\n   */\n  destroy() {\n    this._destroy();\n    this.$note.removeData('summernote');\n    this.ui.removeLayout(this.$note, this.layoutInfo);\n  }\n\n  /**\n   * destory modules and other resources and initialize it again\n   */\n  reset() {\n    const disabled = this.isDisabled();\n    this.code(dom.emptyPara);\n    this._destroy();\n    this._initialize();\n\n    if (disabled) {\n      this.disable();\n    }\n  }\n\n  _initialize() {\n    // set own id\n    this.options.id = func.uniqueId($.now());\n    // set default container for tooltips, popovers, and dialogs\n    this.options.container = this.options.container || this.layoutInfo.editor;\n\n    // add optional buttons\n    const buttons = $.extend({}, this.options.buttons);\n    Object.keys(buttons).forEach((key) => {\n      this.memo('button.' + key, buttons[key]);\n    });\n\n    const modules = $.extend({}, this.options.modules, $.summernote.plugins || {});\n\n    // add and initialize modules\n    Object.keys(modules).forEach((key) => {\n      this.module(key, modules[key], true);\n    });\n\n    Object.keys(this.modules).forEach((key) => {\n      this.initializeModule(key);\n    });\n  }\n\n  _destroy() {\n    // destroy modules with reversed order\n    Object.keys(this.modules).reverse().forEach((key) => {\n      this.removeModule(key);\n    });\n\n    Object.keys(this.memos).forEach((key) => {\n      this.removeMemo(key);\n    });\n    // trigger custom onDestroy callback\n    this.triggerEvent('destroy', this);\n  }\n\n  code(html) {\n    const isActivated = this.invoke('codeview.isActivated');\n\n    if (html === undefined) {\n      this.invoke('codeview.sync');\n      return isActivated ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\n    } else {\n      if (isActivated) {\n        this.invoke('codeview.sync', html);\n      } else {\n        this.layoutInfo.editable.html(html);\n      }\n      this.$note.val(html);\n      this.triggerEvent('change', html, this.layoutInfo.editable);\n    }\n  }\n\n  isDisabled() {\n    return this.layoutInfo.editable.attr('contenteditable') === 'false';\n  }\n\n  enable() {\n    this.layoutInfo.editable.attr('contenteditable', true);\n    this.invoke('toolbar.activate', true);\n    this.triggerEvent('disable', false);\n    this.options.editing = true;\n  }\n\n  disable() {\n    // close codeview if codeview is opend\n    if (this.invoke('codeview.isActivated')) {\n      this.invoke('codeview.deactivate');\n    }\n    this.layoutInfo.editable.attr('contenteditable', false);\n    this.options.editing = false;\n    this.invoke('toolbar.deactivate', true);\n\n    this.triggerEvent('disable', true);\n  }\n\n  triggerEvent() {\n    const namespace = lists.head(arguments);\n    const args = lists.tail(lists.from(arguments));\n\n    const callback = this.options.callbacks[func.namespaceToCamel(namespace, 'on')];\n    if (callback) {\n      callback.apply(this.$note[0], args);\n    }\n    this.$note.trigger('summernote.' + namespace, args);\n  }\n\n  initializeModule(key) {\n    const module = this.modules[key];\n    module.shouldInitialize = module.shouldInitialize || func.ok;\n    if (!module.shouldInitialize()) {\n      return;\n    }\n\n    // initialize module\n    if (module.initialize) {\n      module.initialize();\n    }\n\n    // attach events\n    if (module.events) {\n      dom.attachEvents(this.$note, module.events);\n    }\n  }\n\n  module(key, ModuleClass, withoutIntialize) {\n    if (arguments.length === 1) {\n      return this.modules[key];\n    }\n\n    this.modules[key] = new ModuleClass(this);\n\n    if (!withoutIntialize) {\n      this.initializeModule(key);\n    }\n  }\n\n  removeModule(key) {\n    const module = this.modules[key];\n    if (module.shouldInitialize()) {\n      if (module.events) {\n        dom.detachEvents(this.$note, module.events);\n      }\n\n      if (module.destroy) {\n        module.destroy();\n      }\n    }\n\n    delete this.modules[key];\n  }\n\n  memo(key, obj) {\n    if (arguments.length === 1) {\n      return this.memos[key];\n    }\n    this.memos[key] = obj;\n  }\n\n  removeMemo(key) {\n    if (this.memos[key] && this.memos[key].destroy) {\n      this.memos[key].destroy();\n    }\n\n    delete this.memos[key];\n  }\n\n  /**\n   * Some buttons need to change their visual style immediately once they get pressed\n   */\n  createInvokeHandlerAndUpdateState(namespace, value) {\n    return (event) => {\n      this.createInvokeHandler(namespace, value)(event);\n      this.invoke('buttons.updateCurrentStyle');\n    };\n  }\n\n  createInvokeHandler(namespace, value) {\n    return (event) => {\n      event.preventDefault();\n      const $target = $(event.target);\n      this.invoke(namespace, value || $target.closest('[data-value]').data('value'), $target);\n    };\n  }\n\n  invoke() {\n    const namespace = lists.head(arguments);\n    const args = lists.tail(lists.from(arguments));\n\n    const splits = namespace.split('.');\n    const hasSeparator = splits.length > 1;\n    const moduleName = hasSeparator && lists.head(splits);\n    const methodName = hasSeparator ? lists.last(splits) : lists.head(splits);\n\n    const module = this.modules[moduleName || 'editor'];\n    if (!moduleName && this[methodName]) {\n      return this[methodName].apply(this, args);\n    } else if (module && module[methodName] && module.shouldInitialize()) {\n      return module[methodName].apply(module, args);\n    }\n  }\n}\n","import $ from 'jquery';\nimport env from './base/core/env';\nimport lists from './base/core/lists';\nimport Context from './base/Context';\n\n$.fn.extend({\n  /**\n   * Summernote API\n   *\n   * @param {Object|String}\n   * @return {this}\n   */\n  summernote: function() {\n    const type = $.type(lists.head(arguments));\n    const isExternalAPICalled = type === 'string';\n    const hasInitOptions = type === 'object';\n\n    const options = $.extend({}, $.summernote.options, hasInitOptions ? lists.head(arguments) : {});\n\n    // Update options\n    options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]);\n    options.icons = $.extend(true, {}, $.summernote.options.icons, options.icons);\n    options.tooltip = options.tooltip === 'auto' ? !env.isSupportTouch : options.tooltip;\n\n    this.each((idx, note) => {\n      const $note = $(note);\n      if (!$note.data('summernote')) {\n        const context = new Context($note, options);\n        $note.data('summernote', context);\n        $note.data('summernote').triggerEvent('init', context.layoutInfo);\n      }\n    });\n\n    const $note = this.first();\n    if ($note.length) {\n      const context = $note.data('summernote');\n      if (isExternalAPICalled) {\n        return context.invoke.apply(context, lists.from(arguments));\n      } else if (options.focus) {\n        context.invoke('editor.focus');\n      }\n    }\n\n    return this;\n  },\n});\n","import $ from 'jquery';\nimport env from './env';\nimport func from './func';\nimport lists from './lists';\nimport dom from './dom';\n\n/**\n * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\n *\n * @param {TextRange} textRange\n * @param {Boolean} isStart\n * @return {BoundaryPoint}\n *\n * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\n */\nfunction textRangeToPoint(textRange, isStart) {\n  let container = textRange.parentElement();\n  let offset;\n\n  const tester = document.body.createTextRange();\n  let prevContainer;\n  const childNodes = lists.from(container.childNodes);\n  for (offset = 0; offset < childNodes.length; offset++) {\n    if (dom.isText(childNodes[offset])) {\n      continue;\n    }\n    tester.moveToElementText(childNodes[offset]);\n    if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\n      break;\n    }\n    prevContainer = childNodes[offset];\n  }\n\n  if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\n    const textRangeStart = document.body.createTextRange();\n    let curTextNode = null;\n    textRangeStart.moveToElementText(prevContainer || container);\n    textRangeStart.collapse(!prevContainer);\n    curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\n\n    const pointTester = textRange.duplicate();\n    pointTester.setEndPoint('StartToStart', textRangeStart);\n    let textCount = pointTester.text.replace(/[\\r\\n]/g, '').length;\n\n    while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\n      textCount -= curTextNode.nodeValue.length;\n      curTextNode = curTextNode.nextSibling;\n    }\n\n    // [workaround] enforce IE to re-reference curTextNode, hack\n    const dummy = curTextNode.nodeValue; // eslint-disable-line\n\n    if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) &&\n      textCount === curTextNode.nodeValue.length) {\n      textCount -= curTextNode.nodeValue.length;\n      curTextNode = curTextNode.nextSibling;\n    }\n\n    container = curTextNode;\n    offset = textCount;\n  }\n\n  return {\n    cont: container,\n    offset: offset,\n  };\n}\n\n/**\n * return TextRange from boundary point (inspired by google closure-library)\n * @param {BoundaryPoint} point\n * @return {TextRange}\n */\nfunction pointToTextRange(point) {\n  const textRangeInfo = function(container, offset) {\n    let node, isCollapseToStart;\n\n    if (dom.isText(container)) {\n      const prevTextNodes = dom.listPrev(container, func.not(dom.isText));\n      const prevContainer = lists.last(prevTextNodes).previousSibling;\n      node = prevContainer || container.parentNode;\n      offset += lists.sum(lists.tail(prevTextNodes), dom.nodeLength);\n      isCollapseToStart = !prevContainer;\n    } else {\n      node = container.childNodes[offset] || container;\n      if (dom.isText(node)) {\n        return textRangeInfo(node, 0);\n      }\n\n      offset = 0;\n      isCollapseToStart = false;\n    }\n\n    return {\n      node: node,\n      collapseToStart: isCollapseToStart,\n      offset: offset,\n    };\n  };\n\n  const textRange = document.body.createTextRange();\n  const info = textRangeInfo(point.node, point.offset);\n\n  textRange.moveToElementText(info.node);\n  textRange.collapse(info.collapseToStart);\n  textRange.moveStart('character', info.offset);\n  return textRange;\n}\n\n/**\n   * Wrapped Range\n   *\n   * @constructor\n   * @param {Node} sc - start container\n   * @param {Number} so - start offset\n   * @param {Node} ec - end container\n   * @param {Number} eo - end offset\n   */\nclass WrappedRange {\n  constructor(sc, so, ec, eo) {\n    this.sc = sc;\n    this.so = so;\n    this.ec = ec;\n    this.eo = eo;\n\n    // isOnEditable: judge whether range is on editable or not\n    this.isOnEditable = this.makeIsOn(dom.isEditable);\n    // isOnList: judge whether range is on list node or not\n    this.isOnList = this.makeIsOn(dom.isList);\n    // isOnAnchor: judge whether range is on anchor node or not\n    this.isOnAnchor = this.makeIsOn(dom.isAnchor);\n    // isOnCell: judge whether range is on cell node or not\n    this.isOnCell = this.makeIsOn(dom.isCell);\n    // isOnData: judge whether range is on data node or not\n    this.isOnData = this.makeIsOn(dom.isData);\n  }\n\n  // nativeRange: get nativeRange from sc, so, ec, eo\n  nativeRange() {\n    if (env.isW3CRangeSupport) {\n      const w3cRange = document.createRange();\n      w3cRange.setStart(this.sc, this.so);\n      w3cRange.setEnd(this.ec, this.eo);\n\n      return w3cRange;\n    } else {\n      const textRange = pointToTextRange({\n        node: this.sc,\n        offset: this.so,\n      });\n\n      textRange.setEndPoint('EndToEnd', pointToTextRange({\n        node: this.ec,\n        offset: this.eo,\n      }));\n\n      return textRange;\n    }\n  }\n\n  getPoints() {\n    return {\n      sc: this.sc,\n      so: this.so,\n      ec: this.ec,\n      eo: this.eo,\n    };\n  }\n\n  getStartPoint() {\n    return {\n      node: this.sc,\n      offset: this.so,\n    };\n  }\n\n  getEndPoint() {\n    return {\n      node: this.ec,\n      offset: this.eo,\n    };\n  }\n\n  /**\n   * select update visible range\n   */\n  select() {\n    const nativeRng = this.nativeRange();\n    if (env.isW3CRangeSupport) {\n      const selection = document.getSelection();\n      if (selection.rangeCount > 0) {\n        selection.removeAllRanges();\n      }\n      selection.addRange(nativeRng);\n    } else {\n      nativeRng.select();\n    }\n\n    return this;\n  }\n\n  /**\n   * Moves the scrollbar to start container(sc) of current range\n   *\n   * @return {WrappedRange}\n   */\n  scrollIntoView(container) {\n    const height = $(container).height();\n    if (container.scrollTop + height < this.sc.offsetTop) {\n      container.scrollTop += Math.abs(container.scrollTop + height - this.sc.offsetTop);\n    }\n\n    return this;\n  }\n\n  /**\n   * @return {WrappedRange}\n   */\n  normalize() {\n    /**\n     * @param {BoundaryPoint} point\n     * @param {Boolean} isLeftToRight - true: prefer to choose right node\n     *                                - false: prefer to choose left node\n     * @return {BoundaryPoint}\n     */\n    const getVisiblePoint = function(point, isLeftToRight) {\n      if (!point) {\n        return point;\n      }\n\n      // Just use the given point [XXX:Adhoc]\n      //  - case 01. if the point is on the middle of the node\n      //  - case 02. if the point is on the right edge and prefer to choose left node\n      //  - case 03. if the point is on the left edge and prefer to choose right node\n      //  - case 04. if the point is on the right edge and prefer to choose right node but the node is void\n      //  - case 05. if the point is on the left edge and prefer to choose left node but the node is void\n      //  - case 06. if the point is on the block node and there is no children\n      if (dom.isVisiblePoint(point)) {\n        if (!dom.isEdgePoint(point) ||\n            (dom.isRightEdgePoint(point) && !isLeftToRight) ||\n            (dom.isLeftEdgePoint(point) && isLeftToRight) ||\n            (dom.isRightEdgePoint(point) && isLeftToRight && dom.isVoid(point.node.nextSibling)) ||\n            (dom.isLeftEdgePoint(point) && !isLeftToRight && dom.isVoid(point.node.previousSibling)) ||\n            (dom.isBlock(point.node) && dom.isEmpty(point.node))) {\n          return point;\n        }\n      }\n\n      // point on block's edge\n      const block = dom.ancestor(point.node, dom.isBlock);\n      let hasRightNode = false;\n\n      if (!hasRightNode) {\n        const prevPoint = dom.prevPoint(point) || { node: null };\n        hasRightNode = (dom.isLeftEdgePointOf(point, block) || dom.isVoid(prevPoint.node)) && !isLeftToRight;\n      }\n\n      let hasLeftNode = false;\n      if (!hasLeftNode) {\n        const nextPoint = dom.nextPoint(point) || { node: null };\n        hasLeftNode = (dom.isRightEdgePointOf(point, block) || dom.isVoid(nextPoint.node)) && isLeftToRight;\n      }\n\n      if (hasRightNode || hasLeftNode) {\n        // returns point already on visible point\n        if (dom.isVisiblePoint(point)) {\n          return point;\n        }\n        // reverse direction\n        isLeftToRight = !isLeftToRight;\n      }\n\n      const nextPoint = isLeftToRight ? dom.nextPointUntil(dom.nextPoint(point), dom.isVisiblePoint)\n        : dom.prevPointUntil(dom.prevPoint(point), dom.isVisiblePoint);\n      return nextPoint || point;\n    };\n\n    const endPoint = getVisiblePoint(this.getEndPoint(), false);\n    const startPoint = this.isCollapsed() ? endPoint : getVisiblePoint(this.getStartPoint(), true);\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns matched nodes on range\n   *\n   * @param {Function} [pred] - predicate function\n   * @param {Object} [options]\n   * @param {Boolean} [options.includeAncestor]\n   * @param {Boolean} [options.fullyContains]\n   * @return {Node[]}\n   */\n  nodes(pred, options) {\n    pred = pred || func.ok;\n\n    const includeAncestor = options && options.includeAncestor;\n    const fullyContains = options && options.fullyContains;\n\n    // TODO compare points and sort\n    const startPoint = this.getStartPoint();\n    const endPoint = this.getEndPoint();\n\n    const nodes = [];\n    const leftEdgeNodes = [];\n\n    dom.walkPoint(startPoint, endPoint, function(point) {\n      if (dom.isEditable(point.node)) {\n        return;\n      }\n\n      let node;\n      if (fullyContains) {\n        if (dom.isLeftEdgePoint(point)) {\n          leftEdgeNodes.push(point.node);\n        }\n        if (dom.isRightEdgePoint(point) && lists.contains(leftEdgeNodes, point.node)) {\n          node = point.node;\n        }\n      } else if (includeAncestor) {\n        node = dom.ancestor(point.node, pred);\n      } else {\n        node = point.node;\n      }\n\n      if (node && pred(node)) {\n        nodes.push(node);\n      }\n    }, true);\n\n    return lists.unique(nodes);\n  }\n\n  /**\n   * returns commonAncestor of range\n   * @return {Element} - commonAncestor\n   */\n  commonAncestor() {\n    return dom.commonAncestor(this.sc, this.ec);\n  }\n\n  /**\n   * returns expanded range by pred\n   *\n   * @param {Function} pred - predicate function\n   * @return {WrappedRange}\n   */\n  expand(pred) {\n    const startAncestor = dom.ancestor(this.sc, pred);\n    const endAncestor = dom.ancestor(this.ec, pred);\n\n    if (!startAncestor && !endAncestor) {\n      return new WrappedRange(this.sc, this.so, this.ec, this.eo);\n    }\n\n    const boundaryPoints = this.getPoints();\n\n    if (startAncestor) {\n      boundaryPoints.sc = startAncestor;\n      boundaryPoints.so = 0;\n    }\n\n    if (endAncestor) {\n      boundaryPoints.ec = endAncestor;\n      boundaryPoints.eo = dom.nodeLength(endAncestor);\n    }\n\n    return new WrappedRange(\n      boundaryPoints.sc,\n      boundaryPoints.so,\n      boundaryPoints.ec,\n      boundaryPoints.eo\n    );\n  }\n\n  /**\n   * @param {Boolean} isCollapseToStart\n   * @return {WrappedRange}\n   */\n  collapse(isCollapseToStart) {\n    if (isCollapseToStart) {\n      return new WrappedRange(this.sc, this.so, this.sc, this.so);\n    } else {\n      return new WrappedRange(this.ec, this.eo, this.ec, this.eo);\n    }\n  }\n\n  /**\n   * splitText on range\n   */\n  splitText() {\n    const isSameContainer = this.sc === this.ec;\n    const boundaryPoints = this.getPoints();\n\n    if (dom.isText(this.ec) && !dom.isEdgePoint(this.getEndPoint())) {\n      this.ec.splitText(this.eo);\n    }\n\n    if (dom.isText(this.sc) && !dom.isEdgePoint(this.getStartPoint())) {\n      boundaryPoints.sc = this.sc.splitText(this.so);\n      boundaryPoints.so = 0;\n\n      if (isSameContainer) {\n        boundaryPoints.ec = boundaryPoints.sc;\n        boundaryPoints.eo = this.eo - this.so;\n      }\n    }\n\n    return new WrappedRange(\n      boundaryPoints.sc,\n      boundaryPoints.so,\n      boundaryPoints.ec,\n      boundaryPoints.eo\n    );\n  }\n\n  /**\n   * delete contents on range\n   * @return {WrappedRange}\n   */\n  deleteContents() {\n    if (this.isCollapsed()) {\n      return this;\n    }\n\n    const rng = this.splitText();\n    const nodes = rng.nodes(null, {\n      fullyContains: true,\n    });\n\n    // find new cursor point\n    const point = dom.prevPointUntil(rng.getStartPoint(), function(point) {\n      return !lists.contains(nodes, point.node);\n    });\n\n    const emptyParents = [];\n    $.each(nodes, function(idx, node) {\n      // find empty parents\n      const parent = node.parentNode;\n      if (point.node !== parent && dom.nodeLength(parent) === 1) {\n        emptyParents.push(parent);\n      }\n      dom.remove(node, false);\n    });\n\n    // remove empty parents\n    $.each(emptyParents, function(idx, node) {\n      dom.remove(node, false);\n    });\n\n    return new WrappedRange(\n      point.node,\n      point.offset,\n      point.node,\n      point.offset\n    ).normalize();\n  }\n\n  /**\n   * makeIsOn: return isOn(pred) function\n   */\n  makeIsOn(pred) {\n    return function() {\n      const ancestor = dom.ancestor(this.sc, pred);\n      return !!ancestor && (ancestor === dom.ancestor(this.ec, pred));\n    };\n  }\n\n  /**\n   * @param {Function} pred\n   * @return {Boolean}\n   */\n  isLeftEdgeOf(pred) {\n    if (!dom.isLeftEdgePoint(this.getStartPoint())) {\n      return false;\n    }\n\n    const node = dom.ancestor(this.sc, pred);\n    return node && dom.isLeftEdgeOf(this.sc, node);\n  }\n\n  /**\n   * returns whether range was collapsed or not\n   */\n  isCollapsed() {\n    return this.sc === this.ec && this.so === this.eo;\n  }\n\n  /**\n   * wrap inline nodes which children of body with paragraph\n   *\n   * @return {WrappedRange}\n   */\n  wrapBodyInlineWithPara() {\n    if (dom.isBodyContainer(this.sc) && dom.isEmpty(this.sc)) {\n      this.sc.innerHTML = dom.emptyPara;\n      return new WrappedRange(this.sc.firstChild, 0, this.sc.firstChild, 0);\n    }\n\n    /**\n     * [workaround] firefox often create range on not visible point. so normalize here.\n     *  - firefox: |<p>text</p>|\n     *  - chrome: <p>|text|</p>\n     */\n    const rng = this.normalize();\n    if (dom.isParaInline(this.sc) || dom.isPara(this.sc)) {\n      return rng;\n    }\n\n    // find inline top ancestor\n    let topAncestor;\n    if (dom.isInline(rng.sc)) {\n      const ancestors = dom.listAncestor(rng.sc, func.not(dom.isInline));\n      topAncestor = lists.last(ancestors);\n      if (!dom.isInline(topAncestor)) {\n        topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];\n      }\n    } else {\n      topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];\n    }\n\n    if (topAncestor) {\n      // siblings not in paragraph\n      let inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\n      inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline));\n\n      // wrap with paragraph\n      if (inlineSiblings.length) {\n        const para = dom.wrap(lists.head(inlineSiblings), 'p');\n        dom.appendChildNodes(para, lists.tail(inlineSiblings));\n      }\n    }\n\n    return this.normalize();\n  }\n\n  /**\n   * insert node at current cursor\n   *\n   * @param {Node} node\n   * @return {Node}\n   */\n  insertNode(node) {\n    let rng = this;\n\n    if (dom.isText(node) || dom.isInline(node)) {\n      rng = this.wrapBodyInlineWithPara().deleteContents();\n    }\n\n    const info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\n    if (info.rightNode) {\n      info.rightNode.parentNode.insertBefore(node, info.rightNode);\n      if (dom.isEmpty(info.rightNode) && dom.isPara(node)) {\n        info.rightNode.parentNode.removeChild(info.rightNode);\n      }\n    } else {\n      info.container.appendChild(node);\n    }\n\n    return node;\n  }\n\n  /**\n   * insert html at current cursor\n   */\n  pasteHTML(markup) {\n    markup = $.trim(markup);\n\n    const contentsContainer = $('<div></div>').html(markup)[0];\n    let childNodes = lists.from(contentsContainer.childNodes);\n\n    // const rng = this.wrapBodyInlineWithPara().deleteContents();\n    const rng = this;\n    let reversed = false;\n\n    if (rng.so >= 0) {\n      childNodes = childNodes.reverse();\n      reversed = true;\n    }\n\n    childNodes = childNodes.map(function(childNode) {\n      return rng.insertNode(childNode);\n    });\n\n    if (reversed) {\n      childNodes = childNodes.reverse();\n    }\n    return childNodes;\n  }\n\n  /**\n   * returns text in range\n   *\n   * @return {String}\n   */\n  toString() {\n    const nativeRng = this.nativeRange();\n    return env.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\n  }\n\n  /**\n   * returns range for word before cursor\n   *\n   * @param {Boolean} [findAfter] - find after cursor, default: false\n   * @return {WrappedRange}\n   */\n  getWordRange(findAfter) {\n    let endPoint = this.getEndPoint();\n\n    if (!dom.isCharPoint(endPoint)) {\n      return this;\n    }\n\n    const startPoint = dom.prevPointUntil(endPoint, function(point) {\n      return !dom.isCharPoint(point);\n    });\n\n    if (findAfter) {\n      endPoint = dom.nextPointUntil(endPoint, function(point) {\n        return !dom.isCharPoint(point);\n      });\n    }\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns range for words before cursor\n   *\n   * @param {Boolean} [findAfter] - find after cursor, default: false\n   * @return {WrappedRange}\n   */\n  getWordsRange(findAfter) {\n    var endPoint = this.getEndPoint();\n\n    var isNotTextPoint = function(point) {\n      return !dom.isCharPoint(point) && !dom.isSpacePoint(point);\n    };\n\n    if (isNotTextPoint(endPoint)) {\n      return this;\n    }\n\n    var startPoint = dom.prevPointUntil(endPoint, isNotTextPoint);\n\n    if (findAfter) {\n      endPoint = dom.nextPointUntil(endPoint, isNotTextPoint);\n    }\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns range for words before cursor that match with a Regex\n   *\n   * example:\n   *  range: 'hi @Peter Pan'\n   *  regex: '/@[a-z ]+/i'\n   *  return range: '@Peter Pan'\n   *\n   * @param {RegExp} [regex]\n   * @return {WrappedRange|null}\n   */\n  getWordsMatchRange(regex) {\n    var endPoint = this.getEndPoint();\n\n    var startPoint = dom.prevPointUntil(endPoint, function(point) {\n      if (!dom.isCharPoint(point) && !dom.isSpacePoint(point)) {\n        return true;\n      }\n      var rng = new WrappedRange(\n        point.node,\n        point.offset,\n        endPoint.node,\n        endPoint.offset\n      );\n      var result = regex.exec(rng.toString());\n      return result && result.index === 0;\n    });\n\n    var rng = new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n\n    var text = rng.toString();\n    var result = regex.exec(text);\n\n    if (result && result[0].length === text.length) {\n      return rng;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * create offsetPath bookmark\n   *\n   * @param {Node} editable\n   */\n  bookmark(editable) {\n    return {\n      s: {\n        path: dom.makeOffsetPath(editable, this.sc),\n        offset: this.so,\n      },\n      e: {\n        path: dom.makeOffsetPath(editable, this.ec),\n        offset: this.eo,\n      },\n    };\n  }\n\n  /**\n   * create offsetPath bookmark base on paragraph\n   *\n   * @param {Node[]} paras\n   */\n  paraBookmark(paras) {\n    return {\n      s: {\n        path: lists.tail(dom.makeOffsetPath(lists.head(paras), this.sc)),\n        offset: this.so,\n      },\n      e: {\n        path: lists.tail(dom.makeOffsetPath(lists.last(paras), this.ec)),\n        offset: this.eo,\n      },\n    };\n  }\n\n  /**\n   * getClientRects\n   * @return {Rect[]}\n   */\n  getClientRects() {\n    const nativeRng = this.nativeRange();\n    return nativeRng.getClientRects();\n  }\n}\n\n/**\n * Data structure\n *  * BoundaryPoint: a point of dom tree\n *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\n *\n * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\n */\nexport default {\n  /**\n   * create Range Object From arguments or Browser Selection\n   *\n   * @param {Node} sc - start container\n   * @param {Number} so - start offset\n   * @param {Node} ec - end container\n   * @param {Number} eo - end offset\n   * @return {WrappedRange}\n   */\n  create: function(sc, so, ec, eo) {\n    if (arguments.length === 4) {\n      return new WrappedRange(sc, so, ec, eo);\n    } else if (arguments.length === 2) { // collapsed\n      ec = sc;\n      eo = so;\n      return new WrappedRange(sc, so, ec, eo);\n    } else {\n      let wrappedRange = this.createFromSelection();\n\n      if (!wrappedRange && arguments.length === 1) {\n        let bodyElement = arguments[0];\n        if (dom.isEditable(bodyElement)) {\n          bodyElement = bodyElement.lastChild;\n        }\n        return this.createFromBodyElement(bodyElement, dom.emptyPara === arguments[0].innerHTML);\n      }\n      return wrappedRange;\n    }\n  },\n\n  createFromBodyElement: function(bodyElement, isCollapseToStart = false) {\n    var wrappedRange = this.createFromNode(bodyElement);\n    return wrappedRange.collapse(isCollapseToStart);\n  },\n\n  createFromSelection: function() {\n    let sc, so, ec, eo;\n    if (env.isW3CRangeSupport) {\n      const selection = document.getSelection();\n      if (!selection || selection.rangeCount === 0) {\n        return null;\n      } else if (dom.isBody(selection.anchorNode)) {\n        // Firefox: returns entire body as range on initialization.\n        // We won't never need it.\n        return null;\n      }\n\n      const nativeRng = selection.getRangeAt(0);\n      sc = nativeRng.startContainer;\n      so = nativeRng.startOffset;\n      ec = nativeRng.endContainer;\n      eo = nativeRng.endOffset;\n    } else { // IE8: TextRange\n      const textRange = document.selection.createRange();\n      const textRangeEnd = textRange.duplicate();\n      textRangeEnd.collapse(false);\n      const textRangeStart = textRange;\n      textRangeStart.collapse(true);\n\n      let startPoint = textRangeToPoint(textRangeStart, true);\n      let endPoint = textRangeToPoint(textRangeEnd, false);\n\n      // same visible point case: range was collapsed.\n      if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) &&\n        dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) &&\n        endPoint.node.nextSibling === startPoint.node) {\n        startPoint = endPoint;\n      }\n\n      sc = startPoint.cont;\n      so = startPoint.offset;\n      ec = endPoint.cont;\n      eo = endPoint.offset;\n    }\n\n    return new WrappedRange(sc, so, ec, eo);\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from node\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNode: function(node) {\n    let sc = node;\n    let so = 0;\n    let ec = node;\n    let eo = dom.nodeLength(ec);\n\n    // browsers can't target a picture or void node\n    if (dom.isVoid(sc)) {\n      so = dom.listPrev(sc).length - 1;\n      sc = sc.parentNode;\n    }\n    if (dom.isBR(ec)) {\n      eo = dom.listPrev(ec).length - 1;\n      ec = ec.parentNode;\n    } else if (dom.isVoid(ec)) {\n      eo = dom.listPrev(ec).length;\n      ec = ec.parentNode;\n    }\n\n    return this.create(sc, so, ec, eo);\n  },\n\n  /**\n   * create WrappedRange from node after position\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNodeBefore: function(node) {\n    return this.createFromNode(node).collapse(true);\n  },\n\n  /**\n   * create WrappedRange from node after position\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNodeAfter: function(node) {\n    return this.createFromNode(node).collapse();\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from bookmark\n   *\n   * @param {Node} editable\n   * @param {Object} bookmark\n   * @return {WrappedRange}\n   */\n  createFromBookmark: function(editable, bookmark) {\n    const sc = dom.fromOffsetPath(editable, bookmark.s.path);\n    const so = bookmark.s.offset;\n    const ec = dom.fromOffsetPath(editable, bookmark.e.path);\n    const eo = bookmark.e.offset;\n    return new WrappedRange(sc, so, ec, eo);\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from paraBookmark\n   *\n   * @param {Object} bookmark\n   * @param {Node[]} paras\n   * @return {WrappedRange}\n   */\n  createFromParaBookmark: function(bookmark, paras) {\n    const so = bookmark.s.offset;\n    const eo = bookmark.e.offset;\n    const sc = dom.fromOffsetPath(lists.head(paras), bookmark.s.path);\n    const ec = dom.fromOffsetPath(lists.last(paras), bookmark.e.path);\n\n    return new WrappedRange(sc, so, ec, eo);\n  },\n};\n","import lists from './lists';\nimport func from './func';\n\nconst KEY_MAP = {\n  'BACKSPACE': 8,\n  'TAB': 9,\n  'ENTER': 13,\n  'ESCAPE': 27,\n  'SPACE': 32,\n  'DELETE': 46,\n\n  // Arrow\n  'LEFT': 37,\n  'UP': 38,\n  'RIGHT': 39,\n  'DOWN': 40,\n\n  // Number: 0-9\n  'NUM0': 48,\n  'NUM1': 49,\n  'NUM2': 50,\n  'NUM3': 51,\n  'NUM4': 52,\n  'NUM5': 53,\n  'NUM6': 54,\n  'NUM7': 55,\n  'NUM8': 56,\n\n  // Alphabet: a-z\n  'B': 66,\n  'E': 69,\n  'I': 73,\n  'J': 74,\n  'K': 75,\n  'L': 76,\n  'R': 82,\n  'S': 83,\n  'U': 85,\n  'V': 86,\n  'Y': 89,\n  'Z': 90,\n\n  'SLASH': 191,\n  'LEFTBRACKET': 219,\n  'BACKSLASH': 220,\n  'RIGHTBRACKET': 221,\n\n  // Navigation\n  'HOME': 36,\n  'END': 35,\n  'PAGEUP': 33,\n  'PAGEDOWN': 34,\n};\n\n/**\n * @class core.key\n *\n * Object for keycodes.\n *\n * @singleton\n * @alternateClassName key\n */\nexport default {\n  /**\n   * @method isEdit\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isEdit: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.BACKSPACE,\n      KEY_MAP.TAB,\n      KEY_MAP.ENTER,\n      KEY_MAP.SPACE,\n      KEY_MAP.DELETE,\n    ], keyCode);\n  },\n  /**\n   * @method isMove\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isMove: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.LEFT,\n      KEY_MAP.UP,\n      KEY_MAP.RIGHT,\n      KEY_MAP.DOWN,\n    ], keyCode);\n  },\n  /**\n   * @method isNavigation\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isNavigation: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.HOME,\n      KEY_MAP.END,\n      KEY_MAP.PAGEUP,\n      KEY_MAP.PAGEDOWN,\n    ], keyCode);\n  },\n  /**\n   * @property {Object} nameFromCode\n   * @property {String} nameFromCode.8 \"BACKSPACE\"\n   */\n  nameFromCode: func.invertObject(KEY_MAP),\n  code: KEY_MAP,\n};\n","import $ from 'jquery';\n\n/**\n * @method readFileAsDataURL\n *\n * read contents of file as representing URL\n *\n * @param {File} file\n * @return {Promise} - then: dataUrl\n */\nexport function readFileAsDataURL(file) {\n  return $.Deferred((deferred) => {\n    $.extend(new FileReader(), {\n      onload: (e) => {\n        const dataURL = e.target.result;\n        deferred.resolve(dataURL);\n      },\n      onerror: (err) => {\n        deferred.reject(err);\n      },\n    }).readAsDataURL(file);\n  }).promise();\n}\n\n/**\n * @method createImage\n *\n * create `<image>` from url string\n *\n * @param {String} url\n * @return {Promise} - then: $image\n */\nexport function createImage(url) {\n  return $.Deferred((deferred) => {\n    const $img = $('<img>');\n\n    $img.one('load', () => {\n      $img.off('error abort');\n      deferred.resolve($img);\n    }).one('error abort', () => {\n      $img.off('load').detach();\n      deferred.reject($img);\n    }).css({\n      display: 'none',\n    }).appendTo(document.body).attr('src', url);\n  }).promise();\n}\n","import range from '../core/range';\n\nexport default class History {\n  constructor(context) {\n    this.stack = [];\n    this.stackOffset = -1;\n    this.context = context;\n    this.$editable = context.layoutInfo.editable;\n    this.editable = this.$editable[0];\n  }\n\n  makeSnapshot() {\n    const rng = range.create(this.editable);\n    const emptyBookmark = { s: { path: [], offset: 0 }, e: { path: [], offset: 0 } };\n\n    return {\n      contents: this.$editable.html(),\n      bookmark: ((rng && rng.isOnEditable()) ? rng.bookmark(this.editable) : emptyBookmark),\n    };\n  }\n\n  applySnapshot(snapshot) {\n    if (snapshot.contents !== null) {\n      this.$editable.html(snapshot.contents);\n    }\n    if (snapshot.bookmark !== null) {\n      range.createFromBookmark(this.editable, snapshot.bookmark).select();\n    }\n  }\n\n  /**\n  * @method rewind\n  * Rewinds the history stack back to the first snapshot taken.\n  * Leaves the stack intact, so that \"Redo\" can still be used.\n  */\n  rewind() {\n    // Create snap shot if not yet recorded\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n      this.recordUndo();\n    }\n\n    // Return to the first available snapshot.\n    this.stackOffset = 0;\n\n    // Apply that snapshot.\n    this.applySnapshot(this.stack[this.stackOffset]);\n  }\n\n  /**\n  *  @method commit\n  *  Resets history stack, but keeps current editor's content.\n  */\n  commit() {\n    // Clear the stack.\n    this.stack = [];\n\n    // Restore stackOffset to its original value.\n    this.stackOffset = -1;\n\n    // Record our first snapshot (of nothing).\n    this.recordUndo();\n  }\n\n  /**\n  * @method reset\n  * Resets the history stack completely; reverting to an empty editor.\n  */\n  reset() {\n    // Clear the stack.\n    this.stack = [];\n\n    // Restore stackOffset to its original value.\n    this.stackOffset = -1;\n\n    // Clear the editable area.\n    this.$editable.html('');\n\n    // Record our first snapshot (of nothing).\n    this.recordUndo();\n  }\n\n  /**\n   * undo\n   */\n  undo() {\n    // Create snap shot if not yet recorded\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n      this.recordUndo();\n    }\n\n    if (this.stackOffset > 0) {\n      this.stackOffset--;\n      this.applySnapshot(this.stack[this.stackOffset]);\n    }\n  }\n\n  /**\n   * redo\n   */\n  redo() {\n    if (this.stack.length - 1 > this.stackOffset) {\n      this.stackOffset++;\n      this.applySnapshot(this.stack[this.stackOffset]);\n    }\n  }\n\n  /**\n   * recorded undo\n   */\n  recordUndo() {\n    this.stackOffset++;\n\n    // Wash out stack after stackOffset\n    if (this.stack.length > this.stackOffset) {\n      this.stack = this.stack.slice(0, this.stackOffset);\n    }\n\n    // Create new snapshot and push it to the end\n    this.stack.push(this.makeSnapshot());\n\n    // If the stack size reachs to the limit, then slice it\n    if (this.stack.length > this.context.options.historyLimit) {\n      this.stack.shift();\n      this.stackOffset -= 1;\n    }\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class Style {\n  /**\n   * @method jQueryCSS\n   *\n   * [workaround] for old jQuery\n   * passing an array of style properties to .css()\n   * will result in an object of property-value pairs.\n   * (compability with version < 1.9)\n   *\n   * @private\n   * @param  {jQuery} $obj\n   * @param  {Array} propertyNames - An array of one or more CSS properties.\n   * @return {Object}\n   */\n  jQueryCSS($obj, propertyNames) {\n    if (env.jqueryVersion < 1.9) {\n      const result = {};\n      $.each(propertyNames, (idx, propertyName) => {\n        result[propertyName] = $obj.css(propertyName);\n      });\n      return result;\n    }\n    return $obj.css(propertyNames);\n  }\n\n  /**\n   * returns style object from node\n   *\n   * @param {jQuery} $node\n   * @return {Object}\n   */\n  fromNode($node) {\n    const properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\n    const styleInfo = this.jQueryCSS($node, properties) || {};\n\n    const fontSize = $node[0].style.fontSize || styleInfo['font-size'];\n\n    styleInfo['font-size'] = parseInt(fontSize, 10);\n    styleInfo['font-size-unit'] = fontSize.match(/[a-z%]+$/);\n\n    return styleInfo;\n  }\n\n  /**\n   * paragraph level style\n   *\n   * @param {WrappedRange} rng\n   * @param {Object} styleInfo\n   */\n  stylePara(rng, styleInfo) {\n    $.each(rng.nodes(dom.isPara, {\n      includeAncestor: true,\n    }), (idx, para) => {\n      $(para).css(styleInfo);\n    });\n  }\n\n  /**\n   * insert and returns styleNodes on range.\n   *\n   * @param {WrappedRange} rng\n   * @param {Object} [options] - options for styleNodes\n   * @param {String} [options.nodeName] - default: `SPAN`\n   * @param {Boolean} [options.expandClosestSibling] - default: `false`\n   * @param {Boolean} [options.onlyPartialContains] - default: `false`\n   * @return {Node[]}\n   */\n  styleNodes(rng, options) {\n    rng = rng.splitText();\n\n    const nodeName = (options && options.nodeName) || 'SPAN';\n    const expandClosestSibling = !!(options && options.expandClosestSibling);\n    const onlyPartialContains = !!(options && options.onlyPartialContains);\n\n    if (rng.isCollapsed()) {\n      return [rng.insertNode(dom.create(nodeName))];\n    }\n\n    let pred = dom.makePredByNodeName(nodeName);\n    const nodes = rng.nodes(dom.isText, {\n      fullyContains: true,\n    }).map((text) => {\n      return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\n    });\n\n    if (expandClosestSibling) {\n      if (onlyPartialContains) {\n        const nodesInRange = rng.nodes();\n        // compose with partial contains predication\n        pred = func.and(pred, (node) => {\n          return lists.contains(nodesInRange, node);\n        });\n      }\n\n      return nodes.map((node) => {\n        const siblings = dom.withClosestSiblings(node, pred);\n        const head = lists.head(siblings);\n        const tails = lists.tail(siblings);\n        $.each(tails, (idx, elem) => {\n          dom.appendChildNodes(head, elem.childNodes);\n          dom.remove(elem);\n        });\n        return lists.head(siblings);\n      });\n    } else {\n      return nodes;\n    }\n  }\n\n  /**\n   * get current style on cursor\n   *\n   * @param {WrappedRange} rng\n   * @return {Object} - object contains style properties.\n   */\n  current(rng) {\n    const $cont = $(!dom.isElement(rng.sc) ? rng.sc.parentNode : rng.sc);\n    let styleInfo = this.fromNode($cont);\n\n    // document.queryCommandState for toggle state\n    // [workaround] prevent Firefox nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"\n    try {\n      styleInfo = $.extend(styleInfo, {\n        'font-bold': document.queryCommandState('bold') ? 'bold' : 'normal',\n        'font-italic': document.queryCommandState('italic') ? 'italic' : 'normal',\n        'font-underline': document.queryCommandState('underline') ? 'underline' : 'normal',\n        'font-subscript': document.queryCommandState('subscript') ? 'subscript' : 'normal',\n        'font-superscript': document.queryCommandState('superscript') ? 'superscript' : 'normal',\n        'font-strikethrough': document.queryCommandState('strikethrough') ? 'strikethrough' : 'normal',\n        'font-family': document.queryCommandValue('fontname') || styleInfo['font-family'],\n      });\n    } catch (e) {\n      // eslint-disable-next-line\n    }\n\n    // list-style-type to list-style(unordered, ordered)\n    if (!rng.isOnList()) {\n      styleInfo['list-style'] = 'none';\n    } else {\n      const orderedTypes = ['circle', 'disc', 'disc-leading-zero', 'square'];\n      const isUnordered = orderedTypes.indexOf(styleInfo['list-style-type']) > -1;\n      styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\n    }\n\n    const para = dom.ancestor(rng.sc, dom.isPara);\n    if (para && para.style['line-height']) {\n      styleInfo['line-height'] = para.style.lineHeight;\n    } else {\n      const lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\n      styleInfo['line-height'] = lineHeight.toFixed(1);\n    }\n\n    styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\n    styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\n    styleInfo.range = rng;\n\n    return styleInfo;\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport func from '../core/func';\nimport dom from '../core/dom';\nimport range from '../core/range';\n\nexport default class Bullet {\n  /**\n   * toggle ordered list\n   */\n  insertOrderedList(editable) {\n    this.toggleList('OL', editable);\n  }\n\n  /**\n   * toggle unordered list\n   */\n  insertUnorderedList(editable) {\n    this.toggleList('UL', editable);\n  }\n\n  /**\n   * indent\n   */\n  indent(editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    const paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      if (dom.isLi(head)) {\n        const previousList = this.findList(head.previousSibling);\n        if (previousList) {\n          paras\n            .map(para => previousList.appendChild(para));\n        } else {\n          this.wrapList(paras, head.parentNode.nodeName);\n          paras\n            .map((para) => para.parentNode)\n            .map((para) => this.appendToPrevious(para));\n        }\n      } else {\n        $.each(paras, (idx, para) => {\n          $(para).css('marginLeft', (idx, val) => {\n            return (parseInt(val, 10) || 0) + 25;\n          });\n        });\n      }\n    });\n\n    rng.select();\n  }\n\n  /**\n   * outdent\n   */\n  outdent(editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    const paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      if (dom.isLi(head)) {\n        this.releaseList([paras]);\n      } else {\n        $.each(paras, (idx, para) => {\n          $(para).css('marginLeft', (idx, val) => {\n            val = (parseInt(val, 10) || 0);\n            return val > 25 ? val - 25 : '';\n          });\n        });\n      }\n    });\n\n    rng.select();\n  }\n\n  /**\n   * toggle list\n   *\n   * @param {String} listName - OL or UL\n   */\n  toggleList(listName, editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    let paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const bookmark = rng.paraBookmark(paras);\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    // paragraph to list\n    if (lists.find(paras, dom.isPurePara)) {\n      let wrappedParas = [];\n      $.each(clustereds, (idx, paras) => {\n        wrappedParas = wrappedParas.concat(this.wrapList(paras, listName));\n      });\n      paras = wrappedParas;\n    // list to paragraph or change list style\n    } else {\n      const diffLists = rng.nodes(dom.isList, {\n        includeAncestor: true,\n      }).filter((listNode) => {\n        return !$.nodeName(listNode, listName);\n      });\n\n      if (diffLists.length) {\n        $.each(diffLists, (idx, listNode) => {\n          dom.replace(listNode, listName);\n        });\n      } else {\n        paras = this.releaseList(clustereds, true);\n      }\n    }\n\n    range.createFromParaBookmark(bookmark, paras).select();\n  }\n\n  /**\n   * @param {Node[]} paras\n   * @param {String} listName\n   * @return {Node[]}\n   */\n  wrapList(paras, listName) {\n    const head = lists.head(paras);\n    const last = lists.last(paras);\n\n    const prevList = dom.isList(head.previousSibling) && head.previousSibling;\n    const nextList = dom.isList(last.nextSibling) && last.nextSibling;\n\n    const listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last);\n\n    // P to LI\n    paras = paras.map((para) => {\n      return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\n    });\n\n    // append to list(<ul>, <ol>)\n    dom.appendChildNodes(listNode, paras);\n\n    if (nextList) {\n      dom.appendChildNodes(listNode, lists.from(nextList.childNodes));\n      dom.remove(nextList);\n    }\n\n    return paras;\n  }\n\n  /**\n   * @method releaseList\n   *\n   * @param {Array[]} clustereds\n   * @param {Boolean} isEscapseToBody\n   * @return {Node[]}\n   */\n  releaseList(clustereds, isEscapseToBody) {\n    let releasedParas = [];\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      const last = lists.last(paras);\n\n      const headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) : head.parentNode;\n      const parentItem = headList.parentNode;\n\n      if (headList.parentNode.nodeName === 'LI') {\n        paras.map(para => {\n          const newList = this.findNextSiblings(para);\n\n          if (parentItem.nextSibling) {\n            parentItem.parentNode.insertBefore(\n              para,\n              parentItem.nextSibling\n            );\n          } else {\n            parentItem.parentNode.appendChild(para);\n          }\n\n          if (newList.length) {\n            this.wrapList(newList, headList.nodeName);\n            para.appendChild(newList[0].parentNode);\n          }\n        });\n\n        if (headList.children.length === 0) {\n          parentItem.removeChild(headList);\n        }\n\n        if (parentItem.childNodes.length === 0) {\n          parentItem.parentNode.removeChild(parentItem);\n        }\n      } else {\n        const lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {\n          node: last.parentNode,\n          offset: dom.position(last) + 1,\n        }, {\n          isSkipPaddingBlankHTML: true,\n        }) : null;\n\n        const middleList = dom.splitTree(headList, {\n          node: head.parentNode,\n          offset: dom.position(head),\n        }, {\n          isSkipPaddingBlankHTML: true,\n        });\n\n        paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi)\n          : lists.from(middleList.childNodes).filter(dom.isLi);\n\n        // LI to P\n        if (isEscapseToBody || !dom.isList(headList.parentNode)) {\n          paras = paras.map((para) => {\n            return dom.replace(para, 'P');\n          });\n        }\n\n        $.each(lists.from(paras).reverse(), (idx, para) => {\n          dom.insertAfter(para, headList);\n        });\n\n        // remove empty lists\n        const rootLists = lists.compact([headList, middleList, lastList]);\n        $.each(rootLists, (idx, rootList) => {\n          const listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\n          $.each(listNodes.reverse(), (idx, listNode) => {\n            if (!dom.nodeLength(listNode)) {\n              dom.remove(listNode, true);\n            }\n          });\n        });\n      }\n\n      releasedParas = releasedParas.concat(paras);\n    });\n\n    return releasedParas;\n  }\n\n  /**\n   * @method appendToPrevious\n   *\n   * Appends list to previous list item, if\n   * none exist it wraps the list in a new list item.\n   *\n   * @param {HTMLNode} ListItem\n   * @return {HTMLNode}\n   */\n  appendToPrevious(node) {\n    return node.previousSibling\n      ? dom.appendChildNodes(node.previousSibling, [node])\n      : this.wrapList([node], 'LI');\n  }\n\n  /**\n   * @method findList\n   *\n   * Finds an existing list in list item\n   *\n   * @param {HTMLNode} ListItem\n   * @return {Array[]}\n   */\n  findList(node) {\n    return node\n      ? lists.find(node.children, child => ['OL', 'UL'].indexOf(child.nodeName) > -1)\n      : null;\n  }\n\n  /**\n   * @method findNextSiblings\n   *\n   * Finds all list item siblings that follow it\n   *\n   * @param {HTMLNode} ListItem\n   * @return {HTMLNode}\n   */\n  findNextSiblings(node) {\n    const siblings = [];\n    while (node.nextSibling) {\n      siblings.push(node.nextSibling);\n      node = node.nextSibling;\n    }\n    return siblings;\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport Bullet from '../editing/Bullet';\n\n/**\n * @class editing.Typing\n *\n * Typing\n *\n */\nexport default class Typing {\n  constructor(context) {\n    // a Bullet instance to toggle lists off\n    this.bullet = new Bullet();\n    this.options = context.options;\n  }\n\n  /**\n   * insert tab\n   *\n   * @param {WrappedRange} rng\n   * @param {Number} tabsize\n   */\n  insertTab(rng, tabsize) {\n    const tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\n    rng = rng.deleteContents();\n    rng.insertNode(tab, true);\n\n    rng = range.create(tab, tabsize);\n    rng.select();\n  }\n\n  /**\n   * insert paragraph\n   *\n   * @param {jQuery} $editable\n   * @param {WrappedRange} rng Can be used in unit tests to \"mock\" the range\n   *\n   * blockquoteBreakingLevel\n   *   0 - No break, the new paragraph remains inside the quote\n   *   1 - Break the first blockquote in the ancestors list\n   *   2 - Break all blockquotes, so that the new paragraph is not quoted (this is the default)\n   */\n  insertParagraph(editable, rng) {\n    rng = rng || range.create(editable);\n\n    // deleteContents on range.\n    rng = rng.deleteContents();\n\n    // Wrap range if it needs to be wrapped by paragraph\n    rng = rng.wrapBodyInlineWithPara();\n\n    // finding paragraph\n    const splitRoot = dom.ancestor(rng.sc, dom.isPara);\n\n    let nextPara;\n    // on paragraph: split paragraph\n    if (splitRoot) {\n      // if it is an empty line with li\n      if (dom.isLi(splitRoot) && (dom.isEmpty(splitRoot) || dom.deepestChildIsEmpty(splitRoot))) {\n        // toggle UL/OL and escape\n        this.bullet.toggleList(splitRoot.parentNode.nodeName);\n        return;\n      } else {\n        let blockquote = null;\n        if (this.options.blockquoteBreakingLevel === 1) {\n          blockquote = dom.ancestor(splitRoot, dom.isBlockquote);\n        } else if (this.options.blockquoteBreakingLevel === 2) {\n          blockquote = dom.lastAncestor(splitRoot, dom.isBlockquote);\n        }\n\n        if (blockquote) {\n          // We're inside a blockquote and options ask us to break it\n          nextPara = $(dom.emptyPara)[0];\n          // If the split is right before a <br>, remove it so that there's no \"empty line\"\n          // after the split in the new blockquote created\n          if (dom.isRightEdgePoint(rng.getStartPoint()) && dom.isBR(rng.sc.nextSibling)) {\n            $(rng.sc.nextSibling).remove();\n          }\n          const split = dom.splitTree(blockquote, rng.getStartPoint(), { isDiscardEmptySplits: true });\n          if (split) {\n            split.parentNode.insertBefore(nextPara, split);\n          } else {\n            dom.insertAfter(nextPara, blockquote); // There's no split if we were at the end of the blockquote\n          }\n        } else {\n          nextPara = dom.splitTree(splitRoot, rng.getStartPoint());\n\n          // not a blockquote, just insert the paragraph\n          let emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\n          emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\n\n          $.each(emptyAnchors, (idx, anchor) => {\n            dom.remove(anchor);\n          });\n\n          // replace empty heading, pre or custom-made styleTag with P tag\n          if ((dom.isHeading(nextPara) || dom.isPre(nextPara) || dom.isCustomStyleTag(nextPara)) && dom.isEmpty(nextPara)) {\n            nextPara = dom.replace(nextPara, 'p');\n          }\n        }\n      }\n    // no paragraph: insert empty paragraph\n    } else {\n      const next = rng.sc.childNodes[rng.so];\n      nextPara = $(dom.emptyPara)[0];\n      if (next) {\n        rng.sc.insertBefore(nextPara, next);\n      } else {\n        rng.sc.appendChild(nextPara);\n      }\n    }\n\n    range.create(nextPara, 0).normalize().select().scrollIntoView(editable);\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport lists from '../core/lists';\n\n/**\n * @class Create a virtual table to create what actions to do in change.\n * @param {object} startPoint Cell selected to apply change.\n * @param {enum} where  Where change will be applied Row or Col. Use enum: TableResultAction.where\n * @param {enum} action Action to be applied. Use enum: TableResultAction.requestAction\n * @param {object} domTable Dom element of table to make changes.\n */\nconst TableResultAction = function(startPoint, where, action, domTable) {\n  const _startPoint = { 'colPos': 0, 'rowPos': 0 };\n  const _virtualTable = [];\n  const _actionCellList = [];\n\n  /// ///////////////////////////////////////////\n  // Private functions\n  /// ///////////////////////////////////////////\n\n  /**\n   * Set the startPoint of action.\n   */\n  function setStartPoint() {\n    if (!startPoint || !startPoint.tagName || (startPoint.tagName.toLowerCase() !== 'td' && startPoint.tagName.toLowerCase() !== 'th')) {\n      // Impossible to identify start Cell point\n      return;\n    }\n    _startPoint.colPos = startPoint.cellIndex;\n    if (!startPoint.parentElement || !startPoint.parentElement.tagName || startPoint.parentElement.tagName.toLowerCase() !== 'tr') {\n      // Impossible to identify start Row point\n      return;\n    }\n    _startPoint.rowPos = startPoint.parentElement.rowIndex;\n  }\n\n  /**\n   * Define virtual table position info object.\n   *\n   * @param {int} rowIndex Index position in line of virtual table.\n   * @param {int} cellIndex Index position in column of virtual table.\n   * @param {object} baseRow Row affected by this position.\n   * @param {object} baseCell Cell affected by this position.\n   * @param {bool} isSpan Inform if it is an span cell/row.\n   */\n  function setVirtualTablePosition(rowIndex, cellIndex, baseRow, baseCell, isRowSpan, isColSpan, isVirtualCell) {\n    const objPosition = {\n      'baseRow': baseRow,\n      'baseCell': baseCell,\n      'isRowSpan': isRowSpan,\n      'isColSpan': isColSpan,\n      'isVirtual': isVirtualCell,\n    };\n    if (!_virtualTable[rowIndex]) {\n      _virtualTable[rowIndex] = [];\n    }\n    _virtualTable[rowIndex][cellIndex] = objPosition;\n  }\n\n  /**\n   * Create action cell object.\n   *\n   * @param {object} virtualTableCellObj Object of specific position on virtual table.\n   * @param {enum} resultAction Action to be applied in that item.\n   */\n  function getActionCell(virtualTableCellObj, resultAction, virtualRowPosition, virtualColPosition) {\n    return {\n      'baseCell': virtualTableCellObj.baseCell,\n      'action': resultAction,\n      'virtualTable': {\n        'rowIndex': virtualRowPosition,\n        'cellIndex': virtualColPosition,\n      },\n    };\n  }\n\n  /**\n   * Recover free index of row to append Cell.\n   *\n   * @param {int} rowIndex Index of row to find free space.\n   * @param {int} cellIndex Index of cell to find free space in table.\n   */\n  function recoverCellIndex(rowIndex, cellIndex) {\n    if (!_virtualTable[rowIndex]) {\n      return cellIndex;\n    }\n    if (!_virtualTable[rowIndex][cellIndex]) {\n      return cellIndex;\n    }\n\n    let newCellIndex = cellIndex;\n    while (_virtualTable[rowIndex][newCellIndex]) {\n      newCellIndex++;\n      if (!_virtualTable[rowIndex][newCellIndex]) {\n        return newCellIndex;\n      }\n    }\n  }\n\n  /**\n   * Recover info about row and cell and add information to virtual table.\n   *\n   * @param {object} row Row to recover information.\n   * @param {object} cell Cell to recover information.\n   */\n  function addCellInfoToVirtual(row, cell) {\n    const cellIndex = recoverCellIndex(row.rowIndex, cell.cellIndex);\n    const cellHasColspan = (cell.colSpan > 1);\n    const cellHasRowspan = (cell.rowSpan > 1);\n    const isThisSelectedCell = (row.rowIndex === _startPoint.rowPos && cell.cellIndex === _startPoint.colPos);\n    setVirtualTablePosition(row.rowIndex, cellIndex, row, cell, cellHasRowspan, cellHasColspan, false);\n\n    // Add span rows to virtual Table.\n    const rowspanNumber = cell.attributes.rowSpan ? parseInt(cell.attributes.rowSpan.value, 10) : 0;\n    if (rowspanNumber > 1) {\n      for (let rp = 1; rp < rowspanNumber; rp++) {\n        const rowspanIndex = row.rowIndex + rp;\n        adjustStartPoint(rowspanIndex, cellIndex, cell, isThisSelectedCell);\n        setVirtualTablePosition(rowspanIndex, cellIndex, row, cell, true, cellHasColspan, true);\n      }\n    }\n\n    // Add span cols to virtual table.\n    const colspanNumber = cell.attributes.colSpan ? parseInt(cell.attributes.colSpan.value, 10) : 0;\n    if (colspanNumber > 1) {\n      for (let cp = 1; cp < colspanNumber; cp++) {\n        const cellspanIndex = recoverCellIndex(row.rowIndex, (cellIndex + cp));\n        adjustStartPoint(row.rowIndex, cellspanIndex, cell, isThisSelectedCell);\n        setVirtualTablePosition(row.rowIndex, cellspanIndex, row, cell, cellHasRowspan, true, true);\n      }\n    }\n  }\n\n  /**\n   * Process validation and adjust of start point if needed\n   *\n   * @param {int} rowIndex\n   * @param {int} cellIndex\n   * @param {object} cell\n   * @param {bool} isSelectedCell\n   */\n  function adjustStartPoint(rowIndex, cellIndex, cell, isSelectedCell) {\n    if (rowIndex === _startPoint.rowPos && _startPoint.colPos >= cell.cellIndex && cell.cellIndex <= cellIndex && !isSelectedCell) {\n      _startPoint.colPos++;\n    }\n  }\n\n  /**\n   * Create virtual table of cells with all cells, including span cells.\n   */\n  function createVirtualTable() {\n    const rows = domTable.rows;\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      const cells = rows[rowIndex].cells;\n      for (let cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n        addCellInfoToVirtual(rows[rowIndex], cells[cellIndex]);\n      }\n    }\n  }\n\n  /**\n   * Get action to be applied on the cell.\n   *\n   * @param {object} cell virtual table cell to apply action\n   */\n  function getDeleteResultActionToCell(cell) {\n    switch (where) {\n      case TableResultAction.where.Column:\n        if (cell.isColSpan) {\n          return TableResultAction.resultAction.SubtractSpanCount;\n        }\n        break;\n      case TableResultAction.where.Row:\n        if (!cell.isVirtual && cell.isRowSpan) {\n          return TableResultAction.resultAction.AddCell;\n        } else if (cell.isRowSpan) {\n          return TableResultAction.resultAction.SubtractSpanCount;\n        }\n        break;\n    }\n    return TableResultAction.resultAction.RemoveCell;\n  }\n\n  /**\n   * Get action to be applied on the cell.\n   *\n   * @param {object} cell virtual table cell to apply action\n   */\n  function getAddResultActionToCell(cell) {\n    switch (where) {\n      case TableResultAction.where.Column:\n        if (cell.isColSpan) {\n          return TableResultAction.resultAction.SumSpanCount;\n        } else if (cell.isRowSpan && cell.isVirtual) {\n          return TableResultAction.resultAction.Ignore;\n        }\n        break;\n      case TableResultAction.where.Row:\n        if (cell.isRowSpan) {\n          return TableResultAction.resultAction.SumSpanCount;\n        } else if (cell.isColSpan && cell.isVirtual) {\n          return TableResultAction.resultAction.Ignore;\n        }\n        break;\n    }\n    return TableResultAction.resultAction.AddCell;\n  }\n\n  function init() {\n    setStartPoint();\n    createVirtualTable();\n  }\n\n  /// ///////////////////////////////////////////\n  // Public functions\n  /// ///////////////////////////////////////////\n\n  /**\n   * Recover array os what to do in table.\n   */\n  this.getActionList = function() {\n    const fixedRow = (where === TableResultAction.where.Row) ? _startPoint.rowPos : -1;\n    const fixedCol = (where === TableResultAction.where.Column) ? _startPoint.colPos : -1;\n\n    let actualPosition = 0;\n    let canContinue = true;\n    while (canContinue) {\n      const rowPosition = (fixedRow >= 0) ? fixedRow : actualPosition;\n      const colPosition = (fixedCol >= 0) ? fixedCol : actualPosition;\n      const row = _virtualTable[rowPosition];\n      if (!row) {\n        canContinue = false;\n        return _actionCellList;\n      }\n      const cell = row[colPosition];\n      if (!cell) {\n        canContinue = false;\n        return _actionCellList;\n      }\n\n      // Define action to be applied in this cell\n      let resultAction = TableResultAction.resultAction.Ignore;\n      switch (action) {\n        case TableResultAction.requestAction.Add:\n          resultAction = getAddResultActionToCell(cell);\n          break;\n        case TableResultAction.requestAction.Delete:\n          resultAction = getDeleteResultActionToCell(cell);\n          break;\n      }\n      _actionCellList.push(getActionCell(cell, resultAction, rowPosition, colPosition));\n      actualPosition++;\n    }\n\n    return _actionCellList;\n  };\n\n  init();\n};\n/**\n*\n* Where action occours enum.\n*/\nTableResultAction.where = { 'Row': 0, 'Column': 1 };\n/**\n*\n* Requested action to apply enum.\n*/\nTableResultAction.requestAction = { 'Add': 0, 'Delete': 1 };\n/**\n*\n* Result action to be executed enum.\n*/\nTableResultAction.resultAction = { 'Ignore': 0, 'SubtractSpanCount': 1, 'RemoveCell': 2, 'AddCell': 3, 'SumSpanCount': 4 };\n\n/**\n *\n * @class editing.Table\n *\n * Table\n *\n */\nexport default class Table {\n  /**\n   * handle tab key\n   *\n   * @param {WrappedRange} rng\n   * @param {Boolean} isShift\n   */\n  tab(rng, isShift) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const table = dom.ancestor(cell, dom.isTable);\n    const cells = dom.listDescendant(table, dom.isCell);\n\n    const nextCell = lists[isShift ? 'prev' : 'next'](cells, cell);\n    if (nextCell) {\n      range.create(nextCell, 0).select();\n    }\n  }\n\n  /**\n   * Add a new row\n   *\n   * @param {WrappedRange} rng\n   * @param {String} position (top/bottom)\n   * @return {Node}\n   */\n  addRow(rng, position) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n\n    const currentTr = $(cell).closest('tr');\n    const trAttributes = this.recoverAttributes(currentTr);\n    const html = $('<tr' + trAttributes + '></tr>');\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\n      TableResultAction.requestAction.Add, $(currentTr).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let idCell = 0; idCell < actions.length; idCell++) {\n      const currentCell = actions[idCell];\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\n      switch (currentCell.action) {\n        case TableResultAction.resultAction.AddCell:\n          html.append('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          break;\n        case TableResultAction.resultAction.SumSpanCount:\n          {\n            if (position === 'top') {\n              const baseCellTr = currentCell.baseCell.parent;\n              const isTopFromRowSpan = (!baseCellTr ? 0 : currentCell.baseCell.closest('tr').rowIndex) <= currentTr[0].rowIndex;\n              if (isTopFromRowSpan) {\n                const newTd = $('<div></div>').append($('<td' + tdAttributes + '>' + dom.blank + '</td>').removeAttr('rowspan')).html();\n                html.append(newTd);\n                break;\n              }\n            }\n            let rowspanNumber = parseInt(currentCell.baseCell.rowSpan, 10);\n            rowspanNumber++;\n            currentCell.baseCell.setAttribute('rowSpan', rowspanNumber);\n          }\n          break;\n      }\n    }\n\n    if (position === 'top') {\n      currentTr.before(html);\n    } else {\n      const cellHasRowspan = (cell.rowSpan > 1);\n      if (cellHasRowspan) {\n        const lastTrIndex = currentTr[0].rowIndex + (cell.rowSpan - 2);\n        $($(currentTr).parent().find('tr')[lastTrIndex]).after($(html));\n        return;\n      }\n      currentTr.after(html);\n    }\n  }\n\n  /**\n   * Add a new col\n   *\n   * @param {WrappedRange} rng\n   * @param {String} position (left/right)\n   * @return {Node}\n   */\n  addCol(rng, position) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const rowsGroup = $(row).siblings();\n    rowsGroup.push(row);\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\n      TableResultAction.requestAction.Add, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      const currentCell = actions[actionIndex];\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\n      switch (currentCell.action) {\n        case TableResultAction.resultAction.AddCell:\n          if (position === 'right') {\n            $(currentCell.baseCell).after('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          } else {\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          }\n          break;\n        case TableResultAction.resultAction.SumSpanCount:\n          if (position === 'right') {\n            let colspanNumber = parseInt(currentCell.baseCell.colSpan, 10);\n            colspanNumber++;\n            currentCell.baseCell.setAttribute('colSpan', colspanNumber);\n          } else {\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          }\n          break;\n      }\n    }\n  }\n\n  /*\n  * Copy attributes from element.\n  *\n  * @param {object} Element to recover attributes.\n  * @return {string} Copied string elements.\n  */\n  recoverAttributes(el) {\n    let resultStr = '';\n\n    if (!el) {\n      return resultStr;\n    }\n\n    const attrList = el.attributes || [];\n\n    for (let i = 0; i < attrList.length; i++) {\n      if (attrList[i].name.toLowerCase() === 'id') {\n        continue;\n      }\n\n      if (attrList[i].specified) {\n        resultStr += ' ' + attrList[i].name + '=\\'' + attrList[i].value + '\\'';\n      }\n    }\n\n    return resultStr;\n  }\n\n  /**\n   * Delete current row\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteRow(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const cellPos = row.children('td, th').index($(cell));\n    const rowPos = row[0].rowIndex;\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      if (!actions[actionIndex]) {\n        continue;\n      }\n\n      const baseCell = actions[actionIndex].baseCell;\n      const virtualPosition = actions[actionIndex].virtualTable;\n      const hasRowspan = (baseCell.rowSpan && baseCell.rowSpan > 1);\n      let rowspanNumber = (hasRowspan) ? parseInt(baseCell.rowSpan, 10) : 0;\n      switch (actions[actionIndex].action) {\n        case TableResultAction.resultAction.Ignore:\n          continue;\n        case TableResultAction.resultAction.AddCell:\n          {\n            const nextRow = row.next('tr')[0];\n            if (!nextRow) { continue; }\n            const cloneRow = row[0].cells[cellPos];\n            if (hasRowspan) {\n              if (rowspanNumber > 2) {\n                rowspanNumber--;\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                nextRow.cells[cellPos].setAttribute('rowSpan', rowspanNumber);\n                nextRow.cells[cellPos].innerHTML = '';\n              } else if (rowspanNumber === 2) {\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                nextRow.cells[cellPos].removeAttribute('rowSpan');\n                nextRow.cells[cellPos].innerHTML = '';\n              }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.SubtractSpanCount:\n          if (hasRowspan) {\n            if (rowspanNumber > 2) {\n              rowspanNumber--;\n              baseCell.setAttribute('rowSpan', rowspanNumber);\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n            } else if (rowspanNumber === 2) {\n              baseCell.removeAttribute('rowSpan');\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.RemoveCell:\n          // Do not need remove cell because row will be deleted.\n          continue;\n      }\n    }\n    row.remove();\n  }\n\n  /**\n   * Delete current col\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteCol(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const cellPos = row.children('td, th').index($(cell));\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      if (!actions[actionIndex]) {\n        continue;\n      }\n      switch (actions[actionIndex].action) {\n        case TableResultAction.resultAction.Ignore:\n          continue;\n        case TableResultAction.resultAction.SubtractSpanCount:\n          {\n            const baseCell = actions[actionIndex].baseCell;\n            const hasColspan = (baseCell.colSpan && baseCell.colSpan > 1);\n            if (hasColspan) {\n              let colspanNumber = (baseCell.colSpan) ? parseInt(baseCell.colSpan, 10) : 0;\n              if (colspanNumber > 2) {\n                colspanNumber--;\n                baseCell.setAttribute('colSpan', colspanNumber);\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n              } else if (colspanNumber === 2) {\n                baseCell.removeAttribute('colSpan');\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n              }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.RemoveCell:\n          dom.remove(actions[actionIndex].baseCell, true);\n          continue;\n      }\n    }\n  }\n\n  /**\n   * create empty table element\n   *\n   * @param {Number} rowCount\n   * @param {Number} colCount\n   * @return {Node}\n   */\n  createTable(colCount, rowCount, options) {\n    const tds = [];\n    let tdHTML;\n    for (let idxCol = 0; idxCol < colCount; idxCol++) {\n      tds.push('<td>' + dom.blank + '</td>');\n    }\n    tdHTML = tds.join('');\n\n    const trs = [];\n    let trHTML;\n    for (let idxRow = 0; idxRow < rowCount; idxRow++) {\n      trs.push('<tr>' + tdHTML + '</tr>');\n    }\n    trHTML = trs.join('');\n    const $table = $('<table>' + trHTML + '</table>');\n    if (options && options.tableClassName) {\n      $table.addClass(options.tableClassName);\n    }\n\n    return $table[0];\n  }\n\n  /**\n   * Delete current table\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteTable(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    $(cell).closest('table').remove();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport { readFileAsDataURL, createImage } from '../core/async';\nimport History from '../editing/History';\nimport Style from '../editing/Style';\nimport Typing from '../editing/Typing';\nimport Table from '../editing/Table';\nimport Bullet from '../editing/Bullet';\n\nconst KEY_BOGUS = 'bogus';\n\n/**\n * @class Editor\n */\nexport default class Editor {\n  constructor(context) {\n    this.context = context;\n\n    this.$note = context.layoutInfo.note;\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    this.editable = this.$editable[0];\n    this.lastRange = null;\n    this.snapshot = null;\n\n    this.style = new Style();\n    this.table = new Table();\n    this.typing = new Typing(context);\n    this.bullet = new Bullet();\n    this.history = new History(context);\n\n    this.context.memo('help.escape', this.lang.help.escape);\n    this.context.memo('help.undo', this.lang.help.undo);\n    this.context.memo('help.redo', this.lang.help.redo);\n    this.context.memo('help.tab', this.lang.help.tab);\n    this.context.memo('help.untab', this.lang.help.untab);\n    this.context.memo('help.insertParagraph', this.lang.help.insertParagraph);\n    this.context.memo('help.insertOrderedList', this.lang.help.insertOrderedList);\n    this.context.memo('help.insertUnorderedList', this.lang.help.insertUnorderedList);\n    this.context.memo('help.indent', this.lang.help.indent);\n    this.context.memo('help.outdent', this.lang.help.outdent);\n    this.context.memo('help.formatPara', this.lang.help.formatPara);\n    this.context.memo('help.insertHorizontalRule', this.lang.help.insertHorizontalRule);\n    this.context.memo('help.fontName', this.lang.help.fontName);\n\n    // native commands(with execCommand), generate function for execCommand\n    const commands = [\n      'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript',\n      'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\n      'formatBlock', 'removeFormat', 'backColor',\n    ];\n\n    for (let idx = 0, len = commands.length; idx < len; idx++) {\n      this[commands[idx]] = ((sCmd) => {\n        return (value) => {\n          this.beforeCommand();\n          document.execCommand(sCmd, false, value);\n          this.afterCommand(true);\n        };\n      })(commands[idx]);\n      this.context.memo('help.' + commands[idx], this.lang.help[commands[idx]]);\n    }\n\n    this.fontName = this.wrapCommand((value) => {\n      return this.fontStyling('font-family', env.validFontName(value));\n    });\n\n    this.fontSize = this.wrapCommand((value) => {\n      const unit = this.currentStyle()['font-size-unit'];\n      return this.fontStyling('font-size', value + unit);\n    });\n\n    this.fontSizeUnit = this.wrapCommand((value) => {\n      const size = this.currentStyle()['font-size'];\n      return this.fontStyling('font-size', size + value);\n    });\n\n    for (let idx = 1; idx <= 6; idx++) {\n      this['formatH' + idx] = ((idx) => {\n        return () => {\n          this.formatBlock('H' + idx);\n        };\n      })(idx);\n      this.context.memo('help.formatH' + idx, this.lang.help['formatH' + idx]);\n    }\n\n    this.insertParagraph = this.wrapCommand(() => {\n      this.typing.insertParagraph(this.editable);\n    });\n\n    this.insertOrderedList = this.wrapCommand(() => {\n      this.bullet.insertOrderedList(this.editable);\n    });\n\n    this.insertUnorderedList = this.wrapCommand(() => {\n      this.bullet.insertUnorderedList(this.editable);\n    });\n\n    this.indent = this.wrapCommand(() => {\n      this.bullet.indent(this.editable);\n    });\n\n    this.outdent = this.wrapCommand(() => {\n      this.bullet.outdent(this.editable);\n    });\n\n    /**\n     * insertNode\n     * insert node\n     * @param {Node} node\n     */\n    this.insertNode = this.wrapCommand((node) => {\n      if (this.isLimited($(node).text().length)) {\n        return;\n      }\n      const rng = this.getLastRange();\n      rng.insertNode(node);\n      this.setLastRange(range.createFromNodeAfter(node).select());\n    });\n\n    /**\n     * insert text\n     * @param {String} text\n     */\n    this.insertText = this.wrapCommand((text) => {\n      if (this.isLimited(text.length)) {\n        return;\n      }\n      const rng = this.getLastRange();\n      const textNode = rng.insertNode(dom.createText(text));\n      this.setLastRange(range.create(textNode, dom.nodeLength(textNode)).select());\n    });\n\n    /**\n     * paste HTML\n     * @param {String} markup\n     */\n    this.pasteHTML = this.wrapCommand((markup) => {\n      if (this.isLimited(markup.length)) {\n        return;\n      }\n      markup = this.context.invoke('codeview.purify', markup);\n      const contents = this.getLastRange().pasteHTML(markup);\n      this.setLastRange(range.createFromNodeAfter(lists.last(contents)).select());\n    });\n\n    /**\n     * formatBlock\n     *\n     * @param {String} tagName\n     */\n    this.formatBlock = this.wrapCommand((tagName, $target) => {\n      const onApplyCustomStyle = this.options.callbacks.onApplyCustomStyle;\n      if (onApplyCustomStyle) {\n        onApplyCustomStyle.call(this, $target, this.context, this.onFormatBlock);\n      } else {\n        this.onFormatBlock(tagName, $target);\n      }\n    });\n\n    /**\n     * insert horizontal rule\n     */\n    this.insertHorizontalRule = this.wrapCommand(() => {\n      const hrNode = this.getLastRange().insertNode(dom.create('HR'));\n      if (hrNode.nextSibling) {\n        this.setLastRange(range.create(hrNode.nextSibling, 0).normalize().select());\n      }\n    });\n\n    /**\n     * lineHeight\n     * @param {String} value\n     */\n    this.lineHeight = this.wrapCommand((value) => {\n      this.style.stylePara(this.getLastRange(), {\n        lineHeight: value,\n      });\n    });\n\n    /**\n     * create link (command)\n     *\n     * @param {Object} linkInfo\n     */\n    this.createLink = this.wrapCommand((linkInfo) => {\n      let linkUrl = linkInfo.url;\n      const linkText = linkInfo.text;\n      const isNewWindow = linkInfo.isNewWindow;\n      const checkProtocol = linkInfo.checkProtocol;\n      let rng = linkInfo.range || this.getLastRange();\n      const additionalTextLength = linkText.length - rng.toString().length;\n      if (additionalTextLength > 0 && this.isLimited(additionalTextLength)) {\n        return;\n      }\n      const isTextChanged = rng.toString() !== linkText;\n\n      // handle spaced urls from input\n      if (typeof linkUrl === 'string') {\n        linkUrl = linkUrl.trim();\n      }\n\n      if (this.options.onCreateLink) {\n        linkUrl = this.options.onCreateLink(linkUrl);\n      } else if (checkProtocol) {\n        // if url doesn't have any protocol and not even a relative or a label, use http:// as default\n        linkUrl = /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(linkUrl)\n          ? linkUrl : this.options.defaultProtocol + linkUrl;\n      }\n\n      let anchors = [];\n      if (isTextChanged) {\n        rng = rng.deleteContents();\n        const anchor = rng.insertNode($('<A>' + linkText + '</A>')[0]);\n        anchors.push(anchor);\n      } else {\n        anchors = this.style.styleNodes(rng, {\n          nodeName: 'A',\n          expandClosestSibling: true,\n          onlyPartialContains: true,\n        });\n      }\n\n      $.each(anchors, (idx, anchor) => {\n        $(anchor).attr('href', linkUrl);\n        if (isNewWindow) {\n          $(anchor).attr('target', '_blank');\n        } else {\n          $(anchor).removeAttr('target');\n        }\n      });\n\n      this.setLastRange(\n        this.createRangeFromList(anchors).select()\n      );\n    });\n\n    /**\n     * setting color\n     *\n     * @param {Object} sObjColor  color code\n     * @param {String} sObjColor.foreColor foreground color\n     * @param {String} sObjColor.backColor background color\n     */\n    this.color = this.wrapCommand((colorInfo) => {\n      const foreColor = colorInfo.foreColor;\n      const backColor = colorInfo.backColor;\n\n      if (foreColor) { document.execCommand('foreColor', false, foreColor); }\n      if (backColor) { document.execCommand('backColor', false, backColor); }\n    });\n\n    /**\n     * Set foreground color\n     *\n     * @param {String} colorCode foreground color code\n     */\n    this.foreColor = this.wrapCommand((colorInfo) => {\n      document.execCommand('foreColor', false, colorInfo);\n    });\n\n    /**\n     * insert Table\n     *\n     * @param {String} dimension of table (ex : \"5x5\")\n     */\n    this.insertTable = this.wrapCommand((dim) => {\n      const dimension = dim.split('x');\n\n      const rng = this.getLastRange().deleteContents();\n      rng.insertNode(this.table.createTable(dimension[0], dimension[1], this.options));\n    });\n\n    /**\n     * remove media object and Figure Elements if media object is img with Figure.\n     */\n    this.removeMedia = this.wrapCommand(() => {\n      let $target = $(this.restoreTarget()).parent();\n      if ($target.closest('figure').length) {\n        $target.closest('figure').remove();\n      } else {\n        $target = $(this.restoreTarget()).detach();\n      }\n      this.context.triggerEvent('media.delete', $target, this.$editable);\n    });\n\n    /**\n     * float me\n     *\n     * @param {String} value\n     */\n    this.floatMe = this.wrapCommand((value) => {\n      const $target = $(this.restoreTarget());\n      $target.toggleClass('note-float-left', value === 'left');\n      $target.toggleClass('note-float-right', value === 'right');\n      $target.css('float', (value === 'none' ? '' : value));\n    });\n\n    /**\n     * resize overlay element\n     * @param {String} value\n     */\n    this.resize = this.wrapCommand((value) => {\n      const $target = $(this.restoreTarget());\n      value = parseFloat(value);\n      if (value === 0) {\n        $target.css('width', '');\n      } else {\n        $target.css({\n          width: value * 100 + '%',\n          height: '',\n        });\n      }\n    });\n  }\n\n  initialize() {\n    // bind custom events\n    this.$editable.on('keydown', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        this.context.triggerEvent('enter', event);\n      }\n      this.context.triggerEvent('keydown', event);\n\n      // keep a snapshot to limit text on input event\n      this.snapshot = this.history.makeSnapshot();\n      this.hasKeyShortCut = false;\n      if (!event.isDefaultPrevented()) {\n        if (this.options.shortcuts) {\n          this.hasKeyShortCut = this.handleKeyMap(event);\n        } else {\n          this.preventDefaultEditableShortCuts(event);\n        }\n      }\n      if (this.isLimited(1, event)) {\n        const lastRange = this.getLastRange();\n        if (lastRange.eo - lastRange.so === 0) {\n          return false;\n        }\n      }\n      this.setLastRange();\n\n      // record undo in the key event except keyMap.\n      if (this.options.recordEveryKeystroke) {\n        if (this.hasKeyShortCut === false) {\n          this.history.recordUndo();\n        }\n      }\n    }).on('keyup', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('keyup', event);\n    }).on('focus', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('focus', event);\n    }).on('blur', (event) => {\n      this.context.triggerEvent('blur', event);\n    }).on('mousedown', (event) => {\n      this.context.triggerEvent('mousedown', event);\n    }).on('mouseup', (event) => {\n      this.setLastRange();\n      this.history.recordUndo();\n      this.context.triggerEvent('mouseup', event);\n    }).on('scroll', (event) => {\n      this.context.triggerEvent('scroll', event);\n    }).on('paste', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('paste', event);\n    }).on('input', () => {\n      // To limit composition characters (e.g. Korean)\n      if (this.isLimited(0) && this.snapshot) {\n        this.history.applySnapshot(this.snapshot);\n      }\n    });\n\n    this.$editable.attr('spellcheck', this.options.spellCheck);\n\n    this.$editable.attr('autocorrect', this.options.spellCheck);\n\n    if (this.options.disableGrammar) {\n      this.$editable.attr('data-gramm', false);\n    }\n\n    // init content before set event\n    this.$editable.html(dom.html(this.$note) || dom.emptyPara);\n\n    this.$editable.on(env.inputEventName, func.debounce(() => {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }, 10));\n\n    this.$editable.on('focusin', (event) => {\n      this.context.triggerEvent('focusin', event);\n    }).on('focusout', (event) => {\n      this.context.triggerEvent('focusout', event);\n    });\n\n    if (this.options.airMode) {\n      if (this.options.overrideContextMenu) {\n        this.$editor.on('contextmenu', (event) => {\n          this.context.triggerEvent('contextmenu', event);\n          return false;\n        });\n      }\n    } else {\n      if (this.options.width) {\n        this.$editor.outerWidth(this.options.width);\n      }\n      if (this.options.height) {\n        this.$editable.outerHeight(this.options.height);\n      }\n      if (this.options.maxHeight) {\n        this.$editable.css('max-height', this.options.maxHeight);\n      }\n      if (this.options.minHeight) {\n        this.$editable.css('min-height', this.options.minHeight);\n      }\n    }\n\n    this.history.recordUndo();\n    this.setLastRange();\n  }\n\n  destroy() {\n    this.$editable.off();\n  }\n\n  handleKeyMap(event) {\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n    const keys = [];\n\n    if (event.metaKey) { keys.push('CMD'); }\n    if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\n    if (event.shiftKey) { keys.push('SHIFT'); }\n\n    const keyName = key.nameFromCode[event.keyCode];\n    if (keyName) {\n      keys.push(keyName);\n    }\n\n    const eventName = keyMap[keys.join('+')];\n\n    if (keyName === 'TAB' && !this.options.tabDisable) {\n      this.afterCommand();\n    } else if (eventName) {\n      if (this.context.invoke(eventName) !== false) {\n        event.preventDefault();\n        // if keyMap action was invoked\n        return true;\n      }\n    } else if (key.isEdit(event.keyCode)) {\n      this.afterCommand();\n    }\n    return false;\n  }\n\n  preventDefaultEditableShortCuts(event) {\n    // B(Bold, 66) / I(Italic, 73) / U(Underline, 85)\n    if ((event.ctrlKey || event.metaKey) &&\n      lists.contains([66, 73, 85], event.keyCode)) {\n      event.preventDefault();\n    }\n  }\n\n  isLimited(pad, event) {\n    pad = pad || 0;\n\n    if (typeof event !== 'undefined') {\n      if (key.isMove(event.keyCode) ||\n          key.isNavigation(event.keyCode) ||\n          (event.ctrlKey || event.metaKey) ||\n          lists.contains([key.code.BACKSPACE, key.code.DELETE], event.keyCode)) {\n        return false;\n      }\n    }\n\n    if (this.options.maxTextLength > 0) {\n      if ((this.$editable.text().length + pad) > this.options.maxTextLength) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * create range\n   * @return {WrappedRange}\n   */\n  createRange() {\n    this.focus();\n    this.setLastRange();\n    return this.getLastRange();\n  }\n\n  /**\n   * create a new range from the list of elements\n   *\n   * @param {list} dom element list\n   * @return {WrappedRange}\n   */\n  createRangeFromList(lst) {\n    const startRange = range.createFromNodeBefore(lists.head(lst));\n    const startPoint = startRange.getStartPoint();\n    const endRange = range.createFromNodeAfter(lists.last(lst));\n    const endPoint = endRange.getEndPoint();\n\n    return range.create(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * set the last range\n   *\n   * if given rng is exist, set rng as the last range\n   * or create a new range at the end of the document\n   *\n   * @param {WrappedRange} rng\n   */\n  setLastRange(rng) {\n    if (rng) {\n      this.lastRange = rng;\n    } else {\n      this.lastRange = range.create(this.editable);\n\n      if ($(this.lastRange.sc).closest('.note-editable').length === 0) {\n        this.lastRange = range.createFromBodyElement(this.editable);\n      }\n    }\n  }\n\n  /**\n   * get the last range\n   *\n   * if there is a saved last range, return it\n   * or create a new range and return it\n   *\n   * @return {WrappedRange}\n   */\n  getLastRange() {\n    if (!this.lastRange) {\n      this.setLastRange();\n    }\n    return this.lastRange;\n  }\n\n  /**\n   * saveRange\n   *\n   * save current range\n   *\n   * @param {Boolean} [thenCollapse=false]\n   */\n  saveRange(thenCollapse) {\n    if (thenCollapse) {\n      this.getLastRange().collapse().select();\n    }\n  }\n\n  /**\n   * restoreRange\n   *\n   * restore lately range\n   */\n  restoreRange() {\n    if (this.lastRange) {\n      this.lastRange.select();\n      this.focus();\n    }\n  }\n\n  saveTarget(node) {\n    this.$editable.data('target', node);\n  }\n\n  clearTarget() {\n    this.$editable.removeData('target');\n  }\n\n  restoreTarget() {\n    return this.$editable.data('target');\n  }\n\n  /**\n   * currentStyle\n   *\n   * current style\n   * @return {Object|Boolean} unfocus\n   */\n  currentStyle() {\n    let rng = range.create();\n    if (rng) {\n      rng = rng.normalize();\n    }\n    return rng ? this.style.current(rng) : this.style.fromNode(this.$editable);\n  }\n\n  /**\n   * style from node\n   *\n   * @param {jQuery} $node\n   * @return {Object}\n   */\n  styleFromNode($node) {\n    return this.style.fromNode($node);\n  }\n\n  /**\n   * undo\n   */\n  undo() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.undo();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /*\n  * commit\n  */\n  commit() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.commit();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /**\n   * redo\n   */\n  redo() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.redo();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /**\n   * before command\n   */\n  beforeCommand() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n\n    // Set styleWithCSS before run a command\n    document.execCommand('styleWithCSS', false, this.options.styleWithCSS);\n\n    // keep focus on editable before command execution\n    this.focus();\n  }\n\n  /**\n   * after command\n   * @param {Boolean} isPreventTrigger\n   */\n  afterCommand(isPreventTrigger) {\n    this.normalizeContent();\n    this.history.recordUndo();\n    if (!isPreventTrigger) {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n  }\n\n  /**\n   * handle tab key\n   */\n  tab() {\n    const rng = this.getLastRange();\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.table.tab(rng);\n    } else {\n      if (this.options.tabSize === 0) {\n        return false;\n      }\n\n      if (!this.isLimited(this.options.tabSize)) {\n        this.beforeCommand();\n        this.typing.insertTab(rng, this.options.tabSize);\n        this.afterCommand();\n      }\n    }\n  }\n\n  /**\n   * handle shift+tab key\n   */\n  untab() {\n    const rng = this.getLastRange();\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.table.tab(rng, true);\n    } else {\n      if (this.options.tabSize === 0) {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * run given function between beforeCommand and afterCommand\n   */\n  wrapCommand(fn) {\n    return function() {\n      this.beforeCommand();\n      fn.apply(this, arguments);\n      this.afterCommand();\n    };\n  }\n\n  /**\n   * insert image\n   *\n   * @param {String} src\n   * @param {String|Function} param\n   * @return {Promise}\n   */\n  insertImage(src, param) {\n    return createImage(src, param).then(($image) => {\n      this.beforeCommand();\n\n      if (typeof param === 'function') {\n        param($image);\n      } else {\n        if (typeof param === 'string') {\n          $image.attr('data-filename', param);\n        }\n        $image.css('width', Math.min(this.$editable.width(), $image.width()));\n      }\n\n      $image.show();\n      this.getLastRange().insertNode($image[0]);\n      this.setLastRange(range.createFromNodeAfter($image[0]).select());\n      this.afterCommand();\n    }).fail((e) => {\n      this.context.triggerEvent('image.upload.error', e);\n    });\n  }\n\n  /**\n   * insertImages\n   * @param {File[]} files\n   */\n  insertImagesAsDataURL(files) {\n    $.each(files, (idx, file) => {\n      const filename = file.name;\n      if (this.options.maximumImageFileSize && this.options.maximumImageFileSize < file.size) {\n        this.context.triggerEvent('image.upload.error', this.lang.image.maximumFileSizeError);\n      } else {\n        readFileAsDataURL(file).then((dataURL) => {\n          return this.insertImage(dataURL, filename);\n        }).fail(() => {\n          this.context.triggerEvent('image.upload.error');\n        });\n      }\n    });\n  }\n\n  /**\n   * insertImagesOrCallback\n   * @param {File[]} files\n   */\n  insertImagesOrCallback(files) {\n    const callbacks = this.options.callbacks;\n    // If onImageUpload set,\n    if (callbacks.onImageUpload) {\n      this.context.triggerEvent('image.upload', files);\n      // else insert Image as dataURL\n    } else {\n      this.insertImagesAsDataURL(files);\n    }\n  }\n\n  /**\n   * return selected plain text\n   * @return {String} text\n   */\n  getSelectedText() {\n    let rng = this.getLastRange();\n\n    // if range on anchor, expand range with anchor\n    if (rng.isOnAnchor()) {\n      rng = range.createFromNode(dom.ancestor(rng.sc, dom.isAnchor));\n    }\n\n    return rng.toString();\n  }\n\n  onFormatBlock(tagName, $target) {\n    // [workaround] for MSIE, IE need `<`\n    document.execCommand('FormatBlock', false, env.isMSIE ? '<' + tagName + '>' : tagName);\n\n    // support custom class\n    if ($target && $target.length) {\n      // find the exact element has given tagName\n      if ($target[0].tagName.toUpperCase() !== tagName.toUpperCase()) {\n        $target = $target.find(tagName);\n      }\n\n      if ($target && $target.length) {\n        const className = $target[0].className || '';\n        if (className) {\n          const currentRange = this.createRange();\n\n          const $parent = $([currentRange.sc, currentRange.ec]).closest(tagName);\n          $parent.addClass(className);\n        }\n      }\n    }\n  }\n\n  formatPara() {\n    this.formatBlock('P');\n  }\n\n  fontStyling(target, value) {\n    const rng = this.getLastRange();\n\n    if (rng !== '') {\n      const spans = this.style.styleNodes(rng);\n      this.$editor.find('.note-status-output').html('');\n      $(spans).css(target, value);\n\n      // [workaround] added styled bogus span for style\n      //  - also bogus character needed for cursor position\n      if (rng.isCollapsed()) {\n        const firstSpan = lists.head(spans);\n        if (firstSpan && !dom.nodeLength(firstSpan)) {\n          firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;\n          range.createFromNode(firstSpan.firstChild).select();\n          this.setLastRange();\n          this.$editable.data(KEY_BOGUS, firstSpan);\n        }\n      } else {\n        this.setLastRange(\n          this.createRangeFromList(spans).select()\n        );\n      }\n    } else {\n      const noteStatusOutput = $.now();\n      this.$editor.find('.note-status-output').html('<div id=\"note-status-output-' + noteStatusOutput + '\" class=\"alert alert-info\">' + this.lang.output.noSelection + '</div>');\n      setTimeout(function() { $('#note-status-output-' + noteStatusOutput).remove(); }, 5000);\n    }\n  }\n\n  /**\n   * unlink\n   *\n   * @type command\n   */\n  unlink() {\n    let rng = this.getLastRange();\n    if (rng.isOnAnchor()) {\n      const anchor = dom.ancestor(rng.sc, dom.isAnchor);\n      rng = range.createFromNode(anchor);\n      rng.select();\n      this.setLastRange();\n\n      this.beforeCommand();\n      document.execCommand('unlink');\n      this.afterCommand();\n    }\n  }\n\n  /**\n   * returns link info\n   *\n   * @return {Object}\n   * @return {WrappedRange} return.range\n   * @return {String} return.text\n   * @return {Boolean} [return.isNewWindow=true]\n   * @return {String} [return.url=\"\"]\n   */\n  getLinkInfo() {\n    const rng = this.getLastRange().expand(dom.isAnchor);\n    // Get the first anchor on range(for edit).\n    const $anchor = $(lists.head(rng.nodes(dom.isAnchor)));\n    const linkInfo = {\n      range: rng,\n      text: rng.toString(),\n      url: $anchor.length ? $anchor.attr('href') : '',\n    };\n\n    // When anchor exists,\n    if ($anchor.length) {\n      // Set isNewWindow by checking its target.\n      linkInfo.isNewWindow = $anchor.attr('target') === '_blank';\n    }\n\n    return linkInfo;\n  }\n\n  addRow(position) {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.addRow(rng, position);\n      this.afterCommand();\n    }\n  }\n\n  addCol(position) {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.addCol(rng, position);\n      this.afterCommand();\n    }\n  }\n\n  deleteRow() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteRow(rng);\n      this.afterCommand();\n    }\n  }\n\n  deleteCol() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteCol(rng);\n      this.afterCommand();\n    }\n  }\n\n  deleteTable() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteTable(rng);\n      this.afterCommand();\n    }\n  }\n\n  /**\n   * @param {Position} pos\n   * @param {jQuery} $target - target element\n   * @param {Boolean} [bKeepRatio] - keep ratio\n   */\n  resizeTo(pos, $target, bKeepRatio) {\n    let imageSize;\n    if (bKeepRatio) {\n      const newRatio = pos.y / pos.x;\n      const ratio = $target.data('ratio');\n      imageSize = {\n        width: ratio > newRatio ? pos.x : pos.y / ratio,\n        height: ratio > newRatio ? pos.x * ratio : pos.y,\n      };\n    } else {\n      imageSize = {\n        width: pos.x,\n        height: pos.y,\n      };\n    }\n\n    $target.css(imageSize);\n  }\n\n  /**\n   * returns whether editable area has focus or not.\n   */\n  hasFocus() {\n    return this.$editable.is(':focus');\n  }\n\n  /**\n   * set focus\n   */\n  focus() {\n    // [workaround] Screen will move when page is scolled in IE.\n    //  - do focus when not focused\n    if (!this.hasFocus()) {\n      this.$editable.focus();\n    }\n  }\n\n  /**\n   * returns whether contents is empty or not.\n   * @return {Boolean}\n   */\n  isEmpty() {\n    return dom.isEmpty(this.$editable[0]) || dom.emptyPara === this.$editable.html();\n  }\n\n  /**\n   * Removes all contents and restores the editable instance to an _emptyPara_.\n   */\n  empty() {\n    this.context.invoke('code', dom.emptyPara);\n  }\n\n  /**\n   * normalize content\n   */\n  normalizeContent() {\n    this.$editable[0].normalize();\n  }\n}\n","import lists from '../core/lists';\n\nexport default class Clipboard {\n  constructor(context) {\n    this.context = context;\n    this.$editable = context.layoutInfo.editable;\n  }\n\n  initialize() {\n    this.$editable.on('paste', this.pasteByEvent.bind(this));\n  }\n\n  /**\n   * paste by clipboard event\n   *\n   * @param {Event} event\n   */\n  pasteByEvent(event) {\n    const clipboardData = event.originalEvent.clipboardData;\n\n    if (clipboardData && clipboardData.items && clipboardData.items.length) {\n      const item = clipboardData.items.length > 1 ? clipboardData.items[1] : lists.head(clipboardData.items);\n      if (item.kind === 'file' && item.type.indexOf('image/') !== -1) {\n        // paste img file\n        this.context.invoke('editor.insertImagesOrCallback', [item.getAsFile()]);\n        event.preventDefault();\n      } else if (item.kind === 'string') {\n        // paste text with maxTextLength check\n        if (this.context.invoke('editor.isLimited', clipboardData.getData('Text').length)) {\n          event.preventDefault();\n        }\n      }\n    } else if (window.clipboardData) {\n      // for IE\n      let text = window.clipboardData.getData('text');\n      if (this.context.invoke('editor.isLimited', text.length)) {\n        event.preventDefault();\n      }\n    }\n    // Call editor.afterCommand after proceeding default event handler\n    setTimeout(() => {\n      this.context.invoke('editor.afterCommand');\n    }, 10);\n  }\n}\n","import $ from 'jquery';\n\nexport default class Dropzone {\n  constructor(context) {\n    this.context = context;\n    this.$eventListener = $(document);\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n    this.documentEventHandlers = {};\n\n    this.$dropzone = $([\n      '<div class=\"note-dropzone\">',\n        '<div class=\"note-dropzone-message\"></div>',\n      '</div>',\n    ].join('')).prependTo(this.$editor);\n  }\n\n  /**\n   * attach Drag and Drop Events\n   */\n  initialize() {\n    if (this.options.disableDragAndDrop) {\n      // prevent default drop event\n      this.documentEventHandlers.onDrop = (e) => {\n        e.preventDefault();\n      };\n      // do not consider outside of dropzone\n      this.$eventListener = this.$dropzone;\n      this.$eventListener.on('drop', this.documentEventHandlers.onDrop);\n    } else {\n      this.attachDragAndDropEvent();\n    }\n  }\n\n  /**\n   * attach Drag and Drop Events\n   */\n  attachDragAndDropEvent() {\n    let collection = $();\n    const $dropzoneMessage = this.$dropzone.find('.note-dropzone-message');\n\n    this.documentEventHandlers.onDragenter = (e) => {\n      const isCodeview = this.context.invoke('codeview.isActivated');\n      const hasEditorSize = this.$editor.width() > 0 && this.$editor.height() > 0;\n      if (!isCodeview && !collection.length && hasEditorSize) {\n        this.$editor.addClass('dragover');\n        this.$dropzone.width(this.$editor.width());\n        this.$dropzone.height(this.$editor.height());\n        $dropzoneMessage.text(this.lang.image.dragImageHere);\n      }\n      collection = collection.add(e.target);\n    };\n\n    this.documentEventHandlers.onDragleave = (e) => {\n      collection = collection.not(e.target);\n\n      // If nodeName is BODY, then just make it over (fix for IE)\n      if (!collection.length || e.target.nodeName === 'BODY') {\n        collection = $();\n        this.$editor.removeClass('dragover');\n      }\n    };\n\n    this.documentEventHandlers.onDrop = () => {\n      collection = $();\n      this.$editor.removeClass('dragover');\n    };\n\n    // show dropzone on dragenter when dragging a object to document\n    // -but only if the editor is visible, i.e. has a positive width and height\n    this.$eventListener.on('dragenter', this.documentEventHandlers.onDragenter)\n      .on('dragleave', this.documentEventHandlers.onDragleave)\n      .on('drop', this.documentEventHandlers.onDrop);\n\n    // change dropzone's message on hover.\n    this.$dropzone.on('dragenter', () => {\n      this.$dropzone.addClass('hover');\n      $dropzoneMessage.text(this.lang.image.dropImage);\n    }).on('dragleave', () => {\n      this.$dropzone.removeClass('hover');\n      $dropzoneMessage.text(this.lang.image.dragImageHere);\n    });\n\n    // attach dropImage\n    this.$dropzone.on('drop', (event) => {\n      const dataTransfer = event.originalEvent.dataTransfer;\n\n      // stop the browser from opening the dropped content\n      event.preventDefault();\n\n      if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n        this.$editable.focus();\n        this.context.invoke('editor.insertImagesOrCallback', dataTransfer.files);\n      } else {\n        $.each(dataTransfer.types, (idx, type) => {\n          // skip moz-specific types\n          if (type.toLowerCase().indexOf('_moz_') > -1) {\n            return;\n          }\n          const content = dataTransfer.getData(type);\n\n          if (type.toLowerCase().indexOf('text') > -1) {\n            this.context.invoke('editor.pasteHTML', content);\n          } else {\n            $(content).each((idx, item) => {\n              this.context.invoke('editor.insertNode', item);\n            });\n          }\n        });\n      }\n    }).on('dragover', false); // prevent default dragover event\n  }\n\n  destroy() {\n    Object.keys(this.documentEventHandlers).forEach((key) => {\n      this.$eventListener.off(key.substr(2).toLowerCase(), this.documentEventHandlers[key]);\n    });\n    this.documentEventHandlers = {};\n  }\n}\n","import dom from '../core/dom';\nimport key from '../core/key';\n\n/**\n * @class Codeview\n */\nexport default class CodeView {\n  constructor(context) {\n    this.context = context;\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.$codable = context.layoutInfo.codable;\n    this.options = context.options;\n    this.CodeMirrorConstructor = window.CodeMirror;\n\n    if (this.options.codemirror.CodeMirrorConstructor) {\n      this.CodeMirrorConstructor = this.options.codemirror.CodeMirrorConstructor;\n    }\n  }\n\n  sync(html) {\n    const isCodeview = this.isActivated();\n    const CodeMirror = this.CodeMirrorConstructor;\n\n    if (isCodeview) {\n      if (html) {\n        if (CodeMirror) {\n          this.$codable.data('cmEditor').getDoc().setValue(html);\n        } else {\n          this.$codable.val(html);\n        }\n      } else {\n        if (CodeMirror) {\n          this.$codable.data('cmEditor').save();\n        }\n      }\n    }\n  }\n\n  initialize() {\n    this.$codable.on('keyup', (event) => {\n      if (event.keyCode === key.code.ESCAPE) {\n        this.deactivate();\n      }\n    });\n  }\n\n  /**\n   * @return {Boolean}\n   */\n  isActivated() {\n    return this.$editor.hasClass('codeview');\n  }\n\n  /**\n   * toggle codeview\n   */\n  toggle() {\n    if (this.isActivated()) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n    this.context.triggerEvent('codeview.toggled');\n  }\n\n  /**\n   * purify input value\n   * @param value\n   * @returns {*}\n   */\n  purify(value) {\n    if (this.options.codeviewFilter) {\n      // filter code view regex\n      value = value.replace(this.options.codeviewFilterRegex, '');\n      // allow specific iframe tag\n      if (this.options.codeviewIframeFilter) {\n        const whitelist = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\n        value = value.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function(tag) {\n          // remove if src attribute is duplicated\n          if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(tag)) {\n            return '';\n          }\n          for (const src of whitelist) {\n            // pass if src is trusted\n            if ((new RegExp('src=\"(https?:)?\\/\\/' + src.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\\/(.+)\"')).test(tag)) {\n              return tag;\n            }\n          }\n          return '';\n        });\n      }\n    }\n    return value;\n  }\n\n  /**\n   * activate code view\n   */\n  activate() {\n    const CodeMirror = this.CodeMirrorConstructor;\n    this.$codable.val(dom.html(this.$editable, this.options.prettifyHtml));\n    this.$codable.height(this.$editable.height());\n\n    this.context.invoke('toolbar.updateCodeview', true);\n    this.context.invoke('airPopover.updateCodeview', true);\n\n    this.$editor.addClass('codeview');\n    this.$codable.focus();\n\n    // activate CodeMirror as codable\n    if (CodeMirror) {\n      const cmEditor = CodeMirror.fromTextArea(this.$codable[0], this.options.codemirror);\n\n      // CodeMirror TernServer\n      if (this.options.codemirror.tern) {\n        const server = new CodeMirror.TernServer(this.options.codemirror.tern);\n        cmEditor.ternServer = server;\n        cmEditor.on('cursorActivity', (cm) => {\n          server.updateArgHints(cm);\n        });\n      }\n\n      cmEditor.on('blur', (event) => {\n        this.context.triggerEvent('blur.codeview', cmEditor.getValue(), event);\n      });\n      cmEditor.on('change', () => {\n        this.context.triggerEvent('change.codeview', cmEditor.getValue(), cmEditor);\n      });\n\n      // CodeMirror hasn't Padding.\n      cmEditor.setSize(null, this.$editable.outerHeight());\n      this.$codable.data('cmEditor', cmEditor);\n    } else {\n      this.$codable.on('blur', (event) => {\n        this.context.triggerEvent('blur.codeview', this.$codable.val(), event);\n      });\n      this.$codable.on('input', () => {\n        this.context.triggerEvent('change.codeview', this.$codable.val(), this.$codable);\n      });\n    }\n  }\n\n  /**\n   * deactivate code view\n   */\n  deactivate() {\n    const CodeMirror = this.CodeMirrorConstructor;\n    // deactivate CodeMirror as codable\n    if (CodeMirror) {\n      const cmEditor = this.$codable.data('cmEditor');\n      this.$codable.val(cmEditor.getValue());\n      cmEditor.toTextArea();\n    }\n\n    const value = this.purify(dom.value(this.$codable, this.options.prettifyHtml) || dom.emptyPara);\n    const isChange = this.$editable.html() !== value;\n\n    this.$editable.html(value);\n    this.$editable.height(this.options.height ? this.$codable.height() : 'auto');\n    this.$editor.removeClass('codeview');\n\n    if (isChange) {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n\n    this.$editable.focus();\n\n    this.context.invoke('toolbar.updateCodeview', false);\n    this.context.invoke('airPopover.updateCodeview', false);\n  }\n\n  destroy() {\n    if (this.isActivated()) {\n      this.deactivate();\n    }\n  }\n}\n","import $ from 'jquery';\nconst EDITABLE_PADDING = 24;\n\nexport default class Statusbar {\n  constructor(context) {\n    this.$document = $(document);\n    this.$statusbar = context.layoutInfo.statusbar;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n  }\n\n  initialize() {\n    if (this.options.airMode || this.options.disableResizeEditor) {\n      this.destroy();\n      return;\n    }\n\n    this.$statusbar.on('mousedown', (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const editableTop = this.$editable.offset().top - this.$document.scrollTop();\n      const onMouseMove = (event) => {\n        let height = event.clientY - (editableTop + EDITABLE_PADDING);\n\n        height = (this.options.minheight > 0) ? Math.max(height, this.options.minheight) : height;\n        height = (this.options.maxHeight > 0) ? Math.min(height, this.options.maxHeight) : height;\n\n        this.$editable.height(height);\n      };\n\n      this.$document.on('mousemove', onMouseMove).one('mouseup', () => {\n        this.$document.off('mousemove', onMouseMove);\n      });\n    });\n  }\n\n  destroy() {\n    this.$statusbar.off();\n    this.$statusbar.addClass('locked');\n  }\n}\n","import $ from 'jquery';\n\nexport default class Fullscreen {\n  constructor(context) {\n    this.context = context;\n\n    this.$editor = context.layoutInfo.editor;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.$editable = context.layoutInfo.editable;\n    this.$codable = context.layoutInfo.codable;\n\n    this.$window = $(window);\n    this.$scrollbar = $('html, body');\n\n    this.onResize = () => {\n      this.resizeTo({\n        h: this.$window.height() - this.$toolbar.outerHeight(),\n      });\n    };\n  }\n\n  resizeTo(size) {\n    this.$editable.css('height', size.h);\n    this.$codable.css('height', size.h);\n    if (this.$codable.data('cmeditor')) {\n      this.$codable.data('cmeditor').setsize(null, size.h);\n    }\n  }\n\n  /**\n   * toggle fullscreen\n   */\n  toggle() {\n    this.$editor.toggleClass('fullscreen');\n    if (this.isFullscreen()) {\n      this.$editable.data('orgHeight', this.$editable.css('height'));\n      this.$editable.data('orgMaxHeight', this.$editable.css('maxHeight'));\n      this.$editable.css('maxHeight', '');\n      this.$window.on('resize', this.onResize).trigger('resize');\n      this.$scrollbar.css('overflow', 'hidden');\n    } else {\n      this.$window.off('resize', this.onResize);\n      this.resizeTo({ h: this.$editable.data('orgHeight') });\n      this.$editable.css('maxHeight', this.$editable.css('orgMaxHeight'));\n      this.$scrollbar.css('overflow', 'visible');\n    }\n\n    this.context.invoke('toolbar.updateFullscreen', this.isFullscreen());\n  }\n\n  isFullscreen() {\n    return this.$editor.hasClass('fullscreen');\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\n\nexport default class Handle {\n  constructor(context) {\n    this.context = context;\n    this.$document = $(document);\n    this.$editingArea = context.layoutInfo.editingArea;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    this.events = {\n      'summernote.mousedown': (we, e) => {\n        if (this.update(e.target, e)) {\n          e.preventDefault();\n        }\n      },\n      'summernote.keyup summernote.scroll summernote.change summernote.dialog.shown': () => {\n        this.update();\n      },\n      'summernote.disable summernote.blur': () => {\n        this.hide();\n      },\n      'summernote.codeview.toggled': () => {\n        this.update();\n      },\n    };\n  }\n\n  initialize() {\n    this.$handle = $([\n      '<div class=\"note-handle\">',\n        '<div class=\"note-control-selection\">',\n          '<div class=\"note-control-selection-bg\"></div>',\n          '<div class=\"note-control-holder note-control-nw\"></div>',\n          '<div class=\"note-control-holder note-control-ne\"></div>',\n          '<div class=\"note-control-holder note-control-sw\"></div>',\n          '<div class=\"',\n            (this.options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing'),\n          ' note-control-se\"></div>',\n          (this.options.disableResizeImage ? '' : '<div class=\"note-control-selection-info\"></div>'),\n        '</div>',\n      '</div>',\n    ].join('')).prependTo(this.$editingArea);\n\n    this.$handle.on('mousedown', (event) => {\n      if (dom.isControlSizing(event.target)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const $target = this.$handle.find('.note-control-selection').data('target');\n        const posStart = $target.offset();\n        const scrollTop = this.$document.scrollTop();\n\n        const onMouseMove = (event) => {\n          this.context.invoke('editor.resizeTo', {\n            x: event.clientX - posStart.left,\n            y: event.clientY - (posStart.top - scrollTop),\n          }, $target, !event.shiftKey);\n\n          this.update($target[0], event);\n        };\n\n        this.$document\n          .on('mousemove', onMouseMove)\n          .one('mouseup', (e) => {\n            e.preventDefault();\n            this.$document.off('mousemove', onMouseMove);\n            this.context.invoke('editor.afterCommand');\n          });\n\n        if (!$target.data('ratio')) { // original ratio.\n          $target.data('ratio', $target.height() / $target.width());\n        }\n      }\n    });\n\n    // Listen for scrolling on the handle overlay.\n    this.$handle.on('wheel', (e) => {\n      e.preventDefault();\n      this.update();\n    });\n  }\n\n  destroy() {\n    this.$handle.remove();\n  }\n\n  update(target, event) {\n    if (this.context.isDisabled()) {\n      return false;\n    }\n\n    const isImage = dom.isImg(target);\n    const $selection = this.$handle.find('.note-control-selection');\n\n    this.context.invoke('imagePopover.update', target, event);\n\n    if (isImage) {\n      const $image = $(target);\n      const position = $image.position();\n      const pos = {\n        left: position.left + parseInt($image.css('marginLeft'), 10),\n        top: position.top + parseInt($image.css('marginTop'), 10),\n      };\n\n      // exclude margin\n      const imageSize = {\n        w: $image.outerWidth(false),\n        h: $image.outerHeight(false),\n      };\n\n      $selection.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n        width: imageSize.w,\n        height: imageSize.h,\n      }).data('target', $image); // save current image element.\n\n      const origImageObj = new Image();\n      origImageObj.src = $image.attr('src');\n\n      const sizingText = imageSize.w + 'x' + imageSize.h + ' (' + this.lang.image.original + ': ' + origImageObj.width + 'x' + origImageObj.height + ')';\n      $selection.find('.note-control-selection-info').text(sizingText);\n      this.context.invoke('editor.saveTarget', target);\n    } else {\n      this.hide();\n    }\n\n    return isImage;\n  }\n\n  /**\n   * hide\n   *\n   * @param {jQuery} $handle\n   */\n  hide() {\n    this.context.invoke('editor.clearTarget');\n    this.$handle.children().hide();\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport key from '../core/key';\n\nconst defaultScheme = 'http://';\nconst linkPattern = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i;\n\nexport default class AutoLink {\n  constructor(context) {\n    this.context = context;\n    this.options = context.options;\n    this.events = {\n      'summernote.keyup': (we, e) => {\n        if (!e.isDefaultPrevented()) {\n          this.handleKeyup(e);\n        }\n      },\n      'summernote.keydown': (we, e) => {\n        this.handleKeydown(e);\n      },\n    };\n  }\n\n  initialize() {\n    this.lastWordRange = null;\n  }\n\n  destroy() {\n    this.lastWordRange = null;\n  }\n\n  replace() {\n    if (!this.lastWordRange) {\n      return;\n    }\n\n    const keyword = this.lastWordRange.toString();\n    const match = keyword.match(linkPattern);\n\n    if (match && (match[1] || match[2])) {\n      const link = match[1] ? keyword : defaultScheme + keyword;\n      const urlText = this.options.showDomainOnlyForAutolink ?\n        keyword.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:www\\.)?/i, '').split('/')[0]\n        : keyword;\n      const node = $('<a />').html(urlText).attr('href', link)[0];\n      if (this.context.options.linkTargetBlank) {\n        $(node).attr('target', '_blank');\n      }\n\n      this.lastWordRange.insertNode(node);\n      this.lastWordRange = null;\n      this.context.invoke('editor.focus');\n    }\n  }\n\n  handleKeydown(e) {\n    if (lists.contains([key.code.ENTER, key.code.SPACE], e.keyCode)) {\n      const wordRange = this.context.invoke('editor.createRange').getWordRange();\n      this.lastWordRange = wordRange;\n    }\n  }\n\n  handleKeyup(e) {\n    if (lists.contains([key.code.ENTER, key.code.SPACE], e.keyCode)) {\n      this.replace();\n    }\n  }\n}\n","import dom from '../core/dom';\n\n/**\n * textarea auto sync.\n */\nexport default class AutoSync {\n  constructor(context) {\n    this.$note = context.layoutInfo.note;\n    this.events = {\n      'summernote.change': () => {\n        this.$note.val(context.invoke('code'));\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return dom.isTextarea(this.$note[0]);\n  }\n}\n","import lists from '../core/lists';\nimport dom from '../core/dom';\nimport key from '../core/key';\n\nexport default class AutoReplace {\n  constructor(context) {\n    this.context = context;\n    this.options = context.options.replace || {};\n\n    this.keys = [key.code.ENTER, key.code.SPACE, key.code.PERIOD, key.code.COMMA, key.code.SEMICOLON, key.code.SLASH];\n    this.previousKeydownCode = null;\n\n    this.events = {\n      'summernote.keyup': (we, e) => {\n        if (!e.isDefaultPrevented()) {\n          this.handleKeyup(e);\n        }\n      },\n      'summernote.keydown': (we, e) => {\n        this.handleKeydown(e);\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !!this.options.match;\n  }\n\n  initialize() {\n    this.lastWord = null;\n  }\n\n  destroy() {\n    this.lastWord = null;\n  }\n\n  replace() {\n    if (!this.lastWord) {\n      return;\n    }\n\n    const self = this;\n    const keyword = this.lastWord.toString();\n    this.options.match(keyword, function(match) {\n      if (match) {\n        let node = '';\n\n        if (typeof match === 'string') {\n          node = dom.createText(match);\n        } else if (match instanceof jQuery) {\n          node = match[0];\n        } else if (match instanceof Node) {\n          node = match;\n        }\n\n        if (!node) return;\n        self.lastWord.insertNode(node);\n        self.lastWord = null;\n        self.context.invoke('editor.focus');\n      }\n    });\n  }\n\n  handleKeydown(e) {\n    // this forces it to remember the last whole word, even if multiple termination keys are pressed\n    // before the previous key is let go.\n    if (this.previousKeydownCode && lists.contains(this.keys, this.previousKeydownCode)) {\n      this.previousKeydownCode = e.keyCode;\n      return;\n    }\n\n    if (lists.contains(this.keys, e.keyCode)) {\n      const wordRange = this.context.invoke('editor.createRange').getWordRange();\n      this.lastWord = wordRange;\n    }\n    this.previousKeydownCode = e.keyCode;\n  }\n\n  handleKeyup(e) {\n    if (lists.contains(this.keys, e.keyCode)) {\n      this.replace();\n    }\n  }\n}\n","import $ from 'jquery';\nexport default class Placeholder {\n  constructor(context) {\n    this.context = context;\n\n    this.$editingArea = context.layoutInfo.editingArea;\n    this.options = context.options;\n\n    if (this.options.inheritPlaceholder === true) {\n      // get placeholder value from the original element\n      this.options.placeholder = this.context.$note.attr('placeholder') || this.options.placeholder;\n    }\n\n    this.events = {\n      'summernote.init summernote.change': () => {\n        this.update();\n      },\n      'summernote.codeview.toggled': () => {\n        this.update();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !!this.options.placeholder;\n  }\n\n  initialize() {\n    this.$placeholder = $('<div class=\"note-placeholder\">');\n    this.$placeholder.on('click', () => {\n      this.context.invoke('focus');\n    }).html(this.options.placeholder).prependTo(this.$editingArea);\n\n    this.update();\n  }\n\n  destroy() {\n    this.$placeholder.remove();\n  }\n\n  update() {\n    const isShow = !this.context.invoke('codeview.isActivated') && this.context.invoke('editor.isEmpty');\n    this.$placeholder.toggle(isShow);\n  }\n}\n","import $ from 'jquery';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport env from '../core/env';\n\nexport default class Buttons {\n  constructor(context) {\n    this.ui = $.summernote.ui;\n    this.context = context;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n    this.invertedKeyMap = func.invertObject(\n      this.options.keyMap[env.isMac ? 'mac' : 'pc']\n    );\n  }\n\n  representShortcut(editorMethod) {\n    let shortcut = this.invertedKeyMap[editorMethod];\n    if (!this.options.shortcuts || !shortcut) {\n      return '';\n    }\n\n    if (env.isMac) {\n      shortcut = shortcut.replace('CMD', '⌘').replace('SHIFT', '⇧');\n    }\n\n    shortcut = shortcut.replace('BACKSLASH', '\\\\')\n      .replace('SLASH', '/')\n      .replace('LEFTBRACKET', '[')\n      .replace('RIGHTBRACKET', ']');\n\n    return ' (' + shortcut + ')';\n  }\n\n  button(o) {\n    if (!this.options.tooltip && o.tooltip) {\n      delete o.tooltip;\n    }\n    o.container = this.options.container;\n    return this.ui.button(o);\n  }\n\n  initialize() {\n    this.addToolbarButtons();\n    this.addImagePopoverButtons();\n    this.addLinkPopoverButtons();\n    this.addTablePopoverButtons();\n    this.fontInstalledMap = {};\n  }\n\n  destroy() {\n    delete this.fontInstalledMap;\n  }\n\n  isFontInstalled(name) {\n    if (!Object.prototype.hasOwnProperty.call(this.fontInstalledMap, name)) {\n      this.fontInstalledMap[name] = env.isFontInstalled(name) ||\n        lists.contains(this.options.fontNamesIgnoreCheck, name);\n    }\n    return this.fontInstalledMap[name];\n  }\n\n  isFontDeservedToAdd(name) {\n    name = name.toLowerCase();\n    return (name !== '' && this.isFontInstalled(name) && env.genericFontFamilies.indexOf(name) === -1);\n  }\n\n  colorPalette(className, tooltip, backColor, foreColor) {\n    return this.ui.buttonGroup({\n      className: 'note-color ' + className,\n      children: [\n        this.button({\n          className: 'note-current-color-button',\n          contents: this.ui.icon(this.options.icons.font + ' note-recent-color'),\n          tooltip: tooltip,\n          click: (e) => {\n            const $button = $(e.currentTarget);\n            if (backColor && foreColor) {\n              this.context.invoke('editor.color', {\n                backColor: $button.attr('data-backColor'),\n                foreColor: $button.attr('data-foreColor'),\n              });\n            } else if (backColor) {\n              this.context.invoke('editor.color', {\n                backColor: $button.attr('data-backColor'),\n              });\n            } else if (foreColor) {\n              this.context.invoke('editor.color', {\n                foreColor: $button.attr('data-foreColor'),\n              });\n            }\n          },\n          callback: ($button) => {\n            const $recentColor = $button.find('.note-recent-color');\n            if (backColor) {\n              $recentColor.css('background-color', this.options.colorButton.backColor);\n              $button.attr('data-backColor', this.options.colorButton.backColor);\n            }\n            if (foreColor) {\n              $recentColor.css('color', this.options.colorButton.foreColor);\n              $button.attr('data-foreColor', this.options.colorButton.foreColor);\n            } else {\n              $recentColor.css('color', 'transparent');\n            }\n          },\n        }),\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('', this.options),\n          tooltip: this.lang.color.more,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          items: (backColor ? [\n            '<div class=\"note-palette\">',\n              '<div class=\"note-palette-title\">' + this.lang.color.background + '</div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"backColor\" data-value=\"transparent\">',\n                  this.lang.color.transparent,\n                '</button>',\n              '</div>',\n              '<div class=\"note-holder\" data-event=\"backColor\"><!-- back colors --></div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"backColorPicker\">',\n                  this.lang.color.cpSelect,\n                '</button>',\n                '<input type=\"color\" id=\"backColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette\">',\n              '</div>',\n              '<div class=\"note-holder-custom\" id=\"backColorPalette\" data-event=\"backColor\"></div>',\n            '</div>',\n          ].join('') : '') +\n          (foreColor ? [\n            '<div class=\"note-palette\">',\n              '<div class=\"note-palette-title\">' + this.lang.color.foreground + '</div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"removeFormat\" data-value=\"foreColor\">',\n                  this.lang.color.resetToDefault,\n                '</button>',\n              '</div>',\n              '<div class=\"note-holder\" data-event=\"foreColor\"><!-- fore colors --></div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"foreColorPicker\">',\n                  this.lang.color.cpSelect,\n                '</button>',\n                '<input type=\"color\" id=\"foreColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette\">',\n              '</div>', // Fix missing Div, Commented to find easily if it's wrong\n              '<div class=\"note-holder-custom\" id=\"foreColorPalette\" data-event=\"foreColor\"></div>',\n            '</div>',\n          ].join('') : ''),\n          callback: ($dropdown) => {\n            $dropdown.find('.note-holder').each((idx, item) => {\n              const $holder = $(item);\n              $holder.append(this.ui.palette({\n                colors: this.options.colors,\n                colorsName: this.options.colorsName,\n                eventName: $holder.data('event'),\n                container: this.options.container,\n                tooltip: this.options.tooltip,\n              }).render());\n            });\n            /* TODO: do we have to record recent custom colors within cookies? */\n            var customColors = [\n              ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'],\n            ];\n            $dropdown.find('.note-holder-custom').each((idx, item) => {\n              const $holder = $(item);\n              $holder.append(this.ui.palette({\n                colors: customColors,\n                colorsName: customColors,\n                eventName: $holder.data('event'),\n                container: this.options.container,\n                tooltip: this.options.tooltip,\n              }).render());\n            });\n            $dropdown.find('input[type=color]').each((idx, item) => {\n              $(item).change(function() {\n                const $chip = $dropdown.find('#' + $(this).data('event')).find('.note-color-btn').first();\n                const color = this.value.toUpperCase();\n                $chip.css('background-color', color)\n                  .attr('aria-label', color)\n                  .attr('data-value', color)\n                  .attr('data-original-title', color);\n                $chip.click();\n              });\n            });\n          },\n          click: (event) => {\n            event.stopPropagation();\n\n            const $parent = $('.' + className).find('.note-dropdown-menu');\n            const $button = $(event.target);\n            const eventName = $button.data('event');\n            const value = $button.attr('data-value');\n\n            if (eventName === 'openPalette') {\n              const $picker = $parent.find('#' + value);\n              const $palette = $($parent.find('#' + $picker.data('event')).find('.note-color-row')[0]);\n\n              // Shift palette chips\n              const $chip = $palette.find('.note-color-btn').last().detach();\n\n              // Set chip attributes\n              const color = $picker.val();\n              $chip.css('background-color', color)\n                .attr('aria-label', color)\n                .attr('data-value', color)\n                .attr('data-original-title', color);\n              $palette.prepend($chip);\n              $picker.click();\n            } else {\n              if (lists.contains(['backColor', 'foreColor'], eventName)) {\n                const key = eventName === 'backColor' ? 'background-color' : 'color';\n                const $color = $button.closest('.note-color').find('.note-recent-color');\n                const $currentButton = $button.closest('.note-color').find('.note-current-color-button');\n\n                $color.css(key, value);\n                $currentButton.attr('data-' + eventName, value);\n              }\n              this.context.invoke('editor.' + eventName, value);\n            }\n          },\n        }),\n      ],\n    }).render();\n  }\n\n  addToolbarButtons() {\n    this.context.memo('button.style', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(\n            this.ui.icon(this.options.icons.magic), this.options\n          ),\n          tooltip: this.lang.style.style,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          className: 'dropdown-style',\n          items: this.options.styleTags,\n          title: this.lang.style.style,\n          template: (item) => {\n            // TBD: need to be simplified\n            if (typeof item === 'string') {\n              item = {\n                tag: item,\n                title: (Object.prototype.hasOwnProperty.call(this.lang.style, item) ? this.lang.style[item] : item),\n              };\n            }\n\n            const tag = item.tag;\n            const title = item.title;\n            const style = item.style ? ' style=\"' + item.style + '\" ' : '';\n            const className = item.className ? ' class=\"' + item.className + '\"' : '';\n\n            return '<' + tag + style + className + '>' + title + '</' + tag + '>';\n          },\n          click: this.context.createInvokeHandler('editor.formatBlock'),\n        }),\n      ]).render();\n    });\n\n    for (let styleIdx = 0, styleLen = this.options.styleTags.length; styleIdx < styleLen; styleIdx++) {\n      const item = this.options.styleTags[styleIdx];\n\n      this.context.memo('button.style.' + item, () => {\n        return this.button({\n          className: 'note-btn-style-' + item,\n          contents: '<div data-value=\"' + item + '\">' + item.toUpperCase() + '</div>',\n          tooltip: this.lang.style[item],\n          click: this.context.createInvokeHandler('editor.formatBlock'),\n        }).render();\n      });\n    }\n\n    this.context.memo('button.bold', () => {\n      return this.button({\n        className: 'note-btn-bold',\n        contents: this.ui.icon(this.options.icons.bold),\n        tooltip: this.lang.font.bold + this.representShortcut('bold'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.bold'),\n      }).render();\n    });\n\n    this.context.memo('button.italic', () => {\n      return this.button({\n        className: 'note-btn-italic',\n        contents: this.ui.icon(this.options.icons.italic),\n        tooltip: this.lang.font.italic + this.representShortcut('italic'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.italic'),\n      }).render();\n    });\n\n    this.context.memo('button.underline', () => {\n      return this.button({\n        className: 'note-btn-underline',\n        contents: this.ui.icon(this.options.icons.underline),\n        tooltip: this.lang.font.underline + this.representShortcut('underline'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.underline'),\n      }).render();\n    });\n\n    this.context.memo('button.clear', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.eraser),\n        tooltip: this.lang.font.clear + this.representShortcut('removeFormat'),\n        click: this.context.createInvokeHandler('editor.removeFormat'),\n      }).render();\n    });\n\n    this.context.memo('button.strikethrough', () => {\n      return this.button({\n        className: 'note-btn-strikethrough',\n        contents: this.ui.icon(this.options.icons.strikethrough),\n        tooltip: this.lang.font.strikethrough + this.representShortcut('strikethrough'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.strikethrough'),\n      }).render();\n    });\n\n    this.context.memo('button.superscript', () => {\n      return this.button({\n        className: 'note-btn-superscript',\n        contents: this.ui.icon(this.options.icons.superscript),\n        tooltip: this.lang.font.superscript,\n        click: this.context.createInvokeHandlerAndUpdateState('editor.superscript'),\n      }).render();\n    });\n\n    this.context.memo('button.subscript', () => {\n      return this.button({\n        className: 'note-btn-subscript',\n        contents: this.ui.icon(this.options.icons.subscript),\n        tooltip: this.lang.font.subscript,\n        click: this.context.createInvokeHandlerAndUpdateState('editor.subscript'),\n      }).render();\n    });\n\n    this.context.memo('button.fontname', () => {\n      const styleInfo = this.context.invoke('editor.currentStyle');\n\n      if (this.options.addDefaultFonts) {\n        // Add 'default' fonts into the fontnames array if not exist\n        $.each(styleInfo['font-family'].split(','), (idx, fontname) => {\n          fontname = fontname.trim().replace(/['\"]+/g, '');\n          if (this.isFontDeservedToAdd(fontname)) {\n            if (this.options.fontNames.indexOf(fontname) === -1) {\n              this.options.fontNames.push(fontname);\n            }\n          }\n        });\n      }\n\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(\n            '<span class=\"note-current-fontname\"></span>', this.options\n          ),\n          tooltip: this.lang.font.name,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontname',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontNames.filter(this.isFontInstalled.bind(this)),\n          title: this.lang.font.name,\n          template: (item) => {\n            return '<span style=\"font-family: ' + env.validFontName(item) + '\">' + item + '</span>';\n          },\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontName'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.fontsize', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>', this.options),\n          tooltip: this.lang.font.size,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontsize',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontSizes,\n          title: this.lang.font.size,\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSize'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.fontsizeunit', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>', this.options),\n          tooltip: this.lang.font.sizeunit,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontsizeunit',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontSizeUnits,\n          title: this.lang.font.sizeunit,\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSizeUnit'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.color', () => {\n      return this.colorPalette('note-color-all', this.lang.color.recent, true, true);\n    });\n\n    this.context.memo('button.forecolor', () => {\n      return this.colorPalette('note-color-fore', this.lang.color.foreground, false, true);\n    });\n\n    this.context.memo('button.backcolor', () => {\n      return this.colorPalette('note-color-back', this.lang.color.background, true, false);\n    });\n\n    this.context.memo('button.ul', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.unorderedlist),\n        tooltip: this.lang.lists.unordered + this.representShortcut('insertUnorderedList'),\n        click: this.context.createInvokeHandler('editor.insertUnorderedList'),\n      }).render();\n    });\n\n    this.context.memo('button.ol', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.orderedlist),\n        tooltip: this.lang.lists.ordered + this.representShortcut('insertOrderedList'),\n        click: this.context.createInvokeHandler('editor.insertOrderedList'),\n      }).render();\n    });\n\n    const justifyLeft = this.button({\n      contents: this.ui.icon(this.options.icons.alignLeft),\n      tooltip: this.lang.paragraph.left + this.representShortcut('justifyLeft'),\n      click: this.context.createInvokeHandler('editor.justifyLeft'),\n    });\n\n    const justifyCenter = this.button({\n      contents: this.ui.icon(this.options.icons.alignCenter),\n      tooltip: this.lang.paragraph.center + this.representShortcut('justifyCenter'),\n      click: this.context.createInvokeHandler('editor.justifyCenter'),\n    });\n\n    const justifyRight = this.button({\n      contents: this.ui.icon(this.options.icons.alignRight),\n      tooltip: this.lang.paragraph.right + this.representShortcut('justifyRight'),\n      click: this.context.createInvokeHandler('editor.justifyRight'),\n    });\n\n    const justifyFull = this.button({\n      contents: this.ui.icon(this.options.icons.alignJustify),\n      tooltip: this.lang.paragraph.justify + this.representShortcut('justifyFull'),\n      click: this.context.createInvokeHandler('editor.justifyFull'),\n    });\n\n    const outdent = this.button({\n      contents: this.ui.icon(this.options.icons.outdent),\n      tooltip: this.lang.paragraph.outdent + this.representShortcut('outdent'),\n      click: this.context.createInvokeHandler('editor.outdent'),\n    });\n\n    const indent = this.button({\n      contents: this.ui.icon(this.options.icons.indent),\n      tooltip: this.lang.paragraph.indent + this.representShortcut('indent'),\n      click: this.context.createInvokeHandler('editor.indent'),\n    });\n\n    this.context.memo('button.justifyLeft', func.invoke(justifyLeft, 'render'));\n    this.context.memo('button.justifyCenter', func.invoke(justifyCenter, 'render'));\n    this.context.memo('button.justifyRight', func.invoke(justifyRight, 'render'));\n    this.context.memo('button.justifyFull', func.invoke(justifyFull, 'render'));\n    this.context.memo('button.outdent', func.invoke(outdent, 'render'));\n    this.context.memo('button.indent', func.invoke(indent, 'render'));\n\n    this.context.memo('button.paragraph', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.alignLeft), this.options),\n          tooltip: this.lang.paragraph.paragraph,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown([\n          this.ui.buttonGroup({\n            className: 'note-align',\n            children: [justifyLeft, justifyCenter, justifyRight, justifyFull],\n          }),\n          this.ui.buttonGroup({\n            className: 'note-list',\n            children: [outdent, indent],\n          }),\n        ]),\n      ]).render();\n    });\n\n    this.context.memo('button.height', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.textHeight), this.options),\n          tooltip: this.lang.font.height,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          items: this.options.lineHeights,\n          checkClassName: this.options.icons.menuCheck,\n          className: 'dropdown-line-height',\n          title: this.lang.font.height,\n          click: this.context.createInvokeHandler('editor.lineHeight'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.table', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.table), this.options),\n          tooltip: this.lang.table.table,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          title: this.lang.table.table,\n          className: 'note-table',\n          items: [\n            '<div class=\"note-dimension-picker\">',\n              '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>',\n              '<div class=\"note-dimension-picker-highlighted\"></div>',\n              '<div class=\"note-dimension-picker-unhighlighted\"></div>',\n            '</div>',\n            '<div class=\"note-dimension-display\">1 x 1</div>',\n          ].join(''),\n        }),\n      ], {\n        callback: ($node) => {\n          const $catcher = $node.find('.note-dimension-picker-mousecatcher');\n          $catcher.css({\n            width: this.options.insertTableMaxSize.col + 'em',\n            height: this.options.insertTableMaxSize.row + 'em',\n          }).mousedown(this.context.createInvokeHandler('editor.insertTable'))\n            .on('mousemove', this.tableMoveHandler.bind(this));\n        },\n      }).render();\n    });\n\n    this.context.memo('button.link', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.link),\n        tooltip: this.lang.link.link + this.representShortcut('linkDialog.show'),\n        click: this.context.createInvokeHandler('linkDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.picture', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.picture),\n        tooltip: this.lang.image.image,\n        click: this.context.createInvokeHandler('imageDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.video', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.video),\n        tooltip: this.lang.video.video,\n        click: this.context.createInvokeHandler('videoDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.hr', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.minus),\n        tooltip: this.lang.hr.insert + this.representShortcut('insertHorizontalRule'),\n        click: this.context.createInvokeHandler('editor.insertHorizontalRule'),\n      }).render();\n    });\n\n    this.context.memo('button.fullscreen', () => {\n      return this.button({\n        className: 'btn-fullscreen note-codeview-keep',\n        contents: this.ui.icon(this.options.icons.arrowsAlt),\n        tooltip: this.lang.options.fullscreen,\n        click: this.context.createInvokeHandler('fullscreen.toggle'),\n      }).render();\n    });\n\n    this.context.memo('button.codeview', () => {\n      return this.button({\n        className: 'btn-codeview note-codeview-keep',\n        contents: this.ui.icon(this.options.icons.code),\n        tooltip: this.lang.options.codeview,\n        click: this.context.createInvokeHandler('codeview.toggle'),\n      }).render();\n    });\n\n    this.context.memo('button.redo', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.redo),\n        tooltip: this.lang.history.redo + this.representShortcut('redo'),\n        click: this.context.createInvokeHandler('editor.redo'),\n      }).render();\n    });\n\n    this.context.memo('button.undo', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.undo),\n        tooltip: this.lang.history.undo + this.representShortcut('undo'),\n        click: this.context.createInvokeHandler('editor.undo'),\n      }).render();\n    });\n\n    this.context.memo('button.help', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.question),\n        tooltip: this.lang.options.help,\n        click: this.context.createInvokeHandler('helpDialog.show'),\n      }).render();\n    });\n  }\n\n  /**\n   * image: [\n   *   ['imageResize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\n   *   ['float', ['floatLeft', 'floatRight', 'floatNone']],\n   *   ['remove', ['removeMedia']],\n   * ],\n   */\n  addImagePopoverButtons() {\n    // Image Size Buttons\n    this.context.memo('button.resizeFull', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">100%</span>',\n        tooltip: this.lang.image.resizeFull,\n        click: this.context.createInvokeHandler('editor.resize', '1'),\n      }).render();\n    });\n    this.context.memo('button.resizeHalf', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">50%</span>',\n        tooltip: this.lang.image.resizeHalf,\n        click: this.context.createInvokeHandler('editor.resize', '0.5'),\n      }).render();\n    });\n    this.context.memo('button.resizeQuarter', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">25%</span>',\n        tooltip: this.lang.image.resizeQuarter,\n        click: this.context.createInvokeHandler('editor.resize', '0.25'),\n      }).render();\n    });\n    this.context.memo('button.resizeNone', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.rollback),\n        tooltip: this.lang.image.resizeNone,\n        click: this.context.createInvokeHandler('editor.resize', '0'),\n      }).render();\n    });\n\n    // Float Buttons\n    this.context.memo('button.floatLeft', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.floatLeft),\n        tooltip: this.lang.image.floatLeft,\n        click: this.context.createInvokeHandler('editor.floatMe', 'left'),\n      }).render();\n    });\n\n    this.context.memo('button.floatRight', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.floatRight),\n        tooltip: this.lang.image.floatRight,\n        click: this.context.createInvokeHandler('editor.floatMe', 'right'),\n      }).render();\n    });\n\n    this.context.memo('button.floatNone', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.rollback),\n        tooltip: this.lang.image.floatNone,\n        click: this.context.createInvokeHandler('editor.floatMe', 'none'),\n      }).render();\n    });\n\n    // Remove Buttons\n    this.context.memo('button.removeMedia', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.trash),\n        tooltip: this.lang.image.remove,\n        click: this.context.createInvokeHandler('editor.removeMedia'),\n      }).render();\n    });\n  }\n\n  addLinkPopoverButtons() {\n    this.context.memo('button.linkDialogShow', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.link),\n        tooltip: this.lang.link.edit,\n        click: this.context.createInvokeHandler('linkDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.unlink', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.unlink),\n        tooltip: this.lang.link.unlink,\n        click: this.context.createInvokeHandler('editor.unlink'),\n      }).render();\n    });\n  }\n\n  /**\n   * table : [\n   *  ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\n   *  ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]\n   * ],\n   */\n  addTablePopoverButtons() {\n    this.context.memo('button.addRowUp', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowAbove),\n        tooltip: this.lang.table.addRowAbove,\n        click: this.context.createInvokeHandler('editor.addRow', 'top'),\n      }).render();\n    });\n    this.context.memo('button.addRowDown', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowBelow),\n        tooltip: this.lang.table.addRowBelow,\n        click: this.context.createInvokeHandler('editor.addRow', 'bottom'),\n      }).render();\n    });\n    this.context.memo('button.addColLeft', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colBefore),\n        tooltip: this.lang.table.addColLeft,\n        click: this.context.createInvokeHandler('editor.addCol', 'left'),\n      }).render();\n    });\n    this.context.memo('button.addColRight', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colAfter),\n        tooltip: this.lang.table.addColRight,\n        click: this.context.createInvokeHandler('editor.addCol', 'right'),\n      }).render();\n    });\n    this.context.memo('button.deleteRow', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowRemove),\n        tooltip: this.lang.table.delRow,\n        click: this.context.createInvokeHandler('editor.deleteRow'),\n      }).render();\n    });\n    this.context.memo('button.deleteCol', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colRemove),\n        tooltip: this.lang.table.delCol,\n        click: this.context.createInvokeHandler('editor.deleteCol'),\n      }).render();\n    });\n    this.context.memo('button.deleteTable', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.trash),\n        tooltip: this.lang.table.delTable,\n        click: this.context.createInvokeHandler('editor.deleteTable'),\n      }).render();\n    });\n  }\n\n  build($container, groups) {\n    for (let groupIdx = 0, groupLen = groups.length; groupIdx < groupLen; groupIdx++) {\n      const group = groups[groupIdx];\n      const groupName = Array.isArray(group) ? group[0] : group;\n      const buttons = Array.isArray(group) ? ((group.length === 1) ? [group[0]] : group[1]) : [group];\n\n      const $group = this.ui.buttonGroup({\n        className: 'note-' + groupName,\n      }).render();\n\n      for (let idx = 0, len = buttons.length; idx < len; idx++) {\n        const btn = this.context.memo('button.' + buttons[idx]);\n        if (btn) {\n          $group.append(typeof btn === 'function' ? btn(this.context) : btn);\n        }\n      }\n      $group.appendTo($container);\n    }\n  }\n\n  /**\n   * @param {jQuery} [$container]\n   */\n  updateCurrentStyle($container) {\n    const $cont = $container || this.$toolbar;\n\n    const styleInfo = this.context.invoke('editor.currentStyle');\n    this.updateBtnStates($cont, {\n      '.note-btn-bold': () => {\n        return styleInfo['font-bold'] === 'bold';\n      },\n      '.note-btn-italic': () => {\n        return styleInfo['font-italic'] === 'italic';\n      },\n      '.note-btn-underline': () => {\n        return styleInfo['font-underline'] === 'underline';\n      },\n      '.note-btn-subscript': () => {\n        return styleInfo['font-subscript'] === 'subscript';\n      },\n      '.note-btn-superscript': () => {\n        return styleInfo['font-superscript'] === 'superscript';\n      },\n      '.note-btn-strikethrough': () => {\n        return styleInfo['font-strikethrough'] === 'strikethrough';\n      },\n    });\n\n    if (styleInfo['font-family']) {\n      const fontNames = styleInfo['font-family'].split(',').map((name) => {\n        return name.replace(/[\\'\\\"]/g, '')\n          .replace(/\\s+$/, '')\n          .replace(/^\\s+/, '');\n      });\n      const fontName = lists.find(fontNames, this.isFontInstalled.bind(this));\n\n      $cont.find('.dropdown-fontname a').each((idx, item) => {\n        const $item = $(item);\n        // always compare string to avoid creating another func.\n        const isChecked = ($item.data('value') + '') === (fontName + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontname').text(fontName).css('font-family', fontName);\n    }\n\n    if (styleInfo['font-size']) {\n      const fontSize = styleInfo['font-size'];\n      $cont.find('.dropdown-fontsize a').each((idx, item) => {\n        const $item = $(item);\n        // always compare with string to avoid creating another func.\n        const isChecked = ($item.data('value') + '') === (fontSize + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontsize').text(fontSize);\n\n      const fontSizeUnit = styleInfo['font-size-unit'];\n      $cont.find('.dropdown-fontsizeunit a').each((idx, item) => {\n        const $item = $(item);\n        const isChecked = ($item.data('value') + '') === (fontSizeUnit + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontsizeunit').text(fontSizeUnit);\n    }\n\n    if (styleInfo['line-height']) {\n      const lineHeight = styleInfo['line-height'];\n      $cont.find('.dropdown-line-height li a').each((idx, item) => {\n        // always compare with string to avoid creating another func.\n        const isChecked = ($(item).data('value') + '') === (lineHeight + '');\n        this.className = isChecked ? 'checked' : '';\n      });\n    }\n  }\n\n  updateBtnStates($container, infos) {\n    $.each(infos, (selector, pred) => {\n      this.ui.toggleBtnActive($container.find(selector), pred());\n    });\n  }\n\n  tableMoveHandler(event) {\n    const PX_PER_EM = 18;\n    const $picker = $(event.target.parentNode); // target is mousecatcher\n    const $dimensionDisplay = $picker.next();\n    const $catcher = $picker.find('.note-dimension-picker-mousecatcher');\n    const $highlighted = $picker.find('.note-dimension-picker-highlighted');\n    const $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\n\n    let posOffset;\n    // HTML5 with jQuery - e.offsetX is undefined in Firefox\n    if (event.offsetX === undefined) {\n      const posCatcher = $(event.target).offset();\n      posOffset = {\n        x: event.pageX - posCatcher.left,\n        y: event.pageY - posCatcher.top,\n      };\n    } else {\n      posOffset = {\n        x: event.offsetX,\n        y: event.offsetY,\n      };\n    }\n\n    const dim = {\n      c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\n      r: Math.ceil(posOffset.y / PX_PER_EM) || 1,\n    };\n\n    $highlighted.css({ width: dim.c + 'em', height: dim.r + 'em' });\n    $catcher.data('value', dim.c + 'x' + dim.r);\n\n    if (dim.c > 3 && dim.c < this.options.insertTableMaxSize.col) {\n      $unhighlighted.css({ width: dim.c + 1 + 'em' });\n    }\n\n    if (dim.r > 3 && dim.r < this.options.insertTableMaxSize.row) {\n      $unhighlighted.css({ height: dim.r + 1 + 'em' });\n    }\n\n    $dimensionDisplay.html(dim.c + ' x ' + dim.r);\n  }\n}\n","import $ from 'jquery';\nexport default class Toolbar {\n  constructor(context) {\n    this.context = context;\n\n    this.$window = $(window);\n    this.$document = $(document);\n\n    this.ui = $.summernote.ui;\n    this.$note = context.layoutInfo.note;\n    this.$editor = context.layoutInfo.editor;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.$editable = context.layoutInfo.editable;\n    this.$statusbar = context.layoutInfo.statusbar;\n    this.options = context.options;\n\n    this.isFollowing = false;\n    this.followScroll = this.followScroll.bind(this);\n  }\n\n  shouldInitialize() {\n    return !this.options.airMode;\n  }\n\n  initialize() {\n    this.options.toolbar = this.options.toolbar || [];\n\n    if (!this.options.toolbar.length) {\n      this.$toolbar.hide();\n    } else {\n      this.context.invoke('buttons.build', this.$toolbar, this.options.toolbar);\n    }\n\n    if (this.options.toolbarContainer) {\n      this.$toolbar.appendTo(this.options.toolbarContainer);\n    }\n\n    this.changeContainer(false);\n\n    this.$note.on('summernote.keyup summernote.mouseup summernote.change', () => {\n      this.context.invoke('buttons.updateCurrentStyle');\n    });\n\n    this.context.invoke('buttons.updateCurrentStyle');\n    if (this.options.followingToolbar) {\n      this.$window.on('scroll resize', this.followScroll);\n    }\n  }\n\n  destroy() {\n    this.$toolbar.children().remove();\n\n    if (this.options.followingToolbar) {\n      this.$window.off('scroll resize', this.followScroll);\n    }\n  }\n\n  followScroll() {\n    if (this.$editor.hasClass('fullscreen')) {\n      return false;\n    }\n\n    const editorHeight = this.$editor.outerHeight();\n    const editorWidth = this.$editor.width();\n    const toolbarHeight = this.$toolbar.height();\n    const statusbarHeight = this.$statusbar.height();\n\n    // check if the web app is currently using another static bar\n    let otherBarHeight = 0;\n    if (this.options.otherStaticBar) {\n      otherBarHeight = $(this.options.otherStaticBar).outerHeight();\n    }\n\n    const currentOffset = this.$document.scrollTop();\n    const editorOffsetTop = this.$editor.offset().top;\n    const editorOffsetBottom = editorOffsetTop + editorHeight;\n    const activateOffset = editorOffsetTop - otherBarHeight;\n    const deactivateOffsetBottom = editorOffsetBottom - otherBarHeight - toolbarHeight - statusbarHeight;\n\n    if (!this.isFollowing &&\n      (currentOffset > activateOffset) && (currentOffset < deactivateOffsetBottom - toolbarHeight)) {\n      this.isFollowing = true;\n      this.$editable.css({\n        marginTop: this.$toolbar.outerHeight(),\n      });\n      this.$toolbar.css({\n        position: 'fixed',\n        top: otherBarHeight,\n        width: editorWidth,\n        zIndex: 1000,\n      });\n    } else if (this.isFollowing &&\n      ((currentOffset < activateOffset) || (currentOffset > deactivateOffsetBottom))) {\n      this.isFollowing = false;\n      this.$toolbar.css({\n        position: 'relative',\n        top: 0,\n        width: '100%',\n        zIndex: 'auto',\n      });\n      this.$editable.css({\n        marginTop: '',\n      });\n    }\n  }\n\n  changeContainer(isFullscreen) {\n    if (isFullscreen) {\n      this.$toolbar.prependTo(this.$editor);\n    } else {\n      if (this.options.toolbarContainer) {\n        this.$toolbar.appendTo(this.options.toolbarContainer);\n      }\n    }\n    if (this.options.followingToolbar) {\n      this.followScroll();\n    }\n  }\n\n  updateFullscreen(isFullscreen) {\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-fullscreen'), isFullscreen);\n\n    this.changeContainer(isFullscreen);\n  }\n\n  updateCodeview(isCodeview) {\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-codeview'), isCodeview);\n    if (isCodeview) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  }\n\n  activate(isIncludeCodeview) {\n    let $btn = this.$toolbar.find('button');\n    if (!isIncludeCodeview) {\n      $btn = $btn.not('.note-codeview-keep');\n    }\n    this.ui.toggleBtn($btn, true);\n  }\n\n  deactivate(isIncludeCodeview) {\n    let $btn = this.$toolbar.find('button');\n    if (!isIncludeCodeview) {\n      $btn = $btn.not('.note-codeview-keep');\n    }\n    this.ui.toggleBtn($btn, false);\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\nimport func from '../core/func';\n\nexport default class LinkDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    context.memo('help.linkDialog.show', this.options.langInfo.help['linkDialog.show']);\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group\">',\n        `<label for=\"note-dialog-link-txt-${this.options.id}\" class=\"note-form-label\">${this.lang.link.textToDisplay}</label>`,\n        `<input id=\"note-dialog-link-txt-${this.options.id}\" class=\"note-link-text form-control note-form-control note-input\" type=\"text\"/>`,\n      '</div>',\n      '<div class=\"form-group note-form-group\">',\n        `<label for=\"note-dialog-link-url-${this.options.id}\" class=\"note-form-label\">${this.lang.link.url}</label>`,\n        `<input id=\"note-dialog-link-url-${this.options.id}\" class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\"/>`,\n      '</div>',\n      !this.options.disableLinkTarget\n        ? $('<div/>').append(this.ui.checkbox({\n          className: 'sn-checkbox-open-in-new-window',\n          text: this.lang.link.openInNewWindow,\n          checked: true,\n        }).render()).html()\n        : '',\n      $('<div/>').append(this.ui.checkbox({\n        className: 'sn-checkbox-use-protocol',\n        text: this.lang.link.useProtocol,\n        checked: true,\n      }).render()).html(),\n    ].join('');\n\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-link-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.link.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      className: 'link-dialog',\n      title: this.lang.link.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  /**\n   * toggle update button\n   */\n  toggleLinkBtn($linkBtn, $linkText, $linkUrl) {\n    this.ui.toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\n  }\n\n  /**\n   * Show link dialog and set event handlers on dialog controls.\n   *\n   * @param {Object} linkInfo\n   * @return {Promise}\n   */\n  showLinkDialog(linkInfo) {\n    return $.Deferred((deferred) => {\n      const $linkText = this.$dialog.find('.note-link-text');\n      const $linkUrl = this.$dialog.find('.note-link-url');\n      const $linkBtn = this.$dialog.find('.note-link-btn');\n      const $openInNewWindow = this.$dialog\n        .find('.sn-checkbox-open-in-new-window input[type=checkbox]');\n      const $useProtocol = this.$dialog\n        .find('.sn-checkbox-use-protocol input[type=checkbox]');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        // If no url was given and given text is valid URL then copy that into URL Field\n        if (!linkInfo.url && func.isValidUrl(linkInfo.text)) {\n          linkInfo.url = linkInfo.text;\n        }\n\n        $linkText.on('input paste propertychange', () => {\n          // If linktext was modified by input events,\n          // cloning text from linkUrl will be stopped.\n          linkInfo.text = $linkText.val();\n          this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        }).val(linkInfo.text);\n\n        $linkUrl.on('input paste propertychange', () => {\n          // Display same text on `Text to display` as default\n          // when linktext has no text\n          if (!linkInfo.text) {\n            $linkText.val($linkUrl.val());\n          }\n          this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        }).val(linkInfo.url);\n\n        if (!env.isSupportTouch) {\n          $linkUrl.trigger('focus');\n        }\n\n        this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        this.bindEnterKey($linkUrl, $linkBtn);\n        this.bindEnterKey($linkText, $linkBtn);\n\n        const isNewWindowChecked = linkInfo.isNewWindow !== undefined\n          ? linkInfo.isNewWindow : this.context.options.linkTargetBlank;\n\n        $openInNewWindow.prop('checked', isNewWindowChecked);\n\n        const useProtocolChecked = linkInfo.url\n          ? false : this.context.options.useProtocol;\n\n        $useProtocol.prop('checked', useProtocolChecked);\n\n        $linkBtn.one('click', (event) => {\n          event.preventDefault();\n\n          deferred.resolve({\n            range: linkInfo.range,\n            url: $linkUrl.val(),\n            text: $linkText.val(),\n            isNewWindow: $openInNewWindow.is(':checked'),\n            checkProtocol: $useProtocol.is(':checked'),\n          });\n          this.ui.hideDialog(this.$dialog);\n        });\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        // detach events\n        $linkText.off();\n        $linkUrl.off();\n        $linkBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    }).promise();\n  }\n\n  /**\n   * @param {Object} layoutInfo\n   */\n  show() {\n    const linkInfo = this.context.invoke('editor.getLinkInfo');\n\n    this.context.invoke('editor.saveRange');\n    this.showLinkDialog(linkInfo).then((linkInfo) => {\n      this.context.invoke('editor.restoreRange');\n      this.context.invoke('editor.createLink', linkInfo);\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class LinkPopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n    this.events = {\n      'summernote.keyup summernote.mouseup summernote.change summernote.scroll': () => {\n        this.update();\n      },\n      'summernote.disable summernote.dialog.shown summernote.blur': () => {\n        this.hide();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.link);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-link-popover',\n      callback: ($node) => {\n        const $content = $node.find('.popover-content,.note-popover-content');\n        $content.prepend('<span><a target=\"_blank\"></a>&nbsp;</span>');\n      },\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.link);\n\n    this.$popover.on('mousedown', (e) => { e.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update() {\n    // Prevent focusing on editable when invoke('code') is executed\n    if (!this.context.invoke('editor.hasFocus')) {\n      this.hide();\n      return;\n    }\n\n    const rng = this.context.invoke('editor.getLastRange');\n    if (rng.isCollapsed() && rng.isOnAnchor()) {\n      const anchor = dom.ancestor(rng.sc, dom.isAnchor);\n      const href = $(anchor).attr('href');\n      this.$popover.find('a').attr('href', href).text(href);\n\n      const pos = dom.posFromPlaceholder(anchor);\n      const containerOffset = $(this.options.container).offset();\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\n\nexport default class ImageDialog {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    let imageLimitation = '';\n    if (this.options.maximumImageFileSize) {\n      const unit = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024));\n      const readableSize = (this.options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 +\n                         ' ' + ' KMGTP'[unit] + 'B';\n      imageLimitation = `<small>${this.lang.image.maximumFileSize + ' : ' + readableSize}</small>`;\n    }\n\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group note-group-select-from-files\">',\n        '<label for=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.selectFromFiles + '</label>',\n        '<input id=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-image-input form-control-file note-form-control note-input\" ',\n        ' type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\"/>',\n        imageLimitation,\n      '</div>',\n      '<div class=\"form-group note-group-image-url\">',\n        '<label for=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.url + '</label>',\n        '<input id=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>',\n      '</div>',\n    ].join('');\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-image-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.image.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.image.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  show() {\n    this.context.invoke('editor.saveRange');\n    this.showImageDialog().then((data) => {\n      // [workaround] hide dialog before restore range for IE range focus\n      this.ui.hideDialog(this.$dialog);\n      this.context.invoke('editor.restoreRange');\n\n      if (typeof data === 'string') { // image url\n        // If onImageLinkInsert set,\n        if (this.options.callbacks.onImageLinkInsert) {\n          this.context.triggerEvent('image.link.insert', data);\n        } else {\n          this.context.invoke('editor.insertImage', data);\n        }\n      } else { // array of files\n        this.context.invoke('editor.insertImagesOrCallback', data);\n      }\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n\n  /**\n   * show image dialog\n   *\n   * @param {jQuery} $dialog\n   * @return {Promise}\n   */\n  showImageDialog() {\n    return $.Deferred((deferred) => {\n      const $imageInput = this.$dialog.find('.note-image-input');\n      const $imageUrl = this.$dialog.find('.note-image-url');\n      const $imageBtn = this.$dialog.find('.note-image-btn');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        // Cloning imageInput to clear element.\n        $imageInput.replaceWith($imageInput.clone().on('change', (event) => {\n          deferred.resolve(event.target.files || event.target.value);\n        }).val(''));\n\n        $imageUrl.on('input paste propertychange', () => {\n          this.ui.toggleBtn($imageBtn, $imageUrl.val());\n        }).val('');\n\n        if (!env.isSupportTouch) {\n          $imageUrl.trigger('focus');\n        }\n\n        $imageBtn.click((event) => {\n          event.preventDefault();\n          deferred.resolve($imageUrl.val());\n        });\n\n        this.bindEnterKey($imageUrl, $imageBtn);\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        $imageInput.off();\n        $imageUrl.off();\n        $imageBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\n/**\n * Image popover module\n *  mouse events that show/hide popover will be handled by Handle.js.\n *  Handle.js will receive the events and invoke 'imagePopover.update'.\n */\nexport default class ImagePopover {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n\n    this.editable = context.layoutInfo.editable[0];\n    this.options = context.options;\n\n    this.events = {\n      'summernote.disable summernote.blur': () => {\n        this.hide();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.image);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-image-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n    this.context.invoke('buttons.build', $content, this.options.popover.image);\n\n    this.$popover.on('mousedown', (e) => { e.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(target, event) {\n    if (dom.isImg(target)) {\n      const position = $(target).offset();\n      const containerOffset = $(this.options.container).offset();\n      let pos = {};\n      if (this.options.popatmouse) {\n        pos.left = event.pageX - 20;\n        pos.top = event.pageY;\n      } else {\n        pos = position;\n      }\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class TablePopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n    this.events = {\n      'summernote.mousedown': (we, e) => {\n        this.update(e.target);\n      },\n      'summernote.keyup summernote.scroll summernote.change': () => {\n        this.update();\n      },\n      'summernote.disable summernote.blur': () => {\n        this.hide();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.table);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-table-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.table);\n\n    // [workaround] Disable Firefox's default table editor\n    if (env.isFF) {\n      document.execCommand('enableInlineTableEditing', false, false);\n    }\n\n    this.$popover.on('mousedown', (e) => { e.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(target) {\n    if (this.context.isDisabled()) {\n      return false;\n    }\n\n    const isCell = dom.isCell(target);\n\n    if (isCell) {\n      const pos = dom.posFromPlaceholder(target);\n      const containerOffset = $(this.options.container).offset();\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n\n    return isCell;\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\n\nexport default class VideoDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group row-fluid\">',\n        `<label for=\"note-dialog-video-url-${this.options.id}\" class=\"note-form-label\">${this.lang.video.url} <small class=\"text-muted\">${this.lang.video.providers}</small></label>`,\n        `<input id=\"note-dialog-video-url-${this.options.id}\" class=\"note-video-url form-control note-form-control note-input\" type=\"text\"/>`,\n      '</div>',\n    ].join('');\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-video-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.video.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.video.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  createVideoNode(url) {\n    // video url patterns(youtube, instagram, vimeo, dailymotion, youku, mp4, ogg, webm)\n    const ytRegExp = /\\/\\/(?:(?:www|m)\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/;\n    const ytRegExpForStart = /^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/;\n    const ytMatch = url.match(ytRegExp);\n\n    const igRegExp = /(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/;\n    const igMatch = url.match(igRegExp);\n\n    const vRegExp = /\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/;\n    const vMatch = url.match(vRegExp);\n\n    const vimRegExp = /\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/;\n    const vimMatch = url.match(vimRegExp);\n\n    const dmRegExp = /.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/;\n    const dmMatch = url.match(dmRegExp);\n\n    const youkuRegExp = /\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/;\n    const youkuMatch = url.match(youkuRegExp);\n\n    const qqRegExp = /\\/\\/v\\.qq\\.com.*?vid=(.+)/;\n    const qqMatch = url.match(qqRegExp);\n\n    const qqRegExp2 = /\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/;\n    const qqMatch2 = url.match(qqRegExp2);\n\n    const mp4RegExp = /^.+.(mp4|m4v)$/;\n    const mp4Match = url.match(mp4RegExp);\n\n    const oggRegExp = /^.+.(ogg|ogv)$/;\n    const oggMatch = url.match(oggRegExp);\n\n    const webmRegExp = /^.+.(webm)$/;\n    const webmMatch = url.match(webmRegExp);\n\n    const fbRegExp = /(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/;\n    const fbMatch = url.match(fbRegExp);\n\n    let $video;\n    if (ytMatch && ytMatch[1].length === 11) {\n      const youtubeId = ytMatch[1];\n      var start = 0;\n      if (typeof ytMatch[2] !== 'undefined') {\n        const ytMatchForStart = ytMatch[2].match(ytRegExpForStart);\n        if (ytMatchForStart) {\n          for (var n = [3600, 60, 1], i = 0, r = n.length; i < r; i++) {\n            start += (typeof ytMatchForStart[i + 1] !== 'undefined' ? n[i] * parseInt(ytMatchForStart[i + 1], 10) : 0);\n          }\n        }\n      }\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', '//www.youtube.com/embed/' + youtubeId + (start > 0 ? '?start=' + start : ''))\n        .attr('width', '640').attr('height', '360');\n    } else if (igMatch && igMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', 'https://instagram.com/p/' + igMatch[1] + '/embed/')\n        .attr('width', '612').attr('height', '710')\n        .attr('scrolling', 'no')\n        .attr('allowtransparency', 'true');\n    } else if (vMatch && vMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', vMatch[0] + '/embed/simple')\n        .attr('width', '600').attr('height', '600')\n        .attr('class', 'vine-embed');\n    } else if (vimMatch && vimMatch[3].length) {\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('src', '//player.vimeo.com/video/' + vimMatch[3])\n        .attr('width', '640').attr('height', '360');\n    } else if (dmMatch && dmMatch[2].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', '//www.dailymotion.com/embed/video/' + dmMatch[2])\n        .attr('width', '640').attr('height', '360');\n    } else if (youkuMatch && youkuMatch[1].length) {\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('height', '498')\n        .attr('width', '510')\n        .attr('src', '//player.youku.com/embed/' + youkuMatch[1]);\n    } else if ((qqMatch && qqMatch[1].length) || (qqMatch2 && qqMatch2[2].length)) {\n      const vid = ((qqMatch && qqMatch[1].length) ? qqMatch[1] : qqMatch2[2]);\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('height', '310')\n        .attr('width', '500')\n        .attr('src', 'https://v.qq.com/txp/iframe/player.html?vid=' + vid + '&amp;auto=0');\n    } else if (mp4Match || oggMatch || webmMatch) {\n      $video = $('<video controls>')\n        .attr('src', url)\n        .attr('width', '640').attr('height', '360');\n    } else if (fbMatch && fbMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(fbMatch[0]) + '&show_text=0&width=560')\n        .attr('width', '560').attr('height', '301')\n        .attr('scrolling', 'no')\n        .attr('allowtransparency', 'true');\n    } else {\n      // this is not a known video link. Now what, Cat? Now what?\n      return false;\n    }\n\n    $video.addClass('note-video-clip');\n\n    return $video[0];\n  }\n\n  show() {\n    const text = this.context.invoke('editor.getSelectedText');\n    this.context.invoke('editor.saveRange');\n    this.showVideoDialog(text).then((url) => {\n      // [workaround] hide dialog before restore range for IE range focus\n      this.ui.hideDialog(this.$dialog);\n      this.context.invoke('editor.restoreRange');\n\n      // build node\n      const $node = this.createVideoNode(url);\n\n      if ($node) {\n        // insert video node\n        this.context.invoke('editor.insertNode', $node);\n      }\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n\n  /**\n   * show video dialog\n   *\n   * @param {jQuery} $dialog\n   * @return {Promise}\n   */\n  showVideoDialog(/* text */) {\n    return $.Deferred((deferred) => {\n      const $videoUrl = this.$dialog.find('.note-video-url');\n      const $videoBtn = this.$dialog.find('.note-video-btn');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        $videoUrl.on('input paste propertychange', () => {\n          this.ui.toggleBtn($videoBtn, $videoUrl.val());\n        });\n\n        if (!env.isSupportTouch) {\n          $videoUrl.trigger('focus');\n        }\n\n        $videoBtn.click((event) => {\n          event.preventDefault();\n          deferred.resolve($videoUrl.val());\n        });\n\n        this.bindEnterKey($videoUrl, $videoBtn);\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        $videoUrl.off();\n        $videoBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    });\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\n\nexport default class HelpDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<p class=\"text-center\">',\n        '<a href=\"http://summernote.org/\" target=\"_blank\">Summernote @@VERSION@@</a> · ',\n        '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\">Project</a> · ',\n        '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>',\n      '</p>',\n    ].join('');\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.options.help,\n      fade: this.options.dialogsFade,\n      body: this.createShortcutList(),\n      footer: body,\n      callback: ($node) => {\n        $node.find('.modal-body,.note-modal-body').css({\n          'max-height': 300,\n          'overflow': 'scroll',\n        });\n      },\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  createShortcutList() {\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n    return Object.keys(keyMap).map((key) => {\n      const command = keyMap[key];\n      const $row = $('<div><div class=\"help-list-item\"></div></div>');\n      $row.append($('<label><kbd>' + key + '</kdb></label>').css({\n        'width': 180,\n        'margin-right': 10,\n      })).append($('<span/>').html(this.context.memo('help.' + command) || command));\n      return $row.html();\n    }).join('');\n  }\n\n  /**\n   * show help dialog\n   *\n   * @return {Promise}\n   */\n  showHelpDialog() {\n    return $.Deferred((deferred) => {\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n        deferred.resolve();\n      });\n      this.ui.showDialog(this.$dialog);\n    }).promise();\n  }\n\n  show() {\n    this.context.invoke('editor.saveRange');\n    this.showHelpDialog().then(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\n\nconst AIRMODE_POPOVER_X_OFFSET = -5;\nconst AIRMODE_POPOVER_Y_OFFSET = 5;\n\nexport default class AirPopover {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n\n    this.hidable = true;\n    this.onContextmenu = false;\n    this.pageX = null;\n    this.pageY = null;\n\n    this.events = {\n      'summernote.contextmenu': (e) => {\n        if (this.options.editing) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.onContextmenu = true;\n          this.update(true);\n        }\n      },\n      'summernote.mousedown': (we, e) => {\n        this.pageX = e.pageX;\n        this.pageY = e.pageY;\n      },\n      'summernote.keyup summernote.mouseup summernote.scroll': (we, e) => {\n        if (this.options.editing && !this.onContextmenu) {\n          this.pageX = e.pageX;\n          this.pageY = e.pageY;\n          this.update();\n        }\n        this.onContextmenu = false;\n      },\n      'summernote.disable summernote.change summernote.dialog.shown summernote.blur': () => {\n        this.hide();\n      },\n      'summernote.focusout': () => {\n        if (!this.$popover.is(':active,:focus')) {\n          this.hide();\n        }\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return this.options.airMode && !lists.isEmpty(this.options.popover.air);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-air-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.air);\n\n    // disable hiding this popover preemptively by 'summernote.blur' event.\n    this.$popover.on('mousedown', () => { this.hidable = false; });\n    // (re-)enable hiding after 'summernote.blur' has been handled (aka. ignored).\n    this.$popover.on('mouseup', () => { this.hidable = true; });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(forcelyOpen) {\n    const styleInfo = this.context.invoke('editor.currentStyle');\n    if (styleInfo.range && (!styleInfo.range.isCollapsed() || forcelyOpen)) {\n      let rect = {\n        left: this.pageX,\n        top: this.pageY,\n      };\n\n      const containerOffset = $(this.options.container).offset();\n      rect.top -= containerOffset.top;\n      rect.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: Math.max(rect.left, 0) + AIRMODE_POPOVER_X_OFFSET,\n        top: rect.top + AIRMODE_POPOVER_Y_OFFSET,\n      });\n      this.context.invoke('buttons.updateCurrentStyle', this.$popover);\n    } else {\n      this.hide();\n    }\n  }\n\n  updateCodeview(isCodeview) {\n    this.ui.toggleBtnActive(this.$popover.find('.btn-codeview'), isCodeview);\n    if (isCodeview) {\n      this.hide();\n    } \n  }\n\n  hide() {\n    if (this.hidable) {\n      this.$popover.hide();\n    }\n  }\n}\n","import $ from 'jquery';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport key from '../core/key';\n\nconst POPOVER_DIST = 5;\n\nexport default class HintPopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.hint = this.options.hint || [];\n    this.direction = this.options.hintDirection || 'bottom';\n    this.hints = Array.isArray(this.hint) ? this.hint : [this.hint];\n\n    this.events = {\n      'summernote.keyup': (we, e) => {\n        if (!e.isDefaultPrevented()) {\n          this.handleKeyup(e);\n        }\n      },\n      'summernote.keydown': (we, e) => {\n        this.handleKeydown(e);\n      },\n      'summernote.disable summernote.dialog.shown summernote.blur': () => {\n        this.hide();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return this.hints.length > 0;\n  }\n\n  initialize() {\n    this.lastWordRange = null;\n    this.matchingWord = null;\n    this.$popover = this.ui.popover({\n      className: 'note-hint-popover',\n      hideArrow: true,\n      direction: '',\n    }).render().appendTo(this.options.container);\n\n    this.$popover.hide();\n    this.$content = this.$popover.find('.popover-content,.note-popover-content');\n    this.$content.on('click', '.note-hint-item', (e) => {\n      this.$content.find('.active').removeClass('active');\n      $(e.currentTarget).addClass('active');\n      this.replace();\n    });\n\n    this.$popover.on('mousedown', (e) => { e.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  selectItem($item) {\n    this.$content.find('.active').removeClass('active');\n    $item.addClass('active');\n\n    this.$content[0].scrollTop = $item[0].offsetTop - (this.$content.innerHeight() / 2);\n  }\n\n  moveDown() {\n    const $current = this.$content.find('.note-hint-item.active');\n    const $next = $current.next();\n\n    if ($next.length) {\n      this.selectItem($next);\n    } else {\n      let $nextGroup = $current.parent().next();\n\n      if (!$nextGroup.length) {\n        $nextGroup = this.$content.find('.note-hint-group').first();\n      }\n\n      this.selectItem($nextGroup.find('.note-hint-item').first());\n    }\n  }\n\n  moveUp() {\n    const $current = this.$content.find('.note-hint-item.active');\n    const $prev = $current.prev();\n\n    if ($prev.length) {\n      this.selectItem($prev);\n    } else {\n      let $prevGroup = $current.parent().prev();\n\n      if (!$prevGroup.length) {\n        $prevGroup = this.$content.find('.note-hint-group').last();\n      }\n\n      this.selectItem($prevGroup.find('.note-hint-item').last());\n    }\n  }\n\n  replace() {\n    const $item = this.$content.find('.note-hint-item.active');\n\n    if ($item.length) {\n      var node = this.nodeFromItem($item);\n      // If matchingWord length = 0 -> capture OK / open hint / but as mention capture \"\" (\\w*)\n      if (this.matchingWord !== null && this.matchingWord.length === 0) {\n        this.lastWordRange.so = this.lastWordRange.eo;\n      // Else si > 0 and normal case -> adjust range \"before\" for correct position of insertion\n      } else if (this.matchingWord !== null && this.matchingWord.length > 0 && !this.lastWordRange.isCollapsed()) {\n        let rangeCompute = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;\n        if (rangeCompute > 0) {\n          this.lastWordRange.so += rangeCompute;\n        }\n      }\n      this.lastWordRange.insertNode(node);\n\n      if (this.options.hintSelect === 'next') {\n        var blank = document.createTextNode('');\n        $(node).after(blank);\n        range.createFromNodeBefore(blank).select();\n      } else {\n        range.createFromNodeAfter(node).select();\n      }\n\n      this.lastWordRange = null;\n      this.hide();\n      this.context.invoke('editor.focus');\n    }\n  }\n\n  nodeFromItem($item) {\n    const hint = this.hints[$item.data('index')];\n    const item = $item.data('item');\n    let node = hint.content ? hint.content(item) : item;\n    if (typeof node === 'string') {\n      node = dom.createText(node);\n    }\n    return node;\n  }\n\n  createItemTemplates(hintIdx, items) {\n    const hint = this.hints[hintIdx];\n    return items.map((item /*, idx */) => {\n      const $item = $('<div class=\"note-hint-item\"/>');\n      $item.append(hint.template ? hint.template(item) : item + '');\n      $item.data({\n        'index': hintIdx,\n        'item': item,\n      });\n      return $item;\n    });\n  }\n\n  handleKeydown(e) {\n    if (!this.$popover.is(':visible')) {\n      return;\n    }\n\n    if (e.keyCode === key.code.ENTER) {\n      e.preventDefault();\n      this.replace();\n    } else if (e.keyCode === key.code.UP) {\n      e.preventDefault();\n      this.moveUp();\n    } else if (e.keyCode === key.code.DOWN) {\n      e.preventDefault();\n      this.moveDown();\n    }\n  }\n\n  searchKeyword(index, keyword, callback) {\n    const hint = this.hints[index];\n    if (hint && hint.match.test(keyword) && hint.search) {\n      const matches = hint.match.exec(keyword);\n      this.matchingWord = matches[0];\n      hint.search(matches[1], callback);\n    } else {\n      callback();\n    }\n  }\n\n  createGroup(idx, keyword) {\n    const $group = $('<div class=\"note-hint-group note-hint-group-' + idx + '\"></div>');\n    this.searchKeyword(idx, keyword, (items) => {\n      items = items || [];\n      if (items.length) {\n        $group.html(this.createItemTemplates(idx, items));\n        this.show();\n      }\n    });\n\n    return $group;\n  }\n\n  handleKeyup(e) {\n    if (!lists.contains([key.code.ENTER, key.code.UP, key.code.DOWN], e.keyCode)) {\n      let range = this.context.invoke('editor.getLastRange');\n      let wordRange, keyword;\n      if (this.options.hintMode === 'words') {\n        wordRange = range.getWordsRange(range);\n        keyword = wordRange.toString();\n\n        this.hints.forEach((hint) => {\n          if (hint.match.test(keyword)) {\n            wordRange = range.getWordsMatchRange(hint.match);\n            return false;\n          }\n        });\n\n        if (!wordRange) {\n          this.hide();\n          return;\n        }\n\n        keyword = wordRange.toString();\n      } else {\n        wordRange = range.getWordRange();\n        keyword = wordRange.toString();\n      }\n\n      if (this.hints.length && keyword) {\n        this.$content.empty();\n\n        const bnd = func.rect2bnd(lists.last(wordRange.getClientRects()));\n        const containerOffset = $(this.options.container).offset();\n        if (bnd) {\n          bnd.top -= containerOffset.top;\n          bnd.left -= containerOffset.left;\n\n          this.$popover.hide();\n          this.lastWordRange = wordRange;\n          this.hints.forEach((hint, idx) => {\n            if (hint.match.test(keyword)) {\n              this.createGroup(idx, keyword).appendTo(this.$content);\n            }\n          });\n          // select first .note-hint-item\n          this.$content.find('.note-hint-item:first').addClass('active');\n\n          // set position for popover after group is created\n          if (this.direction === 'top') {\n            this.$popover.css({\n              left: bnd.left,\n              top: bnd.top - this.$popover.outerHeight() - POPOVER_DIST,\n            });\n          } else {\n            this.$popover.css({\n              left: bnd.left,\n              top: bnd.top + bnd.height + POPOVER_DIST,\n            });\n          }\n        }\n      } else {\n        this.hide();\n      }\n    }\n  }\n\n  show() {\n    this.$popover.show();\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport './summernote-en-US';\nimport '../summernote';\nimport dom from './core/dom';\nimport range from './core/range';\nimport lists from './core/lists';\nimport Editor from './module/Editor';\nimport Clipboard from './module/Clipboard';\nimport Dropzone from './module/Dropzone';\nimport Codeview from './module/Codeview';\nimport Statusbar from './module/Statusbar';\nimport Fullscreen from './module/Fullscreen';\nimport Handle from './module/Handle';\nimport AutoLink from './module/AutoLink';\nimport AutoSync from './module/AutoSync';\nimport AutoReplace from './module/AutoReplace';\nimport Placeholder from './module/Placeholder';\nimport Buttons from './module/Buttons';\nimport Toolbar from './module/Toolbar';\nimport LinkDialog from './module/LinkDialog';\nimport LinkPopover from './module/LinkPopover';\nimport ImageDialog from './module/ImageDialog';\nimport ImagePopover from './module/ImagePopover';\nimport TablePopover from './module/TablePopover';\nimport VideoDialog from './module/VideoDialog';\nimport HelpDialog from './module/HelpDialog';\nimport AirPopover from './module/AirPopover';\nimport HintPopover from './module/HintPopover';\n\n$.summernote = $.extend($.summernote, {\n  version: '@@VERSION@@',\n  plugins: {},\n\n  dom: dom,\n  range: range,\n  lists: lists,\n\n  options: {\n    langInfo: $.summernote.lang['en-US'],\n    editing: true,\n    modules: {\n      'editor': Editor,\n      'clipboard': Clipboard,\n      'dropzone': Dropzone,\n      'codeview': Codeview,\n      'statusbar': Statusbar,\n      'fullscreen': Fullscreen,\n      'handle': Handle,\n      // FIXME: HintPopover must be front of autolink\n      //  - Script error about range when Enter key is pressed on hint popover\n      'hintPopover': HintPopover,\n      'autoLink': AutoLink,\n      'autoSync': AutoSync,\n      'autoReplace': AutoReplace,\n      'placeholder': Placeholder,\n      'buttons': Buttons,\n      'toolbar': Toolbar,\n      'linkDialog': LinkDialog,\n      'linkPopover': LinkPopover,\n      'imageDialog': ImageDialog,\n      'imagePopover': ImagePopover,\n      'tablePopover': TablePopover,\n      'videoDialog': VideoDialog,\n      'helpDialog': HelpDialog,\n      'airPopover': AirPopover,\n    },\n\n    buttons: {},\n\n    lang: 'en-US',\n\n    followingToolbar: false,\n    toolbarPosition: 'top',\n    otherStaticBar: '',\n\n    // toolbar\n    codeviewKeepButton: false,\n    toolbar: [\n      ['style', ['style']],\n      ['font', ['bold', 'underline', 'clear']],\n      ['fontname', ['fontname']],\n      ['color', ['color']],\n      ['para', ['ul', 'ol', 'paragraph']],\n      ['table', ['table']],\n      ['insert', ['link', 'picture', 'video']],\n      ['view', ['fullscreen', 'codeview', 'help']],\n    ],\n\n    // popover\n    popatmouse: true,\n    popover: {\n      image: [\n        ['resize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\n        ['float', ['floatLeft', 'floatRight', 'floatNone']],\n        ['remove', ['removeMedia']],\n      ],\n      link: [\n        ['link', ['linkDialogShow', 'unlink']],\n      ],\n      table: [\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\n      ],\n      air: [\n        ['color', ['color']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['para', ['ul', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'picture']],\n        ['view', ['fullscreen', 'codeview']],\n      ],\n    },\n\n    // air mode: inline editor\n    airMode: false,\n    overrideContextMenu: false, // TBD\n\n    width: null,\n    height: null,\n    linkTargetBlank: true,\n    useProtocol: true,\n    defaultProtocol: 'http://',\n\n    focus: false,\n    tabDisabled: false,\n    tabSize: 4,\n    styleWithCSS: false,\n    shortcuts: true,\n    textareaAutoSync: true,\n    tooltip: 'auto',\n    container: null,\n    maxTextLength: 0,\n    blockquoteBreakingLevel: 2,\n    spellCheck: true,\n    disableGrammar: false,\n    placeholder: null,\n    inheritPlaceholder: false,\n    // TODO: need to be documented\n    recordEveryKeystroke: false,\n    historyLimit: 200,\n\n    // TODO: need to be documented\n    showDomainOnlyForAutolink: false,\n\n    // TODO: need to be documented\n    hintMode: 'word',\n    hintSelect: 'after',\n    hintDirection: 'bottom',\n\n    styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    fontNames: [\n      'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\n      'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\n      'Tahoma', 'Times New Roman', 'Verdana',\n    ],\n    fontNamesIgnoreCheck: [],\n    addDefaultFonts: true,\n\n    fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n\n    fontSizeUnits: ['px', 'pt'],\n\n    // pallete colors(n x n)\n    colors: [\n      ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],\n      ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],\n      ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'],\n      ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'],\n      ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'],\n      ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'],\n      ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'],\n      ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031'],\n    ],\n\n    // http://chir.ag/projects/name-that-color/\n    colorsName: [\n      ['Black', 'Tundora', 'Dove Gray', 'Star Dust', 'Pale Slate', 'Gallery', 'Alabaster', 'White'],\n      ['Red', 'Orange Peel', 'Yellow', 'Green', 'Cyan', 'Blue', 'Electric Violet', 'Magenta'],\n      ['Azalea', 'Karry', 'Egg White', 'Zanah', 'Botticelli', 'Tropical Blue', 'Mischka', 'Twilight'],\n      ['Tonys Pink', 'Peach Orange', 'Cream Brulee', 'Sprout', 'Casper', 'Perano', 'Cold Purple', 'Careys Pink'],\n      ['Mandy', 'Rajah', 'Dandelion', 'Olivine', 'Gulf Stream', 'Viking', 'Blue Marguerite', 'Puce'],\n      ['Guardsman Red', 'Fire Bush', 'Golden Dream', 'Chelsea Cucumber', 'Smalt Blue', 'Boston Blue', 'Butterfly Bush', 'Cadillac'],\n      ['Sangria', 'Mai Tai', 'Buddha Gold', 'Forest Green', 'Eden', 'Venice Blue', 'Meteorite', 'Claret'],\n      ['Rosewood', 'Cinnamon', 'Olive', 'Parsley', 'Tiber', 'Midnight Blue', 'Valentino', 'Loulou'],\n    ],\n\n    colorButton: {\n      foreColor: '#000000',\n      backColor: '#FFFF00',\n    },\n\n    lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\n\n    tableClassName: 'table table-bordered',\n\n    insertTableMaxSize: {\n      col: 10,\n      row: 10,\n    },\n\n    // By default, dialogs are attached in container.\n    dialogsInBody: false,\n    dialogsFade: false,\n\n    maximumImageFileSize: null,\n\n    callbacks: {\n      onBeforeCommand: null,\n      onBlur: null,\n      onBlurCodeview: null,\n      onChange: null,\n      onChangeCodeview: null,\n      onDialogShown: null,\n      onEnter: null,\n      onFocus: null,\n      onImageLinkInsert: null,\n      onImageUpload: null,\n      onImageUploadError: null,\n      onInit: null,\n      onKeydown: null,\n      onKeyup: null,\n      onMousedown: null,\n      onMouseup: null,\n      onPaste: null,\n      onScroll: null,\n    },\n\n    codemirror: {\n      mode: 'text/html',\n      htmlMode: true,\n      lineNumbers: true,\n    },\n\n    codeviewFilter: false,\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\n    codeviewIframeFilter: true,\n    codeviewIframeWhitelistSrc: [],\n    codeviewIframeWhitelistSrcBase: [\n      'www.youtube.com',\n      'www.youtube-nocookie.com',\n      'www.facebook.com',\n      'vine.co',\n      'instagram.com',\n      'player.vimeo.com',\n      'www.dailymotion.com',\n      'player.youku.com',\n      'v.qq.com',\n    ],\n\n    keyMap: {\n      pc: {\n        'ESC': 'escape',\n        'ENTER': 'insertParagraph',\n        'CTRL+Z': 'undo',\n        'CTRL+Y': 'redo',\n        'TAB': 'tab',\n        'SHIFT+TAB': 'untab',\n        'CTRL+B': 'bold',\n        'CTRL+I': 'italic',\n        'CTRL+U': 'underline',\n        'CTRL+SHIFT+S': 'strikethrough',\n        'CTRL+BACKSLASH': 'removeFormat',\n        'CTRL+SHIFT+L': 'justifyLeft',\n        'CTRL+SHIFT+E': 'justifyCenter',\n        'CTRL+SHIFT+R': 'justifyRight',\n        'CTRL+SHIFT+J': 'justifyFull',\n        'CTRL+SHIFT+NUM7': 'insertUnorderedList',\n        'CTRL+SHIFT+NUM8': 'insertOrderedList',\n        'CTRL+LEFTBRACKET': 'outdent',\n        'CTRL+RIGHTBRACKET': 'indent',\n        'CTRL+NUM0': 'formatPara',\n        'CTRL+NUM1': 'formatH1',\n        'CTRL+NUM2': 'formatH2',\n        'CTRL+NUM3': 'formatH3',\n        'CTRL+NUM4': 'formatH4',\n        'CTRL+NUM5': 'formatH5',\n        'CTRL+NUM6': 'formatH6',\n        'CTRL+ENTER': 'insertHorizontalRule',\n        'CTRL+K': 'linkDialog.show',\n      },\n\n      mac: {\n        'ESC': 'escape',\n        'ENTER': 'insertParagraph',\n        'CMD+Z': 'undo',\n        'CMD+SHIFT+Z': 'redo',\n        'TAB': 'tab',\n        'SHIFT+TAB': 'untab',\n        'CMD+B': 'bold',\n        'CMD+I': 'italic',\n        'CMD+U': 'underline',\n        'CMD+SHIFT+S': 'strikethrough',\n        'CMD+BACKSLASH': 'removeFormat',\n        'CMD+SHIFT+L': 'justifyLeft',\n        'CMD+SHIFT+E': 'justifyCenter',\n        'CMD+SHIFT+R': 'justifyRight',\n        'CMD+SHIFT+J': 'justifyFull',\n        'CMD+SHIFT+NUM7': 'insertUnorderedList',\n        'CMD+SHIFT+NUM8': 'insertOrderedList',\n        'CMD+LEFTBRACKET': 'outdent',\n        'CMD+RIGHTBRACKET': 'indent',\n        'CMD+NUM0': 'formatPara',\n        'CMD+NUM1': 'formatH1',\n        'CMD+NUM2': 'formatH2',\n        'CMD+NUM3': 'formatH3',\n        'CMD+NUM4': 'formatH4',\n        'CMD+NUM5': 'formatH5',\n        'CMD+NUM6': 'formatH6',\n        'CMD+ENTER': 'insertHorizontalRule',\n        'CMD+K': 'linkDialog.show',\n      },\n    },\n    icons: {\n      'align': 'note-icon-align',\n      'alignCenter': 'note-icon-align-center',\n      'alignJustify': 'note-icon-align-justify',\n      'alignLeft': 'note-icon-align-left',\n      'alignRight': 'note-icon-align-right',\n      'rowBelow': 'note-icon-row-below',\n      'colBefore': 'note-icon-col-before',\n      'colAfter': 'note-icon-col-after',\n      'rowAbove': 'note-icon-row-above',\n      'rowRemove': 'note-icon-row-remove',\n      'colRemove': 'note-icon-col-remove',\n      'indent': 'note-icon-align-indent',\n      'outdent': 'note-icon-align-outdent',\n      'arrowsAlt': 'note-icon-arrows-alt',\n      'bold': 'note-icon-bold',\n      'caret': 'note-icon-caret',\n      'circle': 'note-icon-circle',\n      'close': 'note-icon-close',\n      'code': 'note-icon-code',\n      'eraser': 'note-icon-eraser',\n      'floatLeft': 'note-icon-float-left',\n      'floatRight': 'note-icon-float-right',\n      'font': 'note-icon-font',\n      'frame': 'note-icon-frame',\n      'italic': 'note-icon-italic',\n      'link': 'note-icon-link',\n      'unlink': 'note-icon-chain-broken',\n      'magic': 'note-icon-magic',\n      'menuCheck': 'note-icon-menu-check',\n      'minus': 'note-icon-minus',\n      'orderedlist': 'note-icon-orderedlist',\n      'pencil': 'note-icon-pencil',\n      'picture': 'note-icon-picture',\n      'question': 'note-icon-question',\n      'redo': 'note-icon-redo',\n      'rollback': 'note-icon-rollback',\n      'square': 'note-icon-square',\n      'strikethrough': 'note-icon-strikethrough',\n      'subscript': 'note-icon-subscript',\n      'superscript': 'note-icon-superscript',\n      'table': 'note-icon-table',\n      'textHeight': 'note-icon-text-height',\n      'trash': 'note-icon-trash',\n      'underline': 'note-icon-underline',\n      'undo': 'note-icon-undo',\n      'unorderedlist': 'note-icon-unorderedlist',\n      'video': 'note-icon-video',\n    },\n  },\n});\n","// extracted by mini-css-extract-plugin","import $ from 'jquery';\nimport renderer from '../base/renderer';\n\nconst editor = renderer.create('<div class=\"note-editor note-frame card\"/>');\nconst toolbar = renderer.create('<div class=\"note-toolbar card-header\" role=\"toolbar\"/>');\nconst editingArea = renderer.create('<div class=\"note-editing-area\"/>');\nconst codable = renderer.create('<textarea class=\"note-codable\" aria-multiline=\"true\"/>');\nconst editable = renderer.create('<div class=\"note-editable card-block\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>');\nconst statusbar = renderer.create([\n  '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\n  '<div class=\"note-statusbar\" role=\"status\">',\n    '<div class=\"note-resizebar\" aria-label=\"Resize\">',\n      '<div class=\"note-icon-bar\"></div>',\n      '<div class=\"note-icon-bar\"></div>',\n      '<div class=\"note-icon-bar\"></div>',\n    '</div>',\n  '</div>',\n].join(''));\n\nconst airEditor = renderer.create('<div class=\"note-editor note-airframe\"/>');\nconst airEditable = renderer.create([\n  '<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>',\n  '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\n].join(''));\n\nconst buttonGroup = renderer.create('<div class=\"note-btn-group btn-group\">');\n\nconst dropdown = renderer.create('<div class=\"note-dropdown-menu dropdown-menu\" role=\"list\">', function($node, options) {\n  const markup = Array.isArray(options.items) ? options.items.map(function(item) {\n    const value = (typeof item === 'string') ? item : (item.value || '');\n    const content = options.template ? options.template(item) : item;\n    const option = (typeof item === 'object') ? item.option : undefined;\n\n    const dataValue = 'data-value=\"' + value + '\"';\n    const dataOption = (option !== undefined) ? ' data-option=\"' + option + '\"' : '';\n    return '<a class=\"dropdown-item\" href=\"#\" ' + (dataValue + dataOption) + ' role=\"listitem\" aria-label=\"' + value + '\">' + content + '</a>';\n  }).join('') : options.items;\n\n  $node.html(markup).attr({ 'aria-label': options.title });\n\n  if (options && options.codeviewKeepButton) {\n    $node.addClass('note-codeview-keep');\n  }\n});\n\nconst dropdownButtonContents = function(contents) {\n  return contents;\n};\n\nconst dropdownCheck = renderer.create('<div class=\"note-dropdown-menu dropdown-menu note-check\" role=\"list\">', function($node, options) {\n  const markup = Array.isArray(options.items) ? options.items.map(function(item) {\n    const value = (typeof item === 'string') ? item : (item.value || '');\n    const content = options.template ? options.template(item) : item;\n    return '<a class=\"dropdown-item\" href=\"#\" data-value=\"' + value + '\" role=\"listitem\" aria-label=\"' + item + '\">' + icon(options.checkClassName) + ' ' + content + '</a>';\n  }).join('') : options.items;\n  $node.html(markup).attr({ 'aria-label': options.title });\n\n  if (options && options.codeviewKeepButton) {\n    $node.addClass('note-codeview-keep');\n  }\n});\n\nconst dialog = renderer.create('<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"/>', function($node, options) {\n  if (options.fade) {\n    $node.addClass('fade');\n  }\n  $node.attr({\n    'aria-label': options.title,\n  });\n  $node.html([\n    '<div class=\"modal-dialog\">',\n      '<div class=\"modal-content\">',\n        (options.title ? '<div class=\"modal-header\">' +\n          '<h4 class=\"modal-title\">' + options.title + '</h4>' +\n          '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button>' +\n        '</div>' : ''),\n        '<div class=\"modal-body\">' + options.body + '</div>',\n        (options.footer ? '<div class=\"modal-footer\">' + options.footer + '</div>' : ''),\n      '</div>',\n    '</div>',\n  ].join(''));\n});\n\nconst popover = renderer.create([\n  '<div class=\"note-popover popover in\">',\n    '<div class=\"arrow\"></div>',\n    '<div class=\"popover-content note-children-container\"></div>',\n  '</div>',\n].join(''), function($node, options) {\n  const direction = typeof options.direction !== 'undefined' ? options.direction : 'bottom';\n\n  $node.addClass(direction);\n\n  if (options.hideArrow) {\n    $node.find('.arrow').hide();\n  }\n});\n\nconst checkbox = renderer.create('<div class=\"form-check\"></div>', function($node, options) {\n  $node.html([\n    '<label class=\"form-check-label\"' + (options.id ? ' for=\"note-' + options.id + '\"' : '') + '>',\n      '<input type=\"checkbox\" class=\"form-check-input\"' + (options.id ? ' id=\"note-' + options.id + '\"' : ''),\n        (options.checked ? ' checked' : ''),\n        ' aria-label=\"' + (options.text ? options.text : '') + '\"',\n        ' aria-checked=\"' + (options.checked ? 'true' : 'false') + '\"/>',\n      ' ' + (options.text ? options.text : '') +\n    '</label>',\n  ].join(''));\n});\n\nconst icon = function(iconClassName, tagName) {\n  tagName = tagName || 'i';\n  return '<' + tagName + ' class=\"' + iconClassName + '\"></' + tagName+'>';\n};\n\nconst ui = function(editorOptions) {\n  return {\n    editor: editor,\n    toolbar: toolbar,\n    editingArea: editingArea,\n    codable: codable,\n    editable: editable,\n    statusbar: statusbar,\n    airEditor: airEditor,\n    airEditable: airEditable,\n    buttonGroup: buttonGroup,\n    dropdown: dropdown,\n    dropdownButtonContents: dropdownButtonContents,\n    dropdownCheck: dropdownCheck,\n    dialog: dialog,\n    popover: popover,\n    icon: icon,\n    checkbox: checkbox,\n    options: editorOptions,\n\n    palette: function($node, options) {\n      return renderer.create('<div class=\"note-color-palette\"/>', function($node, options) {\n        const contents = [];\n        for (let row = 0, rowSize = options.colors.length; row < rowSize; row++) {\n          const eventName = options.eventName;\n          const colors = options.colors[row];\n          const colorsName = options.colorsName[row];\n          const buttons = [];\n          for (let col = 0, colSize = colors.length; col < colSize; col++) {\n            const color = colors[col];\n            const colorName = colorsName[col];\n            buttons.push([\n              '<button type=\"button\" class=\"note-color-btn\"',\n              'style=\"background-color:', color, '\" ',\n              'data-event=\"', eventName, '\" ',\n              'data-value=\"', color, '\" ',\n              'title=\"', colorName, '\" ',\n              'aria-label=\"', colorName, '\" ',\n              'data-toggle=\"button\" tabindex=\"-1\"></button>',\n            ].join(''));\n          }\n          contents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\n        }\n        $node.html(contents.join(''));\n\n        if (options.tooltip) {\n          $node.find('.note-color-btn').tooltip({\n            container: options.container || editorOptions.container,\n            trigger: 'hover',\n            placement: 'bottom',\n          });\n        }\n      })($node, options);\n    },\n\n    button: function($node, options) {\n      return renderer.create('<button type=\"button\" class=\"note-btn btn btn-light btn-sm\" tabindex=\"-1\">', function($node, options) {\n        if (options && options.tooltip) {\n          $node.attr({\n            title: options.tooltip,\n            'aria-label': options.tooltip,\n          }).tooltip({\n            container: options.container || editorOptions.container,\n            trigger: 'hover',\n            placement: 'bottom',\n          }).on('click', (e) => {\n            $(e.currentTarget).tooltip('hide');\n          });\n        }\n        if (options && options.codeviewButton) {\n          $node.addClass('note-codeview-keep');\n        }\n      })($node, options);\n    },\n\n    toggleBtn: function($btn, isEnable) {\n      $btn.toggleClass('disabled', !isEnable);\n      $btn.attr('disabled', !isEnable);\n    },\n\n    toggleBtnActive: function($btn, isActive) {\n      $btn.toggleClass('active', isActive);\n    },\n\n    onDialogShown: function($dialog, handler) {\n      $dialog.one('shown.bs.modal', handler);\n    },\n\n    onDialogHidden: function($dialog, handler) {\n      $dialog.one('hidden.bs.modal', handler);\n    },\n\n    showDialog: function($dialog) {\n      $dialog.modal('show');\n    },\n\n    hideDialog: function($dialog) {\n      $dialog.modal('hide');\n    },\n\n    createLayout: function($note) {\n      const $editor = (editorOptions.airMode ? airEditor([\n        editingArea([\n          codable(),\n          airEditable(),\n        ]),\n      ]) : (editorOptions.toolbarPosition === 'bottom'\n        ? editor([\n          editingArea([\n            codable(),\n            editable(),\n          ]),\n          toolbar(),\n          statusbar(),\n        ])\n        : editor([\n          toolbar(),\n          editingArea([\n            codable(),\n            editable(),\n          ]),\n          statusbar(),\n        ])\n      )).render();\n\n      $editor.insertAfter($note);\n\n      return {\n        note: $note,\n        editor: $editor,\n        toolbar: $editor.find('.note-toolbar'),\n        editingArea: $editor.find('.note-editing-area'),\n        editable: $editor.find('.note-editable'),\n        codable: $editor.find('.note-codable'),\n        statusbar: $editor.find('.note-statusbar'),\n      };\n    },\n\n    removeLayout: function($note, layoutInfo) {\n      $note.html(layoutInfo.editable.html());\n      layoutInfo.editor.remove();\n      $note.show();\n    },\n  };\n};\n\nexport default ui;\n","import $ from 'jquery';\nimport ui from './ui';\nimport '../base/settings.js';\n\nimport '../../styles/summernote-bs4.scss';\n\n$.summernote = $.extend($.summernote, {\n  ui_template: ui,\n  interface: 'bs4',\n});\n\n$.summernote.options.styleTags = [\n  'p',\n  { title: 'Blockquote', tag: 'blockquote', className: 'blockquote', value: 'blockquote' },\n  'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}