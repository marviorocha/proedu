{"ast":null,"code":"/**\n * @namespace jvm Holds core methods and classes used by jVectorMap.\n */\nvar jvm = {\n  /**\n   * Inherits child's prototype from the parent's one.\n   * @param {Function} child\n   * @param {Function} parent\n   */\n  inherits: function inherits(child, parent) {\n    function temp() {}\n\n    temp.prototype = parent.prototype;\n    child.prototype = new temp();\n    child.prototype.constructor = child;\n    child.parentClass = parent;\n  },\n\n  /**\n   * Mixes in methods from the source constructor to the target one.\n   * @param {Function} target\n   * @param {Function} source\n   */\n  mixin: function mixin(target, source) {\n    var prop;\n\n    for (prop in source.prototype) {\n      if (source.prototype.hasOwnProperty(prop)) {\n        target.prototype[prop] = source.prototype[prop];\n      }\n    }\n  },\n  min: function min(values) {\n    var min = Number.MAX_VALUE,\n        i;\n\n    if (values instanceof Array) {\n      for (i = 0; i < values.length; i++) {\n        if (values[i] < min) {\n          min = values[i];\n        }\n      }\n    } else {\n      for (i in values) {\n        if (values[i] < min) {\n          min = values[i];\n        }\n      }\n    }\n\n    return min;\n  },\n  max: function max(values) {\n    var max = Number.MIN_VALUE,\n        i;\n\n    if (values instanceof Array) {\n      for (i = 0; i < values.length; i++) {\n        if (values[i] > max) {\n          max = values[i];\n        }\n      }\n    } else {\n      for (i in values) {\n        if (values[i] > max) {\n          max = values[i];\n        }\n      }\n    }\n\n    return max;\n  },\n  keys: function keys(object) {\n    var keys = [],\n        key;\n\n    for (key in object) {\n      keys.push(key);\n    }\n\n    return keys;\n  },\n  values: function values(object) {\n    var values = [],\n        key,\n        i;\n\n    for (i = 0; i < arguments.length; i++) {\n      object = arguments[i];\n\n      for (key in object) {\n        values.push(object[key]);\n      }\n    }\n\n    return values;\n  },\n  whenImageLoaded: function whenImageLoaded(url) {\n    var deferred = new jvm.$.Deferred(),\n        img = jvm.$('<img/>');\n    img.error(function () {\n      deferred.reject();\n    }).load(function () {\n      deferred.resolve(img);\n    });\n    img.attr('src', url);\n    return deferred;\n  },\n  isImageUrl: function isImageUrl(s) {\n    return /\\.\\w{3,4}$/.test(s);\n  }\n};\njvm.$ = jQuery;\n/**\n * indexOf polyfill for IE < 9\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement, fromIndex) {\n    var k; // 1. Let O be the result of calling ToObject passing\n    //    the this value as the argument.\n\n    if (this == null) {\n      throw new TypeError('\"this\" is null or not defined');\n    }\n\n    var O = Object(this); // 2. Let lenValue be the result of calling the Get\n    //    internal method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n\n    var len = O.length >>> 0; // 4. If len is 0, return -1.\n\n    if (len === 0) {\n      return -1;\n    } // 5. If argument fromIndex was passed let n be\n    //    ToInteger(fromIndex); else let n be 0.\n\n\n    var n = +fromIndex || 0;\n\n    if (Math.abs(n) === Infinity) {\n      n = 0;\n    } // 6. If n >= len, return -1.\n\n\n    if (n >= len) {\n      return -1;\n    } // 7. If n >= 0, then Let k be n.\n    // 8. Else, n<0, Let k be len - abs(n).\n    //    If k is less than 0, then let k be 0.\n\n\n    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0); // 9. Repeat, while k < len\n\n    while (k < len) {\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the\n      //    HasProperty internal method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      //    i.  Let elementK be the result of calling the Get\n      //        internal method of O with the argument ToString(k).\n      //   ii.  Let same be the result of applying the\n      //        Strict Equality Comparison Algorithm to\n      //        searchElement and elementK.\n      //  iii.  If same is true, return k.\n      if (k in O && O[k] === searchElement) {\n        return k;\n      }\n\n      k++;\n    }\n\n    return -1;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}